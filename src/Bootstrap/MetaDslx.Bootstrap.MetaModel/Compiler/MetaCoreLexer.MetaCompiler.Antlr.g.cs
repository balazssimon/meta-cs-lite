//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MetaCoreLexer.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.Bootstrap.MetaModel.Compiler {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public partial class MetaCoreLexer : global::MetaDslx.Languages.MetaCompiler.Antlr.AntlrLexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LR_TComma=1, LR_KNamespace=2, LR_KUsing=3, LR_KMetamodel=4, LR_KEnum=5, 
		LR_TLBrace=6, LR_TRBrace=7, LR_KAbstract=8, LR_KClass=9, LR_TColon=10, 
		LR_KContains=11, LR_KOpposite=12, LR_KBool=13, LR_KInt=14, LR_KString=15, 
		LR_TLBracket=16, LR_TRBracket=17, LR_TDot=18, LR_TInteger=19, LR_TDecimal=20, 
		LR_TIdentifier=21, LR_TString=22, LR_TWhitespace=23, LR_TLineEnd=24, LR_TSingleLineComment=25, 
		LR_TMultiLineComment=26;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LR_TComma", "LR_KNamespace", "LR_KUsing", "LR_KMetamodel", "LR_KEnum", 
		"LR_TLBrace", "LR_TRBrace", "LR_KAbstract", "LR_KClass", "LR_TColon", 
		"LR_KContains", "LR_KOpposite", "LR_KBool", "LR_KInt", "LR_KString", "LR_TLBracket", 
		"LR_TRBracket", "LR_TDot", "LR_TInteger", "LR_TDecimal", "LR_TIdentifier", 
		"LR_TString", "LR_TWhitespace", "LR_TLineEnd", "LR_TSingleLineComment", 
		"LR_TMultiLineComment"
	};


	public MetaCoreLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public MetaCoreLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "','", "'namespace'", "'using'", "'metamodel'", "'enum'", "'{'", 
		"'}'", "'abstract'", "'class'", "':'", "'contains'", "'opposite'", "'bool'", 
		"'int'", "'string'", "'['", "']'", "'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LR_TComma", "LR_KNamespace", "LR_KUsing", "LR_KMetamodel", "LR_KEnum", 
		"LR_TLBrace", "LR_TRBrace", "LR_KAbstract", "LR_KClass", "LR_TColon", 
		"LR_KContains", "LR_KOpposite", "LR_KBool", "LR_KInt", "LR_KString", "LR_TLBracket", 
		"LR_TRBracket", "LR_TDot", "LR_TInteger", "LR_TDecimal", "LR_TIdentifier", 
		"LR_TString", "LR_TWhitespace", "LR_TLineEnd", "LR_TSingleLineComment", 
		"LR_TMultiLineComment"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MetaCoreLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static MetaCoreLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,26,232,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,1,0,1,0,1,1,1,1,1,1,1,1,1,
		1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,
		1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,
		7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,
		1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
		1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,
		1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,18,5,18,151,8,18,10,
		18,12,18,154,9,18,3,18,156,8,18,1,19,1,19,1,19,5,19,161,8,19,10,19,12,
		19,164,9,19,3,19,166,8,19,1,19,1,19,4,19,170,8,19,11,19,12,19,171,1,20,
		4,20,175,8,20,11,20,12,20,176,1,20,5,20,180,8,20,10,20,12,20,183,9,20,
		1,21,1,21,5,21,187,8,21,10,21,12,21,190,9,21,1,21,1,21,1,22,4,22,195,8,
		22,11,22,12,22,196,1,22,1,22,1,23,1,23,1,23,3,23,204,8,23,1,23,1,23,1,
		24,1,24,1,24,1,24,5,24,212,8,24,10,24,12,24,215,9,24,1,24,1,24,1,25,1,
		25,1,25,1,25,5,25,223,8,25,10,25,12,25,226,9,25,1,25,1,25,1,25,1,25,1,
		25,2,188,224,0,26,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
		23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,
		47,24,49,25,51,26,1,0,4,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,
		122,2,0,9,9,32,32,2,0,10,10,13,13,243,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,
		0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
		1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
		0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
		1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
		0,0,51,1,0,0,0,1,53,1,0,0,0,3,55,1,0,0,0,5,65,1,0,0,0,7,71,1,0,0,0,9,81,
		1,0,0,0,11,86,1,0,0,0,13,88,1,0,0,0,15,90,1,0,0,0,17,99,1,0,0,0,19,105,
		1,0,0,0,21,107,1,0,0,0,23,116,1,0,0,0,25,125,1,0,0,0,27,130,1,0,0,0,29,
		134,1,0,0,0,31,141,1,0,0,0,33,143,1,0,0,0,35,145,1,0,0,0,37,155,1,0,0,
		0,39,165,1,0,0,0,41,174,1,0,0,0,43,184,1,0,0,0,45,194,1,0,0,0,47,203,1,
		0,0,0,49,207,1,0,0,0,51,218,1,0,0,0,53,54,5,44,0,0,54,2,1,0,0,0,55,56,
		5,110,0,0,56,57,5,97,0,0,57,58,5,109,0,0,58,59,5,101,0,0,59,60,5,115,0,
		0,60,61,5,112,0,0,61,62,5,97,0,0,62,63,5,99,0,0,63,64,5,101,0,0,64,4,1,
		0,0,0,65,66,5,117,0,0,66,67,5,115,0,0,67,68,5,105,0,0,68,69,5,110,0,0,
		69,70,5,103,0,0,70,6,1,0,0,0,71,72,5,109,0,0,72,73,5,101,0,0,73,74,5,116,
		0,0,74,75,5,97,0,0,75,76,5,109,0,0,76,77,5,111,0,0,77,78,5,100,0,0,78,
		79,5,101,0,0,79,80,5,108,0,0,80,8,1,0,0,0,81,82,5,101,0,0,82,83,5,110,
		0,0,83,84,5,117,0,0,84,85,5,109,0,0,85,10,1,0,0,0,86,87,5,123,0,0,87,12,
		1,0,0,0,88,89,5,125,0,0,89,14,1,0,0,0,90,91,5,97,0,0,91,92,5,98,0,0,92,
		93,5,115,0,0,93,94,5,116,0,0,94,95,5,114,0,0,95,96,5,97,0,0,96,97,5,99,
		0,0,97,98,5,116,0,0,98,16,1,0,0,0,99,100,5,99,0,0,100,101,5,108,0,0,101,
		102,5,97,0,0,102,103,5,115,0,0,103,104,5,115,0,0,104,18,1,0,0,0,105,106,
		5,58,0,0,106,20,1,0,0,0,107,108,5,99,0,0,108,109,5,111,0,0,109,110,5,110,
		0,0,110,111,5,116,0,0,111,112,5,97,0,0,112,113,5,105,0,0,113,114,5,110,
		0,0,114,115,5,115,0,0,115,22,1,0,0,0,116,117,5,111,0,0,117,118,5,112,0,
		0,118,119,5,112,0,0,119,120,5,111,0,0,120,121,5,115,0,0,121,122,5,105,
		0,0,122,123,5,116,0,0,123,124,5,101,0,0,124,24,1,0,0,0,125,126,5,98,0,
		0,126,127,5,111,0,0,127,128,5,111,0,0,128,129,5,108,0,0,129,26,1,0,0,0,
		130,131,5,105,0,0,131,132,5,110,0,0,132,133,5,116,0,0,133,28,1,0,0,0,134,
		135,5,115,0,0,135,136,5,116,0,0,136,137,5,114,0,0,137,138,5,105,0,0,138,
		139,5,110,0,0,139,140,5,103,0,0,140,30,1,0,0,0,141,142,5,91,0,0,142,32,
		1,0,0,0,143,144,5,93,0,0,144,34,1,0,0,0,145,146,5,46,0,0,146,36,1,0,0,
		0,147,156,5,48,0,0,148,152,2,49,57,0,149,151,2,48,57,0,150,149,1,0,0,0,
		151,154,1,0,0,0,152,150,1,0,0,0,152,153,1,0,0,0,153,156,1,0,0,0,154,152,
		1,0,0,0,155,147,1,0,0,0,155,148,1,0,0,0,156,38,1,0,0,0,157,166,5,48,0,
		0,158,162,2,49,57,0,159,161,2,48,57,0,160,159,1,0,0,0,161,164,1,0,0,0,
		162,160,1,0,0,0,162,163,1,0,0,0,163,166,1,0,0,0,164,162,1,0,0,0,165,157,
		1,0,0,0,165,158,1,0,0,0,166,167,1,0,0,0,167,169,5,46,0,0,168,170,2,48,
		57,0,169,168,1,0,0,0,170,171,1,0,0,0,171,169,1,0,0,0,171,172,1,0,0,0,172,
		40,1,0,0,0,173,175,7,0,0,0,174,173,1,0,0,0,175,176,1,0,0,0,176,174,1,0,
		0,0,176,177,1,0,0,0,177,181,1,0,0,0,178,180,7,1,0,0,179,178,1,0,0,0,180,
		183,1,0,0,0,181,179,1,0,0,0,181,182,1,0,0,0,182,42,1,0,0,0,183,181,1,0,
		0,0,184,188,5,34,0,0,185,187,9,0,0,0,186,185,1,0,0,0,187,190,1,0,0,0,188,
		189,1,0,0,0,188,186,1,0,0,0,189,191,1,0,0,0,190,188,1,0,0,0,191,192,5,
		34,0,0,192,44,1,0,0,0,193,195,7,2,0,0,194,193,1,0,0,0,195,196,1,0,0,0,
		196,194,1,0,0,0,196,197,1,0,0,0,197,198,1,0,0,0,198,199,6,22,0,0,199,46,
		1,0,0,0,200,201,5,13,0,0,201,204,5,10,0,0,202,204,7,3,0,0,203,200,1,0,
		0,0,203,202,1,0,0,0,204,205,1,0,0,0,205,206,6,23,0,0,206,48,1,0,0,0,207,
		208,5,47,0,0,208,209,5,47,0,0,209,213,1,0,0,0,210,212,8,3,0,0,211,210,
		1,0,0,0,212,215,1,0,0,0,213,211,1,0,0,0,213,214,1,0,0,0,214,216,1,0,0,
		0,215,213,1,0,0,0,216,217,6,24,0,0,217,50,1,0,0,0,218,219,5,47,0,0,219,
		220,5,42,0,0,220,224,1,0,0,0,221,223,9,0,0,0,222,221,1,0,0,0,223,226,1,
		0,0,0,224,225,1,0,0,0,224,222,1,0,0,0,225,227,1,0,0,0,226,224,1,0,0,0,
		227,228,5,42,0,0,228,229,5,47,0,0,229,230,1,0,0,0,230,231,6,25,0,0,231,
		52,1,0,0,0,13,0,152,155,162,165,171,176,181,188,196,203,213,224,1,0,1,
		0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace MetaDslx.Bootstrap.MetaModel.Compiler
