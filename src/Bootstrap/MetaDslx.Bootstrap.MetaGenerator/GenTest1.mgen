namespace MetaDslx.Bootstrap.MetaGenerator;

using System;
using System.Linq;

generator GenTest1;

template SayHelloSep1(IEnumerable<string> names)
    [foreach (var name in names)]
        Hello, [name]!
    [end foreach]
end template

template SayHelloSep2(IEnumerable<string> names)
    [foreach (var name in names) separator "===\r\n"]
        Hello, [name]!
    [end foreach]
end template

template SayHelloSep3(IEnumerable<string> names)
    [foreach (var name in names) before ">>>\r\n" separator "---\r\n" after "<<<\r\n"]
        Hello, [name]!
    [end foreach]
end template

template SayHelloSep4(IEnumerable<string> names)
    [names separator ", "]
end template

template SayHelloSep5(IEnumerable<string> names)
    [names before "[" separator ", " after "]"]
end template

template SayHello1(string name)
Hello, [name]!
end template

template SayHello2(string name)
  Hello, [name]!
end template

template SayHello3(string name)
  [if (name != "Alice")]
    Hello, [name]!
  [end if]
end template

template SayHello4(string name)
  [if (name != "Alice")]
    Hello, [name]!
      Hello2, [name]!
  [end if]
end template

template SayHello5(string name)
  [if (name != "Alice")]
    Hello, [name]!
    [SayHello1(name)]
      [SayHello2(name)]
      AAA
     BB
    CC
    aa
   DD
  EE
  [end if]
end template

template SayHello6(string name)
[<]
  [if (name != "Alice")]
    Hello, [name]!
      Hello2, [name]!
  [end if]
end template

template SayHello7(string name)
[<]
  [if (name != "Alice")]
    Hello, [name]!
      Hello2, [name]!
  [end if]
[>]
  [if (name != "Alice")]
    Hello, [name]!
      Hello2, [name]!
  [end if]
[<]
  [if (name != "Alice")]
    Hello, [name]!
      Hello2, [name]!
  [end if]
[>]
  [if (name != "Alice")]
    Hello, [name]!
      Hello2, [name]!
  [end if]
end template

template SayHelloIf(IEnumerable<string> names, bool morning)
  [foreach (var name in names)]
    [if (morning)]
    Good morning, [name]!
    [else]
    Good evening, [name]!
    [end if]
  [end foreach]
end template

template SayHelloSC(string name, int time)
[<]
  [switch (time)]
    [case 1:]
      Good morning, [name]!
    [case 2: case 3:]
      Good afternoon, [name]!
    [case 4:][case 5:]
      Good evening, [name]!
    [default:]
      Hello, [name]!
  [end switch]
end template
