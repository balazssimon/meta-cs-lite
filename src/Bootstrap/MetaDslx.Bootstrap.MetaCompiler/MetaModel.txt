namespace MetaDslx.Examples.MetaModel;

using System;
using MetaDslx.CodeAnalysis.Annotations;
using MetaDslx.Examples.MetaModel.Model;

language MetaModel;

[Root(MetaNamespace)]
main : namespaceDeclaration usingDeclaration* declaration* eof;

[Define(MetaNamespace)]
namespaceDeclaration : 'namespace' [Nesting(MetaNamespace,Declarations)] qualifiedName ';';

usingDeclaration : 'using' qualifier ';';

declaration : enumDeclaration | classDeclaration | associationDeclaration;

[Define(MetaEnum)]
enumDeclaration : 'enum' name '{' enumLiterals? '}';

enumLiterals : enumLiteral (',' enumLiteral)* ','?;

[Define(MetaEnumLiteral)]
enumLiteral : name;

[Define(MetaClass)]
classDeclaration : isAbstract?='abstract'? 'class' name (':' qualifier (',' qualifier)*)? '{' propertyDeclaration* '}';

[Define(MetaProperty)]
propertyDeclaration : typeReference name ';';

associationDeclaration : 'association' qualifier 'with' qualifier ';';

typeReference : primitiveType | collectionType | qualifier;

primitiveType 
	: [Constant(Meta.Int)] 'int' 
	| [Constant(Meta.String)] 'string' 
	| [Constant(Meta.Bool)] 'bool';

collectionType : ('list' | 'set') '<' typeReference '>';

[Name]
qualifiedName : qualifier;

[Qualifier]
qualifier : identifier ('.' identifier)*;

[Name]
name : identifier;

identifier : TIdentifier;

TInteger : '0'| '1'..'9' ('0'..'9')* ;
TDecimal : ('0'|'1'..'9' ('0'..'9')*) '.' ('0'..'9')+ ;

[Default]
[Identifier]
TIdentifier : ('_'|'a'..'z'|'A'..'Z')+('_'|'a'..'z'|'A'..'Z'|'0'..'9')*;

[Default]
[Separator]
TComma : ',' ;

[Default]
[Whitespace]
hidden TWhitespace : ('\t'|' ') +;

[Default]
[EndOfLine]
hidden TLineEnd : ('\r\n' | '\r' | '\n');

hidden TSingleLineComment : '//' ('\r' | '\n')*?;

hidden TMultiLineComment : '/*' .*? '*/';
