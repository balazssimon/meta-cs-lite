//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CompilerLexer.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.Bootstrap.MetaCompiler.Compiler {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public partial class CompilerLexer : global::MetaDslx.CodeAnalysis.Parsers.Antlr.AntlrLexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LR_TComma=1, LR_TUtf8Bom=2, LR_KNamespace=3, LR_TSemicolon=4, LR_KUsing=5, 
		LR_KMetamodel=6, LR_KSymbols=7, LR_KLanguage=8, LR_TColon=9, LR_KBlock=10, 
		LR_TLParen=11, LR_TRParen=12, LR_THash=13, LR_THashLBrace=14, LR_TRBrace=15, 
		LR_KEof=16, LR_KFragment=17, LR_TTilde=18, LR_TDot=19, LR_TDotDot=20, 
		LR_TLBrace=21, LR_TLBracket=22, LR_TRBracket=23, LR_TEq=24, LR_TQuestionEq=25, 
		LR_TExclEq=26, LR_TPlusEq=27, LR_TQuestion=28, LR_TAsterisk=29, LR_TPlus=30, 
		LR_TQuestionQuestion=31, LR_TAsteriskQuestion=32, LR_TPlusQuestion=33, 
		LR_KReturns=34, LR_TBar=35, LR_KAlt=36, LR_TEqGt=37, LR_KToken=38, LR_KHidden=39, 
		LR_KNull=40, LR_KTrue=41, LR_KFalse=42, LR_TInteger=43, LR_TDecimal=44, 
		LR_TPrimitiveType=45, LR_TIdentifier=46, LR_TVerbatimIdentifier=47, LR_TString=48, 
		LR_TWhitespace=49, LR_TLineEnd=50, LR_TSingleLineComment=51, LR_TMultiLineComment=52, 
		LR_TInvalidToken=53;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LR_TComma", "LR_TUtf8Bom", "LR_KNamespace", "LR_TSemicolon", "LR_KUsing", 
		"LR_KMetamodel", "LR_KSymbols", "LR_KLanguage", "LR_TColon", "LR_KBlock", 
		"LR_TLParen", "LR_TRParen", "LR_THash", "LR_THashLBrace", "LR_TRBrace", 
		"LR_KEof", "LR_KFragment", "LR_TTilde", "LR_TDot", "LR_TDotDot", "LR_TLBrace", 
		"LR_TLBracket", "LR_TRBracket", "LR_TEq", "LR_TQuestionEq", "LR_TExclEq", 
		"LR_TPlusEq", "LR_TQuestion", "LR_TAsterisk", "LR_TPlus", "LR_TQuestionQuestion", 
		"LR_TAsteriskQuestion", "LR_TPlusQuestion", "LR_KReturns", "LR_TBar", 
		"LR_KAlt", "LR_TEqGt", "LR_KToken", "LR_KHidden", "LR_KNull", "LR_KTrue", 
		"LR_KFalse", "LR_TInteger", "LR_TDecimal", "LR_TPrimitiveType", "LR_TIdentifier", 
		"LR_TVerbatimIdentifier", "LR_TString", "LR_TWhitespace", "LR_TLineEnd", 
		"LR_TSingleLineComment", "LR_TMultiLineComment", "LR_TInvalidToken", "FR_DoubleQuoteTextCharacter", 
		"FR_DoubleQuoteTextSimple", "FR_SingleQuoteTextCharacter", "FR_SingleQuoteTextSimple", 
		"FR_CharacterEscapeSimple", "FR_CharacterEscapeSimpleCharacter", "FR_CharacterEscapeUnicode", 
		"FR_HexDigit"
	};


	public CompilerLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CompilerLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "','", null, "'namespace'", "';'", "'using'", "'metamodel'", "'symbols'", 
		"'language'", "':'", "'block'", "'('", "')'", "'#'", "'#{'", "'}'", "'eof'", 
		"'fragment'", "'~'", "'.'", "'..'", "'{'", "'['", "']'", "'='", "'?='", 
		"'!='", "'+='", "'?'", "'*'", "'+'", "'??'", "'*?'", "'+?'", "'returns'", 
		"'|'", "'alt'", "'=>'", "'token'", "'hidden'", "'null'", "'true'", "'false'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LR_TComma", "LR_TUtf8Bom", "LR_KNamespace", "LR_TSemicolon", "LR_KUsing", 
		"LR_KMetamodel", "LR_KSymbols", "LR_KLanguage", "LR_TColon", "LR_KBlock", 
		"LR_TLParen", "LR_TRParen", "LR_THash", "LR_THashLBrace", "LR_TRBrace", 
		"LR_KEof", "LR_KFragment", "LR_TTilde", "LR_TDot", "LR_TDotDot", "LR_TLBrace", 
		"LR_TLBracket", "LR_TRBracket", "LR_TEq", "LR_TQuestionEq", "LR_TExclEq", 
		"LR_TPlusEq", "LR_TQuestion", "LR_TAsterisk", "LR_TPlus", "LR_TQuestionQuestion", 
		"LR_TAsteriskQuestion", "LR_TPlusQuestion", "LR_KReturns", "LR_TBar", 
		"LR_KAlt", "LR_TEqGt", "LR_KToken", "LR_KHidden", "LR_KNull", "LR_KTrue", 
		"LR_KFalse", "LR_TInteger", "LR_TDecimal", "LR_TPrimitiveType", "LR_TIdentifier", 
		"LR_TVerbatimIdentifier", "LR_TString", "LR_TWhitespace", "LR_TLineEnd", 
		"LR_TSingleLineComment", "LR_TMultiLineComment", "LR_TInvalidToken"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CompilerLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static CompilerLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,53,481,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,1,0,1,0,1,1,1,1,1,1,1,1,1,
		1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,
		1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,
		6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,
		1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,15,1,
		15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,
		18,1,18,1,19,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,
		24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,
		30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,
		33,1,33,1,33,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,
		37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,
		39,1,39,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,
		42,1,42,5,42,297,8,42,10,42,12,42,300,9,42,3,42,302,8,42,1,43,1,43,1,43,
		5,43,307,8,43,10,43,12,43,310,9,43,3,43,312,8,43,1,43,1,43,4,43,316,8,
		43,11,43,12,43,317,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,
		44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,
		44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,3,44,353,8,44,1,45,4,45,356,
		8,45,11,45,12,45,357,1,45,5,45,361,8,45,10,45,12,45,364,9,45,1,46,1,46,
		4,46,368,8,46,11,46,12,46,369,1,46,5,46,373,8,46,10,46,12,46,376,9,46,
		1,47,1,47,5,47,380,8,47,10,47,12,47,383,9,47,1,47,1,47,1,47,5,47,388,8,
		47,10,47,12,47,391,9,47,1,47,3,47,394,8,47,1,48,4,48,397,8,48,11,48,12,
		48,398,1,48,1,48,1,49,1,49,1,49,3,49,406,8,49,1,49,1,49,1,50,1,50,1,50,
		1,50,5,50,414,8,50,10,50,12,50,417,9,50,1,50,1,50,1,51,1,51,1,51,1,51,
		5,51,425,8,51,10,51,12,51,428,9,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,
		1,52,1,52,1,53,1,53,1,53,3,53,442,8,53,1,54,1,54,1,55,1,55,1,55,3,55,449,
		8,55,1,56,1,56,1,57,1,57,1,57,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,
		1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,
		3,59,478,8,59,1,60,1,60,1,426,0,61,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
		17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
		41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,
		65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,
		89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,0,109,0,111,
		0,113,0,115,0,117,0,119,0,121,0,1,0,8,3,0,65,90,95,95,97,122,4,0,48,57,
		65,90,95,95,97,122,2,0,9,9,32,32,2,0,10,10,13,13,6,0,10,10,13,13,34,34,
		92,92,133,133,8232,8233,6,0,10,10,13,13,39,39,92,92,133,133,8232,8233,
		10,0,34,34,39,39,48,48,92,92,97,98,102,102,110,110,114,114,116,116,118,
		118,3,0,48,57,65,70,97,102,499,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
		1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
		0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
		1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
		0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
		1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
		0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
		1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,
		0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
		1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,
		0,0,0,1,123,1,0,0,0,3,125,1,0,0,0,5,131,1,0,0,0,7,141,1,0,0,0,9,143,1,
		0,0,0,11,149,1,0,0,0,13,159,1,0,0,0,15,167,1,0,0,0,17,176,1,0,0,0,19,178,
		1,0,0,0,21,184,1,0,0,0,23,186,1,0,0,0,25,188,1,0,0,0,27,190,1,0,0,0,29,
		193,1,0,0,0,31,195,1,0,0,0,33,199,1,0,0,0,35,208,1,0,0,0,37,210,1,0,0,
		0,39,212,1,0,0,0,41,215,1,0,0,0,43,217,1,0,0,0,45,219,1,0,0,0,47,221,1,
		0,0,0,49,223,1,0,0,0,51,226,1,0,0,0,53,229,1,0,0,0,55,232,1,0,0,0,57,234,
		1,0,0,0,59,236,1,0,0,0,61,238,1,0,0,0,63,241,1,0,0,0,65,244,1,0,0,0,67,
		247,1,0,0,0,69,255,1,0,0,0,71,257,1,0,0,0,73,261,1,0,0,0,75,264,1,0,0,
		0,77,270,1,0,0,0,79,277,1,0,0,0,81,282,1,0,0,0,83,287,1,0,0,0,85,301,1,
		0,0,0,87,311,1,0,0,0,89,352,1,0,0,0,91,355,1,0,0,0,93,365,1,0,0,0,95,393,
		1,0,0,0,97,396,1,0,0,0,99,405,1,0,0,0,101,409,1,0,0,0,103,420,1,0,0,0,
		105,434,1,0,0,0,107,441,1,0,0,0,109,443,1,0,0,0,111,448,1,0,0,0,113,450,
		1,0,0,0,115,452,1,0,0,0,117,455,1,0,0,0,119,477,1,0,0,0,121,479,1,0,0,
		0,123,124,5,44,0,0,124,2,1,0,0,0,125,126,5,239,0,0,126,127,5,187,0,0,127,
		128,5,191,0,0,128,129,1,0,0,0,129,130,6,1,0,0,130,4,1,0,0,0,131,132,5,
		110,0,0,132,133,5,97,0,0,133,134,5,109,0,0,134,135,5,101,0,0,135,136,5,
		115,0,0,136,137,5,112,0,0,137,138,5,97,0,0,138,139,5,99,0,0,139,140,5,
		101,0,0,140,6,1,0,0,0,141,142,5,59,0,0,142,8,1,0,0,0,143,144,5,117,0,0,
		144,145,5,115,0,0,145,146,5,105,0,0,146,147,5,110,0,0,147,148,5,103,0,
		0,148,10,1,0,0,0,149,150,5,109,0,0,150,151,5,101,0,0,151,152,5,116,0,0,
		152,153,5,97,0,0,153,154,5,109,0,0,154,155,5,111,0,0,155,156,5,100,0,0,
		156,157,5,101,0,0,157,158,5,108,0,0,158,12,1,0,0,0,159,160,5,115,0,0,160,
		161,5,121,0,0,161,162,5,109,0,0,162,163,5,98,0,0,163,164,5,111,0,0,164,
		165,5,108,0,0,165,166,5,115,0,0,166,14,1,0,0,0,167,168,5,108,0,0,168,169,
		5,97,0,0,169,170,5,110,0,0,170,171,5,103,0,0,171,172,5,117,0,0,172,173,
		5,97,0,0,173,174,5,103,0,0,174,175,5,101,0,0,175,16,1,0,0,0,176,177,5,
		58,0,0,177,18,1,0,0,0,178,179,5,98,0,0,179,180,5,108,0,0,180,181,5,111,
		0,0,181,182,5,99,0,0,182,183,5,107,0,0,183,20,1,0,0,0,184,185,5,40,0,0,
		185,22,1,0,0,0,186,187,5,41,0,0,187,24,1,0,0,0,188,189,5,35,0,0,189,26,
		1,0,0,0,190,191,5,35,0,0,191,192,5,123,0,0,192,28,1,0,0,0,193,194,5,125,
		0,0,194,30,1,0,0,0,195,196,5,101,0,0,196,197,5,111,0,0,197,198,5,102,0,
		0,198,32,1,0,0,0,199,200,5,102,0,0,200,201,5,114,0,0,201,202,5,97,0,0,
		202,203,5,103,0,0,203,204,5,109,0,0,204,205,5,101,0,0,205,206,5,110,0,
		0,206,207,5,116,0,0,207,34,1,0,0,0,208,209,5,126,0,0,209,36,1,0,0,0,210,
		211,5,46,0,0,211,38,1,0,0,0,212,213,5,46,0,0,213,214,5,46,0,0,214,40,1,
		0,0,0,215,216,5,123,0,0,216,42,1,0,0,0,217,218,5,91,0,0,218,44,1,0,0,0,
		219,220,5,93,0,0,220,46,1,0,0,0,221,222,5,61,0,0,222,48,1,0,0,0,223,224,
		5,63,0,0,224,225,5,61,0,0,225,50,1,0,0,0,226,227,5,33,0,0,227,228,5,61,
		0,0,228,52,1,0,0,0,229,230,5,43,0,0,230,231,5,61,0,0,231,54,1,0,0,0,232,
		233,5,63,0,0,233,56,1,0,0,0,234,235,5,42,0,0,235,58,1,0,0,0,236,237,5,
		43,0,0,237,60,1,0,0,0,238,239,5,63,0,0,239,240,5,63,0,0,240,62,1,0,0,0,
		241,242,5,42,0,0,242,243,5,63,0,0,243,64,1,0,0,0,244,245,5,43,0,0,245,
		246,5,63,0,0,246,66,1,0,0,0,247,248,5,114,0,0,248,249,5,101,0,0,249,250,
		5,116,0,0,250,251,5,117,0,0,251,252,5,114,0,0,252,253,5,110,0,0,253,254,
		5,115,0,0,254,68,1,0,0,0,255,256,5,124,0,0,256,70,1,0,0,0,257,258,5,97,
		0,0,258,259,5,108,0,0,259,260,5,116,0,0,260,72,1,0,0,0,261,262,5,61,0,
		0,262,263,5,62,0,0,263,74,1,0,0,0,264,265,5,116,0,0,265,266,5,111,0,0,
		266,267,5,107,0,0,267,268,5,101,0,0,268,269,5,110,0,0,269,76,1,0,0,0,270,
		271,5,104,0,0,271,272,5,105,0,0,272,273,5,100,0,0,273,274,5,100,0,0,274,
		275,5,101,0,0,275,276,5,110,0,0,276,78,1,0,0,0,277,278,5,110,0,0,278,279,
		5,117,0,0,279,280,5,108,0,0,280,281,5,108,0,0,281,80,1,0,0,0,282,283,5,
		116,0,0,283,284,5,114,0,0,284,285,5,117,0,0,285,286,5,101,0,0,286,82,1,
		0,0,0,287,288,5,102,0,0,288,289,5,97,0,0,289,290,5,108,0,0,290,291,5,115,
		0,0,291,292,5,101,0,0,292,84,1,0,0,0,293,302,5,48,0,0,294,298,2,49,57,
		0,295,297,2,48,57,0,296,295,1,0,0,0,297,300,1,0,0,0,298,296,1,0,0,0,298,
		299,1,0,0,0,299,302,1,0,0,0,300,298,1,0,0,0,301,293,1,0,0,0,301,294,1,
		0,0,0,302,86,1,0,0,0,303,312,5,48,0,0,304,308,2,49,57,0,305,307,2,48,57,
		0,306,305,1,0,0,0,307,310,1,0,0,0,308,306,1,0,0,0,308,309,1,0,0,0,309,
		312,1,0,0,0,310,308,1,0,0,0,311,303,1,0,0,0,311,304,1,0,0,0,312,313,1,
		0,0,0,313,315,5,46,0,0,314,316,2,48,57,0,315,314,1,0,0,0,316,317,1,0,0,
		0,317,315,1,0,0,0,317,318,1,0,0,0,318,88,1,0,0,0,319,320,5,98,0,0,320,
		321,5,111,0,0,321,322,5,111,0,0,322,353,5,108,0,0,323,324,5,105,0,0,324,
		325,5,110,0,0,325,353,5,116,0,0,326,327,5,115,0,0,327,328,5,116,0,0,328,
		329,5,114,0,0,329,330,5,105,0,0,330,331,5,110,0,0,331,353,5,103,0,0,332,
		333,5,116,0,0,333,334,5,121,0,0,334,335,5,112,0,0,335,353,5,101,0,0,336,
		337,5,115,0,0,337,338,5,121,0,0,338,339,5,109,0,0,339,340,5,98,0,0,340,
		341,5,111,0,0,341,353,5,108,0,0,342,343,5,111,0,0,343,344,5,98,0,0,344,
		345,5,106,0,0,345,346,5,101,0,0,346,347,5,99,0,0,347,353,5,116,0,0,348,
		349,5,118,0,0,349,350,5,111,0,0,350,351,5,105,0,0,351,353,5,100,0,0,352,
		319,1,0,0,0,352,323,1,0,0,0,352,326,1,0,0,0,352,332,1,0,0,0,352,336,1,
		0,0,0,352,342,1,0,0,0,352,348,1,0,0,0,353,90,1,0,0,0,354,356,7,0,0,0,355,
		354,1,0,0,0,356,357,1,0,0,0,357,355,1,0,0,0,357,358,1,0,0,0,358,362,1,
		0,0,0,359,361,7,1,0,0,360,359,1,0,0,0,361,364,1,0,0,0,362,360,1,0,0,0,
		362,363,1,0,0,0,363,92,1,0,0,0,364,362,1,0,0,0,365,367,5,64,0,0,366,368,
		7,0,0,0,367,366,1,0,0,0,368,369,1,0,0,0,369,367,1,0,0,0,369,370,1,0,0,
		0,370,374,1,0,0,0,371,373,7,1,0,0,372,371,1,0,0,0,373,376,1,0,0,0,374,
		372,1,0,0,0,374,375,1,0,0,0,375,94,1,0,0,0,376,374,1,0,0,0,377,381,5,34,
		0,0,378,380,3,107,53,0,379,378,1,0,0,0,380,383,1,0,0,0,381,379,1,0,0,0,
		381,382,1,0,0,0,382,384,1,0,0,0,383,381,1,0,0,0,384,394,5,34,0,0,385,389,
		5,39,0,0,386,388,3,111,55,0,387,386,1,0,0,0,388,391,1,0,0,0,389,387,1,
		0,0,0,389,390,1,0,0,0,390,392,1,0,0,0,391,389,1,0,0,0,392,394,5,39,0,0,
		393,377,1,0,0,0,393,385,1,0,0,0,394,96,1,0,0,0,395,397,7,2,0,0,396,395,
		1,0,0,0,397,398,1,0,0,0,398,396,1,0,0,0,398,399,1,0,0,0,399,400,1,0,0,
		0,400,401,6,48,0,0,401,98,1,0,0,0,402,403,5,13,0,0,403,406,5,10,0,0,404,
		406,7,3,0,0,405,402,1,0,0,0,405,404,1,0,0,0,406,407,1,0,0,0,407,408,6,
		49,0,0,408,100,1,0,0,0,409,410,5,47,0,0,410,411,5,47,0,0,411,415,1,0,0,
		0,412,414,8,3,0,0,413,412,1,0,0,0,414,417,1,0,0,0,415,413,1,0,0,0,415,
		416,1,0,0,0,416,418,1,0,0,0,417,415,1,0,0,0,418,419,6,50,0,0,419,102,1,
		0,0,0,420,421,5,47,0,0,421,422,5,42,0,0,422,426,1,0,0,0,423,425,9,0,0,
		0,424,423,1,0,0,0,425,428,1,0,0,0,426,427,1,0,0,0,426,424,1,0,0,0,427,
		429,1,0,0,0,428,426,1,0,0,0,429,430,5,42,0,0,430,431,5,47,0,0,431,432,
		1,0,0,0,432,433,6,51,0,0,433,104,1,0,0,0,434,435,9,0,0,0,435,436,1,0,0,
		0,436,437,6,52,0,0,437,106,1,0,0,0,438,442,3,109,54,0,439,442,3,115,57,
		0,440,442,3,119,59,0,441,438,1,0,0,0,441,439,1,0,0,0,441,440,1,0,0,0,442,
		108,1,0,0,0,443,444,8,4,0,0,444,110,1,0,0,0,445,449,3,113,56,0,446,449,
		3,115,57,0,447,449,3,119,59,0,448,445,1,0,0,0,448,446,1,0,0,0,448,447,
		1,0,0,0,449,112,1,0,0,0,450,451,8,5,0,0,451,114,1,0,0,0,452,453,5,92,0,
		0,453,454,3,117,58,0,454,116,1,0,0,0,455,456,7,6,0,0,456,118,1,0,0,0,457,
		458,5,92,0,0,458,459,5,117,0,0,459,460,1,0,0,0,460,461,3,121,60,0,461,
		462,3,121,60,0,462,463,3,121,60,0,463,464,3,121,60,0,464,478,1,0,0,0,465,
		466,5,92,0,0,466,467,5,85,0,0,467,468,1,0,0,0,468,469,3,121,60,0,469,470,
		3,121,60,0,470,471,3,121,60,0,471,472,3,121,60,0,472,473,3,121,60,0,473,
		474,3,121,60,0,474,475,3,121,60,0,475,476,3,121,60,0,476,478,1,0,0,0,477,
		457,1,0,0,0,477,465,1,0,0,0,478,120,1,0,0,0,479,480,7,7,0,0,480,122,1,
		0,0,0,21,0,298,301,308,311,317,352,357,362,369,374,381,389,393,398,405,
		415,426,441,448,477,1,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace MetaDslx.Bootstrap.MetaCompiler.Compiler
