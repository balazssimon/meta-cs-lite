//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CompilerLexer.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.Bootstrap.MetaCompiler.Compiler {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public partial class CompilerLexer : global::MetaDslx.CodeAnalysis.Parsers.Antlr.AntlrLexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LR_TComma=1, LR_Utf8Bom=2, LR_KNamespace=3, LR_TSemicolon=4, LR_KUsing=5, 
		LR_KLanguage=6, LR_KReturns=7, LR_TColon=8, LR_TBar=9, LR_KBlock=10, LR_TLParen=11, 
		LR_TRParen=12, LR_KAlt=13, LR_TEqGt=14, LR_THash=15, LR_THashLBrace=16, 
		LR_TRBrace=17, LR_KEof=18, LR_KToken=19, LR_KHidden=20, LR_TTilde=21, 
		LR_TDot=22, LR_TDotDot=23, LR_KNull=24, LR_KTrue=25, LR_KFalse=26, LR_TLBrace=27, 
		LR_TLBracket=28, LR_TRBracket=29, LR_TEq=30, LR_TQuestionEq=31, LR_TExclEq=32, 
		LR_TPlusEq=33, LR_TQuestion=34, LR_TAsterisk=35, LR_TPlus=36, LR_TQuestionQuestion=37, 
		LR_TAsteriskQuestion=38, LR_TPlusQuestion=39, LR_TInteger=40, LR_TDecimal=41, 
		LR_TPrimitiveType=42, LR_TIdentifier=43, LR_TVerbatimIdentifier=44, LR_TString=45, 
		LR_TWhitespace=46, LR_TLineEnd=47, LR_TSingleLineComment=48, LR_TMultiLineComment=49, 
		LR_TInvalidToken=50;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LR_TComma", "LR_Utf8Bom", "LR_KNamespace", "LR_TSemicolon", "LR_KUsing", 
		"LR_KLanguage", "LR_KReturns", "LR_TColon", "LR_TBar", "LR_KBlock", "LR_TLParen", 
		"LR_TRParen", "LR_KAlt", "LR_TEqGt", "LR_THash", "LR_THashLBrace", "LR_TRBrace", 
		"LR_KEof", "LR_KToken", "LR_KHidden", "LR_TTilde", "LR_TDot", "LR_TDotDot", 
		"LR_KNull", "LR_KTrue", "LR_KFalse", "LR_TLBrace", "LR_TLBracket", "LR_TRBracket", 
		"LR_TEq", "LR_TQuestionEq", "LR_TExclEq", "LR_TPlusEq", "LR_TQuestion", 
		"LR_TAsterisk", "LR_TPlus", "LR_TQuestionQuestion", "LR_TAsteriskQuestion", 
		"LR_TPlusQuestion", "LR_TInteger", "LR_TDecimal", "LR_TPrimitiveType", 
		"LR_TIdentifier", "LR_TVerbatimIdentifier", "LR_TString", "LR_DoubleQuoteTextCharacter", 
		"LR_DoubleQuoteTextSimple", "LR_SingleQuoteTextCharacter", "LR_SingleQuoteTextSimple", 
		"LR_CharacterEscapeSimple", "LR_CharacterEscapeSimpleCharacter", "LR_CharacterEscapeUnicode", 
		"LR_HexDigit", "LR_TWhitespace", "LR_TLineEnd", "LR_TSingleLineComment", 
		"LR_TMultiLineComment", "LR_TInvalidToken"
	};


	public CompilerLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CompilerLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "','", null, "'namespace'", "';'", "'using'", "'language'", "'returns'", 
		"':'", "'|'", "'block'", "'('", "')'", "'alt'", "'=>'", "'#'", "'#{'", 
		"'}'", "'eof'", "'token'", "'hidden'", "'~'", "'.'", "'..'", "'null'", 
		"'true'", "'false'", "'{'", "'['", "']'", "'='", "'?='", "'!='", "'+='", 
		"'?'", "'*'", "'+'", "'??'", "'*?'", "'+?'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LR_TComma", "LR_Utf8Bom", "LR_KNamespace", "LR_TSemicolon", "LR_KUsing", 
		"LR_KLanguage", "LR_KReturns", "LR_TColon", "LR_TBar", "LR_KBlock", "LR_TLParen", 
		"LR_TRParen", "LR_KAlt", "LR_TEqGt", "LR_THash", "LR_THashLBrace", "LR_TRBrace", 
		"LR_KEof", "LR_KToken", "LR_KHidden", "LR_TTilde", "LR_TDot", "LR_TDotDot", 
		"LR_KNull", "LR_KTrue", "LR_KFalse", "LR_TLBrace", "LR_TLBracket", "LR_TRBracket", 
		"LR_TEq", "LR_TQuestionEq", "LR_TExclEq", "LR_TPlusEq", "LR_TQuestion", 
		"LR_TAsterisk", "LR_TPlus", "LR_TQuestionQuestion", "LR_TAsteriskQuestion", 
		"LR_TPlusQuestion", "LR_TInteger", "LR_TDecimal", "LR_TPrimitiveType", 
		"LR_TIdentifier", "LR_TVerbatimIdentifier", "LR_TString", "LR_TWhitespace", 
		"LR_TLineEnd", "LR_TSingleLineComment", "LR_TMultiLineComment", "LR_TInvalidToken"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CompilerLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static CompilerLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,50,446,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,
		1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,
		5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,
		1,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,
		1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,
		1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,21,1,21,
		1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,25,
		1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,
		1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,
		1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,5,39,264,8,
		39,10,39,12,39,267,9,39,3,39,269,8,39,1,40,1,40,1,40,5,40,274,8,40,10,
		40,12,40,277,9,40,3,40,279,8,40,1,40,1,40,4,40,283,8,40,11,40,12,40,284,
		1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
		1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
		1,41,1,41,1,41,1,41,1,41,3,41,320,8,41,1,42,4,42,323,8,42,11,42,12,42,
		324,1,42,5,42,328,8,42,10,42,12,42,331,9,42,1,43,1,43,4,43,335,8,43,11,
		43,12,43,336,1,43,5,43,340,8,43,10,43,12,43,343,9,43,1,44,1,44,5,44,347,
		8,44,10,44,12,44,350,9,44,1,44,1,44,1,44,5,44,355,8,44,10,44,12,44,358,
		9,44,1,44,3,44,361,8,44,1,45,1,45,1,45,3,45,366,8,45,1,46,1,46,1,47,1,
		47,1,47,3,47,373,8,47,1,48,1,48,1,49,1,49,1,49,1,50,1,50,1,51,1,51,1,51,
		1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,
		1,51,1,51,1,51,3,51,402,8,51,1,52,1,52,1,53,4,53,407,8,53,11,53,12,53,
		408,1,53,1,53,1,54,1,54,1,54,3,54,416,8,54,1,54,1,54,1,55,1,55,1,55,1,
		55,5,55,424,8,55,10,55,12,55,427,9,55,1,55,1,55,1,56,1,56,1,56,1,56,5,
		56,435,8,56,10,56,12,56,438,9,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,
		436,0,58,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
		13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
		25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,
		37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,0,93,0,95,0,97,0,
		99,0,101,0,103,0,105,0,107,46,109,47,111,48,113,49,115,50,1,0,8,3,0,65,
		90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,6,0,10,10,13,13,34,34,92,
		92,133,133,8232,8233,6,0,10,10,13,13,39,39,92,92,133,133,8232,8233,10,
		0,34,34,39,39,48,48,92,92,97,98,102,102,110,110,114,114,116,116,118,118,
		3,0,48,57,65,70,97,102,2,0,9,9,32,32,2,0,10,10,13,13,464,0,1,1,0,0,0,0,
		3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
		0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
		1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,
		0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,
		1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,
		0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
		1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,
		0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,107,
		1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,1,117,
		1,0,0,0,3,119,1,0,0,0,5,125,1,0,0,0,7,135,1,0,0,0,9,137,1,0,0,0,11,143,
		1,0,0,0,13,152,1,0,0,0,15,160,1,0,0,0,17,162,1,0,0,0,19,164,1,0,0,0,21,
		170,1,0,0,0,23,172,1,0,0,0,25,174,1,0,0,0,27,178,1,0,0,0,29,181,1,0,0,
		0,31,183,1,0,0,0,33,186,1,0,0,0,35,188,1,0,0,0,37,192,1,0,0,0,39,198,1,
		0,0,0,41,205,1,0,0,0,43,207,1,0,0,0,45,209,1,0,0,0,47,212,1,0,0,0,49,217,
		1,0,0,0,51,222,1,0,0,0,53,228,1,0,0,0,55,230,1,0,0,0,57,232,1,0,0,0,59,
		234,1,0,0,0,61,236,1,0,0,0,63,239,1,0,0,0,65,242,1,0,0,0,67,245,1,0,0,
		0,69,247,1,0,0,0,71,249,1,0,0,0,73,251,1,0,0,0,75,254,1,0,0,0,77,257,1,
		0,0,0,79,268,1,0,0,0,81,278,1,0,0,0,83,319,1,0,0,0,85,322,1,0,0,0,87,332,
		1,0,0,0,89,360,1,0,0,0,91,365,1,0,0,0,93,367,1,0,0,0,95,372,1,0,0,0,97,
		374,1,0,0,0,99,376,1,0,0,0,101,379,1,0,0,0,103,401,1,0,0,0,105,403,1,0,
		0,0,107,406,1,0,0,0,109,415,1,0,0,0,111,419,1,0,0,0,113,430,1,0,0,0,115,
		444,1,0,0,0,117,118,5,44,0,0,118,2,1,0,0,0,119,120,5,239,0,0,120,121,5,
		187,0,0,121,122,5,191,0,0,122,123,1,0,0,0,123,124,6,1,0,0,124,4,1,0,0,
		0,125,126,5,110,0,0,126,127,5,97,0,0,127,128,5,109,0,0,128,129,5,101,0,
		0,129,130,5,115,0,0,130,131,5,112,0,0,131,132,5,97,0,0,132,133,5,99,0,
		0,133,134,5,101,0,0,134,6,1,0,0,0,135,136,5,59,0,0,136,8,1,0,0,0,137,138,
		5,117,0,0,138,139,5,115,0,0,139,140,5,105,0,0,140,141,5,110,0,0,141,142,
		5,103,0,0,142,10,1,0,0,0,143,144,5,108,0,0,144,145,5,97,0,0,145,146,5,
		110,0,0,146,147,5,103,0,0,147,148,5,117,0,0,148,149,5,97,0,0,149,150,5,
		103,0,0,150,151,5,101,0,0,151,12,1,0,0,0,152,153,5,114,0,0,153,154,5,101,
		0,0,154,155,5,116,0,0,155,156,5,117,0,0,156,157,5,114,0,0,157,158,5,110,
		0,0,158,159,5,115,0,0,159,14,1,0,0,0,160,161,5,58,0,0,161,16,1,0,0,0,162,
		163,5,124,0,0,163,18,1,0,0,0,164,165,5,98,0,0,165,166,5,108,0,0,166,167,
		5,111,0,0,167,168,5,99,0,0,168,169,5,107,0,0,169,20,1,0,0,0,170,171,5,
		40,0,0,171,22,1,0,0,0,172,173,5,41,0,0,173,24,1,0,0,0,174,175,5,97,0,0,
		175,176,5,108,0,0,176,177,5,116,0,0,177,26,1,0,0,0,178,179,5,61,0,0,179,
		180,5,62,0,0,180,28,1,0,0,0,181,182,5,35,0,0,182,30,1,0,0,0,183,184,5,
		35,0,0,184,185,5,123,0,0,185,32,1,0,0,0,186,187,5,125,0,0,187,34,1,0,0,
		0,188,189,5,101,0,0,189,190,5,111,0,0,190,191,5,102,0,0,191,36,1,0,0,0,
		192,193,5,116,0,0,193,194,5,111,0,0,194,195,5,107,0,0,195,196,5,101,0,
		0,196,197,5,110,0,0,197,38,1,0,0,0,198,199,5,104,0,0,199,200,5,105,0,0,
		200,201,5,100,0,0,201,202,5,100,0,0,202,203,5,101,0,0,203,204,5,110,0,
		0,204,40,1,0,0,0,205,206,5,126,0,0,206,42,1,0,0,0,207,208,5,46,0,0,208,
		44,1,0,0,0,209,210,5,46,0,0,210,211,5,46,0,0,211,46,1,0,0,0,212,213,5,
		110,0,0,213,214,5,117,0,0,214,215,5,108,0,0,215,216,5,108,0,0,216,48,1,
		0,0,0,217,218,5,116,0,0,218,219,5,114,0,0,219,220,5,117,0,0,220,221,5,
		101,0,0,221,50,1,0,0,0,222,223,5,102,0,0,223,224,5,97,0,0,224,225,5,108,
		0,0,225,226,5,115,0,0,226,227,5,101,0,0,227,52,1,0,0,0,228,229,5,123,0,
		0,229,54,1,0,0,0,230,231,5,91,0,0,231,56,1,0,0,0,232,233,5,93,0,0,233,
		58,1,0,0,0,234,235,5,61,0,0,235,60,1,0,0,0,236,237,5,63,0,0,237,238,5,
		61,0,0,238,62,1,0,0,0,239,240,5,33,0,0,240,241,5,61,0,0,241,64,1,0,0,0,
		242,243,5,43,0,0,243,244,5,61,0,0,244,66,1,0,0,0,245,246,5,63,0,0,246,
		68,1,0,0,0,247,248,5,42,0,0,248,70,1,0,0,0,249,250,5,43,0,0,250,72,1,0,
		0,0,251,252,5,63,0,0,252,253,5,63,0,0,253,74,1,0,0,0,254,255,5,42,0,0,
		255,256,5,63,0,0,256,76,1,0,0,0,257,258,5,43,0,0,258,259,5,63,0,0,259,
		78,1,0,0,0,260,269,5,48,0,0,261,265,2,49,57,0,262,264,2,48,57,0,263,262,
		1,0,0,0,264,267,1,0,0,0,265,263,1,0,0,0,265,266,1,0,0,0,266,269,1,0,0,
		0,267,265,1,0,0,0,268,260,1,0,0,0,268,261,1,0,0,0,269,80,1,0,0,0,270,279,
		5,48,0,0,271,275,2,49,57,0,272,274,2,48,57,0,273,272,1,0,0,0,274,277,1,
		0,0,0,275,273,1,0,0,0,275,276,1,0,0,0,276,279,1,0,0,0,277,275,1,0,0,0,
		278,270,1,0,0,0,278,271,1,0,0,0,279,280,1,0,0,0,280,282,5,46,0,0,281,283,
		2,48,57,0,282,281,1,0,0,0,283,284,1,0,0,0,284,282,1,0,0,0,284,285,1,0,
		0,0,285,82,1,0,0,0,286,287,5,98,0,0,287,288,5,111,0,0,288,289,5,111,0,
		0,289,320,5,108,0,0,290,291,5,105,0,0,291,292,5,110,0,0,292,320,5,116,
		0,0,293,294,5,115,0,0,294,295,5,116,0,0,295,296,5,114,0,0,296,297,5,105,
		0,0,297,298,5,110,0,0,298,320,5,103,0,0,299,300,5,116,0,0,300,301,5,121,
		0,0,301,302,5,112,0,0,302,320,5,101,0,0,303,304,5,115,0,0,304,305,5,121,
		0,0,305,306,5,109,0,0,306,307,5,98,0,0,307,308,5,111,0,0,308,320,5,108,
		0,0,309,310,5,111,0,0,310,311,5,98,0,0,311,312,5,106,0,0,312,313,5,101,
		0,0,313,314,5,99,0,0,314,320,5,116,0,0,315,316,5,118,0,0,316,317,5,111,
		0,0,317,318,5,105,0,0,318,320,5,100,0,0,319,286,1,0,0,0,319,290,1,0,0,
		0,319,293,1,0,0,0,319,299,1,0,0,0,319,303,1,0,0,0,319,309,1,0,0,0,319,
		315,1,0,0,0,320,84,1,0,0,0,321,323,7,0,0,0,322,321,1,0,0,0,323,324,1,0,
		0,0,324,322,1,0,0,0,324,325,1,0,0,0,325,329,1,0,0,0,326,328,7,1,0,0,327,
		326,1,0,0,0,328,331,1,0,0,0,329,327,1,0,0,0,329,330,1,0,0,0,330,86,1,0,
		0,0,331,329,1,0,0,0,332,334,5,64,0,0,333,335,7,0,0,0,334,333,1,0,0,0,335,
		336,1,0,0,0,336,334,1,0,0,0,336,337,1,0,0,0,337,341,1,0,0,0,338,340,7,
		1,0,0,339,338,1,0,0,0,340,343,1,0,0,0,341,339,1,0,0,0,341,342,1,0,0,0,
		342,88,1,0,0,0,343,341,1,0,0,0,344,348,5,34,0,0,345,347,3,91,45,0,346,
		345,1,0,0,0,347,350,1,0,0,0,348,346,1,0,0,0,348,349,1,0,0,0,349,351,1,
		0,0,0,350,348,1,0,0,0,351,361,5,34,0,0,352,356,5,39,0,0,353,355,3,95,47,
		0,354,353,1,0,0,0,355,358,1,0,0,0,356,354,1,0,0,0,356,357,1,0,0,0,357,
		359,1,0,0,0,358,356,1,0,0,0,359,361,5,39,0,0,360,344,1,0,0,0,360,352,1,
		0,0,0,361,90,1,0,0,0,362,366,3,93,46,0,363,366,3,99,49,0,364,366,3,103,
		51,0,365,362,1,0,0,0,365,363,1,0,0,0,365,364,1,0,0,0,366,92,1,0,0,0,367,
		368,8,2,0,0,368,94,1,0,0,0,369,373,3,97,48,0,370,373,3,99,49,0,371,373,
		3,103,51,0,372,369,1,0,0,0,372,370,1,0,0,0,372,371,1,0,0,0,373,96,1,0,
		0,0,374,375,8,3,0,0,375,98,1,0,0,0,376,377,5,92,0,0,377,378,3,101,50,0,
		378,100,1,0,0,0,379,380,7,4,0,0,380,102,1,0,0,0,381,382,5,92,0,0,382,383,
		5,117,0,0,383,384,1,0,0,0,384,385,3,105,52,0,385,386,3,105,52,0,386,387,
		3,105,52,0,387,388,3,105,52,0,388,402,1,0,0,0,389,390,5,92,0,0,390,391,
		5,85,0,0,391,392,1,0,0,0,392,393,3,105,52,0,393,394,3,105,52,0,394,395,
		3,105,52,0,395,396,3,105,52,0,396,397,3,105,52,0,397,398,3,105,52,0,398,
		399,3,105,52,0,399,400,3,105,52,0,400,402,1,0,0,0,401,381,1,0,0,0,401,
		389,1,0,0,0,402,104,1,0,0,0,403,404,7,5,0,0,404,106,1,0,0,0,405,407,7,
		6,0,0,406,405,1,0,0,0,407,408,1,0,0,0,408,406,1,0,0,0,408,409,1,0,0,0,
		409,410,1,0,0,0,410,411,6,53,0,0,411,108,1,0,0,0,412,413,5,13,0,0,413,
		416,5,10,0,0,414,416,7,7,0,0,415,412,1,0,0,0,415,414,1,0,0,0,416,417,1,
		0,0,0,417,418,6,54,0,0,418,110,1,0,0,0,419,420,5,47,0,0,420,421,5,47,0,
		0,421,425,1,0,0,0,422,424,8,7,0,0,423,422,1,0,0,0,424,427,1,0,0,0,425,
		423,1,0,0,0,425,426,1,0,0,0,426,428,1,0,0,0,427,425,1,0,0,0,428,429,6,
		55,0,0,429,112,1,0,0,0,430,431,5,47,0,0,431,432,5,42,0,0,432,436,1,0,0,
		0,433,435,9,0,0,0,434,433,1,0,0,0,435,438,1,0,0,0,436,437,1,0,0,0,436,
		434,1,0,0,0,437,439,1,0,0,0,438,436,1,0,0,0,439,440,5,42,0,0,440,441,5,
		47,0,0,441,442,1,0,0,0,442,443,6,56,0,0,443,114,1,0,0,0,444,445,9,0,0,
		0,445,116,1,0,0,0,21,0,265,268,275,278,284,319,324,329,336,341,348,356,
		360,365,372,401,408,415,425,436,1,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace MetaDslx.Bootstrap.MetaCompiler.Compiler
