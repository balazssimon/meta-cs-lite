//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CompilerLexer.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.Bootstrap.MetaCompiler.Compiler {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public partial class CompilerLexer : global::MetaDslx.CodeAnalysis.Parsers.Antlr.AntlrLexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LR_TComma=1, LR_KNamespace=2, LR_TSemicolon=3, LR_KUsing=4, LR_KMetamodel=5, 
		LR_KLanguage=6, LR_KReturns=7, LR_TColon=8, LR_TBar=9, LR_KBlock=10, LR_TLBrace=11, 
		LR_TRBrace=12, LR_TEqGt=13, LR_KNull=14, LR_KTrue=15, LR_KFalse=16, LR_TDot=17, 
		LR_TInteger=18, LR_TDecimal=19, LR_TIdentifier=20, LR_TString=21, LR_TWhitespace=22, 
		LR_TLineEnd=23, LR_TSingleLineComment=24, LR_TMultiLineComment=25;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LR_TComma", "LR_KNamespace", "LR_TSemicolon", "LR_KUsing", "LR_KMetamodel", 
		"LR_KLanguage", "LR_KReturns", "LR_TColon", "LR_TBar", "LR_KBlock", "LR_TLBrace", 
		"LR_TRBrace", "LR_TEqGt", "LR_KNull", "LR_KTrue", "LR_KFalse", "LR_TDot", 
		"LR_TInteger", "LR_TDecimal", "LR_TIdentifier", "LR_TString", "LR_TWhitespace", 
		"LR_TLineEnd", "LR_TSingleLineComment", "LR_TMultiLineComment"
	};


	public CompilerLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CompilerLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "','", "'namespace'", "';'", "'using'", "'metamodel'", "'language'", 
		"'returns'", "':'", "'|'", "'block'", "'{'", "'}'", "'=>'", "'null'", 
		"'true'", "'false'", "'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LR_TComma", "LR_KNamespace", "LR_TSemicolon", "LR_KUsing", "LR_KMetamodel", 
		"LR_KLanguage", "LR_KReturns", "LR_TColon", "LR_TBar", "LR_KBlock", "LR_TLBrace", 
		"LR_TRBrace", "LR_TEqGt", "LR_KNull", "LR_KTrue", "LR_KFalse", "LR_TDot", 
		"LR_TInteger", "LR_TDecimal", "LR_TIdentifier", "LR_TString", "LR_TWhitespace", 
		"LR_TLineEnd", "LR_TSingleLineComment", "LR_TMultiLineComment"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CompilerLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static CompilerLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,25,218,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,
		4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,
		1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,
		1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,
		1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,17,5,17,137,8,17,10,17,
		12,17,140,9,17,3,17,142,8,17,1,18,1,18,1,18,5,18,147,8,18,10,18,12,18,
		150,9,18,3,18,152,8,18,1,18,1,18,4,18,156,8,18,11,18,12,18,157,1,19,4,
		19,161,8,19,11,19,12,19,162,1,19,5,19,166,8,19,10,19,12,19,169,9,19,1,
		20,1,20,5,20,173,8,20,10,20,12,20,176,9,20,1,20,1,20,1,21,4,21,181,8,21,
		11,21,12,21,182,1,21,1,21,1,22,1,22,1,22,3,22,190,8,22,1,22,1,22,1,23,
		1,23,1,23,1,23,5,23,198,8,23,10,23,12,23,201,9,23,1,23,1,23,1,24,1,24,
		1,24,1,24,5,24,209,8,24,10,24,12,24,212,9,24,1,24,1,24,1,24,1,24,1,24,
		2,174,210,0,25,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
		12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,
		24,49,25,1,0,4,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,
		9,9,32,32,2,0,10,10,13,13,229,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
		1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
		0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
		1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
		0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,1,51,
		1,0,0,0,3,53,1,0,0,0,5,63,1,0,0,0,7,65,1,0,0,0,9,71,1,0,0,0,11,81,1,0,
		0,0,13,90,1,0,0,0,15,98,1,0,0,0,17,100,1,0,0,0,19,102,1,0,0,0,21,108,1,
		0,0,0,23,110,1,0,0,0,25,112,1,0,0,0,27,115,1,0,0,0,29,120,1,0,0,0,31,125,
		1,0,0,0,33,131,1,0,0,0,35,141,1,0,0,0,37,151,1,0,0,0,39,160,1,0,0,0,41,
		170,1,0,0,0,43,180,1,0,0,0,45,189,1,0,0,0,47,193,1,0,0,0,49,204,1,0,0,
		0,51,52,5,44,0,0,52,2,1,0,0,0,53,54,5,110,0,0,54,55,5,97,0,0,55,56,5,109,
		0,0,56,57,5,101,0,0,57,58,5,115,0,0,58,59,5,112,0,0,59,60,5,97,0,0,60,
		61,5,99,0,0,61,62,5,101,0,0,62,4,1,0,0,0,63,64,5,59,0,0,64,6,1,0,0,0,65,
		66,5,117,0,0,66,67,5,115,0,0,67,68,5,105,0,0,68,69,5,110,0,0,69,70,5,103,
		0,0,70,8,1,0,0,0,71,72,5,109,0,0,72,73,5,101,0,0,73,74,5,116,0,0,74,75,
		5,97,0,0,75,76,5,109,0,0,76,77,5,111,0,0,77,78,5,100,0,0,78,79,5,101,0,
		0,79,80,5,108,0,0,80,10,1,0,0,0,81,82,5,108,0,0,82,83,5,97,0,0,83,84,5,
		110,0,0,84,85,5,103,0,0,85,86,5,117,0,0,86,87,5,97,0,0,87,88,5,103,0,0,
		88,89,5,101,0,0,89,12,1,0,0,0,90,91,5,114,0,0,91,92,5,101,0,0,92,93,5,
		116,0,0,93,94,5,117,0,0,94,95,5,114,0,0,95,96,5,110,0,0,96,97,5,115,0,
		0,97,14,1,0,0,0,98,99,5,58,0,0,99,16,1,0,0,0,100,101,5,124,0,0,101,18,
		1,0,0,0,102,103,5,98,0,0,103,104,5,108,0,0,104,105,5,111,0,0,105,106,5,
		99,0,0,106,107,5,107,0,0,107,20,1,0,0,0,108,109,5,123,0,0,109,22,1,0,0,
		0,110,111,5,125,0,0,111,24,1,0,0,0,112,113,5,61,0,0,113,114,5,62,0,0,114,
		26,1,0,0,0,115,116,5,110,0,0,116,117,5,117,0,0,117,118,5,108,0,0,118,119,
		5,108,0,0,119,28,1,0,0,0,120,121,5,116,0,0,121,122,5,114,0,0,122,123,5,
		117,0,0,123,124,5,101,0,0,124,30,1,0,0,0,125,126,5,102,0,0,126,127,5,97,
		0,0,127,128,5,108,0,0,128,129,5,115,0,0,129,130,5,101,0,0,130,32,1,0,0,
		0,131,132,5,46,0,0,132,34,1,0,0,0,133,142,5,48,0,0,134,138,2,49,57,0,135,
		137,2,48,57,0,136,135,1,0,0,0,137,140,1,0,0,0,138,136,1,0,0,0,138,139,
		1,0,0,0,139,142,1,0,0,0,140,138,1,0,0,0,141,133,1,0,0,0,141,134,1,0,0,
		0,142,36,1,0,0,0,143,152,5,48,0,0,144,148,2,49,57,0,145,147,2,48,57,0,
		146,145,1,0,0,0,147,150,1,0,0,0,148,146,1,0,0,0,148,149,1,0,0,0,149,152,
		1,0,0,0,150,148,1,0,0,0,151,143,1,0,0,0,151,144,1,0,0,0,152,153,1,0,0,
		0,153,155,5,46,0,0,154,156,2,48,57,0,155,154,1,0,0,0,156,157,1,0,0,0,157,
		155,1,0,0,0,157,158,1,0,0,0,158,38,1,0,0,0,159,161,7,0,0,0,160,159,1,0,
		0,0,161,162,1,0,0,0,162,160,1,0,0,0,162,163,1,0,0,0,163,167,1,0,0,0,164,
		166,7,1,0,0,165,164,1,0,0,0,166,169,1,0,0,0,167,165,1,0,0,0,167,168,1,
		0,0,0,168,40,1,0,0,0,169,167,1,0,0,0,170,174,5,34,0,0,171,173,9,0,0,0,
		172,171,1,0,0,0,173,176,1,0,0,0,174,175,1,0,0,0,174,172,1,0,0,0,175,177,
		1,0,0,0,176,174,1,0,0,0,177,178,5,34,0,0,178,42,1,0,0,0,179,181,7,2,0,
		0,180,179,1,0,0,0,181,182,1,0,0,0,182,180,1,0,0,0,182,183,1,0,0,0,183,
		184,1,0,0,0,184,185,6,21,0,0,185,44,1,0,0,0,186,187,5,13,0,0,187,190,5,
		10,0,0,188,190,7,3,0,0,189,186,1,0,0,0,189,188,1,0,0,0,190,191,1,0,0,0,
		191,192,6,22,0,0,192,46,1,0,0,0,193,194,5,47,0,0,194,195,5,47,0,0,195,
		199,1,0,0,0,196,198,8,3,0,0,197,196,1,0,0,0,198,201,1,0,0,0,199,197,1,
		0,0,0,199,200,1,0,0,0,200,202,1,0,0,0,201,199,1,0,0,0,202,203,6,23,0,0,
		203,48,1,0,0,0,204,205,5,47,0,0,205,206,5,42,0,0,206,210,1,0,0,0,207,209,
		9,0,0,0,208,207,1,0,0,0,209,212,1,0,0,0,210,211,1,0,0,0,210,208,1,0,0,
		0,211,213,1,0,0,0,212,210,1,0,0,0,213,214,5,42,0,0,214,215,5,47,0,0,215,
		216,1,0,0,0,216,217,6,24,0,0,217,50,1,0,0,0,13,0,138,141,148,151,157,162,
		167,174,182,189,199,210,1,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace MetaDslx.Bootstrap.MetaCompiler.Compiler
