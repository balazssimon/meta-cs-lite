//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from obj\Debug\net5.0\Syntax\InternalSyntax\SandyParser.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.Bootstrap.Antlr4.Sandy.Syntax.InternalSyntax {
using global::Antlr4.Runtime.Misc;
using global::Antlr4.Runtime.Tree;
using IToken = global::Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="SandyParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface ISandyParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="SandyParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMain([NotNull] SandyParser.MainContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SandyParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine([NotNull] SandyParser.LineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SandyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] SandyParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SandyParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrint([NotNull] SandyParser.PrintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SandyParser.varDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarDeclaration([NotNull] SandyParser.VarDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SandyParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] SandyParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>binaryMulOperation</c>
	/// labeled alternative in <see cref="SandyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryMulOperation([NotNull] SandyParser.BinaryMulOperationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>decimalLiteral</c>
	/// labeled alternative in <see cref="SandyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimalLiteral([NotNull] SandyParser.DecimalLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>binaryAddOperation</c>
	/// labeled alternative in <see cref="SandyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryAddOperation([NotNull] SandyParser.BinaryAddOperationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>minusExpression</c>
	/// labeled alternative in <see cref="SandyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMinusExpression([NotNull] SandyParser.MinusExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>intLiteral</c>
	/// labeled alternative in <see cref="SandyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntLiteral([NotNull] SandyParser.IntLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenExpression</c>
	/// labeled alternative in <see cref="SandyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenExpression([NotNull] SandyParser.ParenExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeConversion</c>
	/// labeled alternative in <see cref="SandyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeConversion([NotNull] SandyParser.TypeConversionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>varReference</c>
	/// labeled alternative in <see cref="SandyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarReference([NotNull] SandyParser.VarReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SandyParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] SandyParser.TypeContext context);
}
} // namespace Antlr4Intellisense.Syntax.InternalSyntax
