//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CompilerLexer.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.Bootstrap.MetaCompiler3.Compiler {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public partial class CompilerLexer : global::MetaDslx.CodeAnalysis.Parsers.Antlr.AntlrLexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LR_TComma=1, LR_TUtf8Bom=2, LR_KNamespace=3, LR_TSemicolon=4, LR_KMetamodel=5, 
		LR_KLanguage=6, LR_TColon=7, LR_TLParen=8, LR_TRParen=9, LR_THash=10, 
		LR_THashLBrace=11, LR_TRBrace=12, LR_KEof=13, LR_KFragment=14, LR_TTilde=15, 
		LR_TDot=16, LR_TDotDot=17, LR_TLBrace=18, LR_TLBracket=19, LR_TRBracket=20, 
		LR_TEq=21, LR_TQuestionEq=22, LR_TExclEq=23, LR_TPlusEq=24, LR_TQuestion=25, 
		LR_TAsterisk=26, LR_TPlus=27, LR_TQuestionQuestion=28, LR_TAsteriskQuestion=29, 
		LR_TPlusQuestion=30, LR_KObject=31, LR_KBool=32, LR_KChar=33, LR_KString=34, 
		LR_KByte=35, LR_KSbyte=36, LR_KShort=37, LR_KUshort=38, LR_KInt=39, LR_KUint=40, 
		LR_KLong=41, LR_KUlong=42, LR_KFloat=43, LR_KDouble=44, LR_KDecimal=45, 
		LR_KType=46, LR_KSymbol=47, LR_KVoid=48, LR_KUsing=49, LR_KReturns=50, 
		LR_TBar=51, LR_KAlt=52, LR_TEqGt=53, LR_KToken=54, LR_KHidden=55, LR_KNull=56, 
		LR_KTrue=57, LR_KFalse=58, LR_TInteger=59, LR_TDecimal=60, LR_TIdentifier=61, 
		LR_TVerbatimIdentifier=62, LR_TString=63, LR_TWhitespace=64, LR_TLineEnd=65, 
		LR_TSingleLineComment=66, LR_TMultiLineComment=67, LR_TInvalidToken=68;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LR_TComma", "LR_TUtf8Bom", "LR_KNamespace", "LR_TSemicolon", "LR_KMetamodel", 
		"LR_KLanguage", "LR_TColon", "LR_TLParen", "LR_TRParen", "LR_THash", "LR_THashLBrace", 
		"LR_TRBrace", "LR_KEof", "LR_KFragment", "LR_TTilde", "LR_TDot", "LR_TDotDot", 
		"LR_TLBrace", "LR_TLBracket", "LR_TRBracket", "LR_TEq", "LR_TQuestionEq", 
		"LR_TExclEq", "LR_TPlusEq", "LR_TQuestion", "LR_TAsterisk", "LR_TPlus", 
		"LR_TQuestionQuestion", "LR_TAsteriskQuestion", "LR_TPlusQuestion", "LR_KObject", 
		"LR_KBool", "LR_KChar", "LR_KString", "LR_KByte", "LR_KSbyte", "LR_KShort", 
		"LR_KUshort", "LR_KInt", "LR_KUint", "LR_KLong", "LR_KUlong", "LR_KFloat", 
		"LR_KDouble", "LR_KDecimal", "LR_KType", "LR_KSymbol", "LR_KVoid", "LR_KUsing", 
		"LR_KReturns", "LR_TBar", "LR_KAlt", "LR_TEqGt", "LR_KToken", "LR_KHidden", 
		"LR_KNull", "LR_KTrue", "LR_KFalse", "LR_TInteger", "LR_TDecimal", "LR_TIdentifier", 
		"LR_TVerbatimIdentifier", "LR_TString", "LR_TWhitespace", "LR_TLineEnd", 
		"LR_TSingleLineComment", "LR_TMultiLineComment", "LR_TInvalidToken", "FR_DoubleQuoteTextCharacter", 
		"FR_DoubleQuoteTextSimple", "FR_SingleQuoteTextCharacter", "FR_SingleQuoteTextSimple", 
		"FR_CharacterEscapeSimple", "FR_CharacterEscapeSimpleCharacter", "FR_CharacterEscapeUnicode", 
		"FR_HexDigit"
	};


	public CompilerLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CompilerLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "','", null, "'namespace'", "';'", "'metamodel'", "'language'", 
		"':'", "'('", "')'", "'#'", "'#{'", "'}'", "'eof'", "'fragment'", "'~'", 
		"'.'", "'..'", "'{'", "'['", "']'", "'='", "'?='", "'!='", "'+='", "'?'", 
		"'*'", "'+'", "'??'", "'*?'", "'+?'", "'object'", "'bool'", "'char'", 
		"'string'", "'byte'", "'sbyte'", "'short'", "'ushort'", "'int'", "'uint'", 
		"'long'", "'ulong'", "'float'", "'double'", "'decimal'", "'type'", "'symbol'", 
		"'void'", "'using'", "'returns'", "'|'", "'alt'", "'=>'", "'token'", "'hidden'", 
		"'null'", "'true'", "'false'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LR_TComma", "LR_TUtf8Bom", "LR_KNamespace", "LR_TSemicolon", "LR_KMetamodel", 
		"LR_KLanguage", "LR_TColon", "LR_TLParen", "LR_TRParen", "LR_THash", "LR_THashLBrace", 
		"LR_TRBrace", "LR_KEof", "LR_KFragment", "LR_TTilde", "LR_TDot", "LR_TDotDot", 
		"LR_TLBrace", "LR_TLBracket", "LR_TRBracket", "LR_TEq", "LR_TQuestionEq", 
		"LR_TExclEq", "LR_TPlusEq", "LR_TQuestion", "LR_TAsterisk", "LR_TPlus", 
		"LR_TQuestionQuestion", "LR_TAsteriskQuestion", "LR_TPlusQuestion", "LR_KObject", 
		"LR_KBool", "LR_KChar", "LR_KString", "LR_KByte", "LR_KSbyte", "LR_KShort", 
		"LR_KUshort", "LR_KInt", "LR_KUint", "LR_KLong", "LR_KUlong", "LR_KFloat", 
		"LR_KDouble", "LR_KDecimal", "LR_KType", "LR_KSymbol", "LR_KVoid", "LR_KUsing", 
		"LR_KReturns", "LR_TBar", "LR_KAlt", "LR_TEqGt", "LR_KToken", "LR_KHidden", 
		"LR_KNull", "LR_KTrue", "LR_KFalse", "LR_TInteger", "LR_TDecimal", "LR_TIdentifier", 
		"LR_TVerbatimIdentifier", "LR_TString", "LR_TWhitespace", "LR_TLineEnd", 
		"LR_TSingleLineComment", "LR_TMultiLineComment", "LR_TInvalidToken"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CompilerLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static CompilerLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,68,568,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,1,0,1,0,1,1,1,1,
		1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,
		4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
		1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,12,1,12,1,12,
		1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,15,1,15,
		1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,21,
		1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,
		1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
		1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,
		1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,
		1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,
		1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,41,
		1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,
		1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,
		1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,
		1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
		1,49,1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,53,1,53,1,53,1,53,
		1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,
		1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,
		5,58,419,8,58,10,58,12,58,422,9,58,3,58,424,8,58,1,59,1,59,1,59,5,59,429,
		8,59,10,59,12,59,432,9,59,3,59,434,8,59,1,59,1,59,4,59,438,8,59,11,59,
		12,59,439,1,60,4,60,443,8,60,11,60,12,60,444,1,60,5,60,448,8,60,10,60,
		12,60,451,9,60,1,61,1,61,4,61,455,8,61,11,61,12,61,456,1,61,5,61,460,8,
		61,10,61,12,61,463,9,61,1,62,1,62,5,62,467,8,62,10,62,12,62,470,9,62,1,
		62,1,62,1,62,5,62,475,8,62,10,62,12,62,478,9,62,1,62,3,62,481,8,62,1,63,
		4,63,484,8,63,11,63,12,63,485,1,63,1,63,1,64,1,64,1,64,3,64,493,8,64,1,
		64,1,64,1,65,1,65,1,65,1,65,5,65,501,8,65,10,65,12,65,504,9,65,1,65,1,
		65,1,66,1,66,1,66,1,66,5,66,512,8,66,10,66,12,66,515,9,66,1,66,1,66,1,
		66,1,66,1,66,1,67,1,67,1,67,1,67,1,68,1,68,1,68,3,68,529,8,68,1,69,1,69,
		1,70,1,70,1,70,3,70,536,8,70,1,71,1,71,1,72,1,72,1,72,1,73,1,73,1,74,1,
		74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,
		74,1,74,1,74,1,74,1,74,3,74,565,8,74,1,75,1,75,1,513,0,76,1,1,3,2,5,3,
		7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
		33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
		57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
		81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,
		52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,
		62,125,63,127,64,129,65,131,66,133,67,135,68,137,0,139,0,141,0,143,0,145,
		0,147,0,149,0,151,0,1,0,8,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,
		97,122,2,0,9,9,32,32,2,0,10,10,13,13,6,0,10,10,13,13,34,34,92,92,133,133,
		8232,8233,6,0,10,10,13,13,39,39,92,92,133,133,8232,8233,10,0,34,34,39,
		39,48,48,92,92,97,98,102,102,110,110,114,114,116,116,118,118,3,0,48,57,
		65,70,97,102,580,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
		0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
		0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
		1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,
		0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
		1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,
		0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
		1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,
		0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,
		1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,
		0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,
		0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,
		0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,1,153,1,
		0,0,0,3,155,1,0,0,0,5,161,1,0,0,0,7,171,1,0,0,0,9,173,1,0,0,0,11,183,1,
		0,0,0,13,192,1,0,0,0,15,194,1,0,0,0,17,196,1,0,0,0,19,198,1,0,0,0,21,200,
		1,0,0,0,23,203,1,0,0,0,25,205,1,0,0,0,27,209,1,0,0,0,29,218,1,0,0,0,31,
		220,1,0,0,0,33,222,1,0,0,0,35,225,1,0,0,0,37,227,1,0,0,0,39,229,1,0,0,
		0,41,231,1,0,0,0,43,233,1,0,0,0,45,236,1,0,0,0,47,239,1,0,0,0,49,242,1,
		0,0,0,51,244,1,0,0,0,53,246,1,0,0,0,55,248,1,0,0,0,57,251,1,0,0,0,59,254,
		1,0,0,0,61,257,1,0,0,0,63,264,1,0,0,0,65,269,1,0,0,0,67,274,1,0,0,0,69,
		281,1,0,0,0,71,286,1,0,0,0,73,292,1,0,0,0,75,298,1,0,0,0,77,305,1,0,0,
		0,79,309,1,0,0,0,81,314,1,0,0,0,83,319,1,0,0,0,85,325,1,0,0,0,87,331,1,
		0,0,0,89,338,1,0,0,0,91,346,1,0,0,0,93,351,1,0,0,0,95,358,1,0,0,0,97,363,
		1,0,0,0,99,369,1,0,0,0,101,377,1,0,0,0,103,379,1,0,0,0,105,383,1,0,0,0,
		107,386,1,0,0,0,109,392,1,0,0,0,111,399,1,0,0,0,113,404,1,0,0,0,115,409,
		1,0,0,0,117,423,1,0,0,0,119,433,1,0,0,0,121,442,1,0,0,0,123,452,1,0,0,
		0,125,480,1,0,0,0,127,483,1,0,0,0,129,492,1,0,0,0,131,496,1,0,0,0,133,
		507,1,0,0,0,135,521,1,0,0,0,137,528,1,0,0,0,139,530,1,0,0,0,141,535,1,
		0,0,0,143,537,1,0,0,0,145,539,1,0,0,0,147,542,1,0,0,0,149,564,1,0,0,0,
		151,566,1,0,0,0,153,154,5,44,0,0,154,2,1,0,0,0,155,156,5,239,0,0,156,157,
		5,187,0,0,157,158,5,191,0,0,158,159,1,0,0,0,159,160,6,1,0,0,160,4,1,0,
		0,0,161,162,5,110,0,0,162,163,5,97,0,0,163,164,5,109,0,0,164,165,5,101,
		0,0,165,166,5,115,0,0,166,167,5,112,0,0,167,168,5,97,0,0,168,169,5,99,
		0,0,169,170,5,101,0,0,170,6,1,0,0,0,171,172,5,59,0,0,172,8,1,0,0,0,173,
		174,5,109,0,0,174,175,5,101,0,0,175,176,5,116,0,0,176,177,5,97,0,0,177,
		178,5,109,0,0,178,179,5,111,0,0,179,180,5,100,0,0,180,181,5,101,0,0,181,
		182,5,108,0,0,182,10,1,0,0,0,183,184,5,108,0,0,184,185,5,97,0,0,185,186,
		5,110,0,0,186,187,5,103,0,0,187,188,5,117,0,0,188,189,5,97,0,0,189,190,
		5,103,0,0,190,191,5,101,0,0,191,12,1,0,0,0,192,193,5,58,0,0,193,14,1,0,
		0,0,194,195,5,40,0,0,195,16,1,0,0,0,196,197,5,41,0,0,197,18,1,0,0,0,198,
		199,5,35,0,0,199,20,1,0,0,0,200,201,5,35,0,0,201,202,5,123,0,0,202,22,
		1,0,0,0,203,204,5,125,0,0,204,24,1,0,0,0,205,206,5,101,0,0,206,207,5,111,
		0,0,207,208,5,102,0,0,208,26,1,0,0,0,209,210,5,102,0,0,210,211,5,114,0,
		0,211,212,5,97,0,0,212,213,5,103,0,0,213,214,5,109,0,0,214,215,5,101,0,
		0,215,216,5,110,0,0,216,217,5,116,0,0,217,28,1,0,0,0,218,219,5,126,0,0,
		219,30,1,0,0,0,220,221,5,46,0,0,221,32,1,0,0,0,222,223,5,46,0,0,223,224,
		5,46,0,0,224,34,1,0,0,0,225,226,5,123,0,0,226,36,1,0,0,0,227,228,5,91,
		0,0,228,38,1,0,0,0,229,230,5,93,0,0,230,40,1,0,0,0,231,232,5,61,0,0,232,
		42,1,0,0,0,233,234,5,63,0,0,234,235,5,61,0,0,235,44,1,0,0,0,236,237,5,
		33,0,0,237,238,5,61,0,0,238,46,1,0,0,0,239,240,5,43,0,0,240,241,5,61,0,
		0,241,48,1,0,0,0,242,243,5,63,0,0,243,50,1,0,0,0,244,245,5,42,0,0,245,
		52,1,0,0,0,246,247,5,43,0,0,247,54,1,0,0,0,248,249,5,63,0,0,249,250,5,
		63,0,0,250,56,1,0,0,0,251,252,5,42,0,0,252,253,5,63,0,0,253,58,1,0,0,0,
		254,255,5,43,0,0,255,256,5,63,0,0,256,60,1,0,0,0,257,258,5,111,0,0,258,
		259,5,98,0,0,259,260,5,106,0,0,260,261,5,101,0,0,261,262,5,99,0,0,262,
		263,5,116,0,0,263,62,1,0,0,0,264,265,5,98,0,0,265,266,5,111,0,0,266,267,
		5,111,0,0,267,268,5,108,0,0,268,64,1,0,0,0,269,270,5,99,0,0,270,271,5,
		104,0,0,271,272,5,97,0,0,272,273,5,114,0,0,273,66,1,0,0,0,274,275,5,115,
		0,0,275,276,5,116,0,0,276,277,5,114,0,0,277,278,5,105,0,0,278,279,5,110,
		0,0,279,280,5,103,0,0,280,68,1,0,0,0,281,282,5,98,0,0,282,283,5,121,0,
		0,283,284,5,116,0,0,284,285,5,101,0,0,285,70,1,0,0,0,286,287,5,115,0,0,
		287,288,5,98,0,0,288,289,5,121,0,0,289,290,5,116,0,0,290,291,5,101,0,0,
		291,72,1,0,0,0,292,293,5,115,0,0,293,294,5,104,0,0,294,295,5,111,0,0,295,
		296,5,114,0,0,296,297,5,116,0,0,297,74,1,0,0,0,298,299,5,117,0,0,299,300,
		5,115,0,0,300,301,5,104,0,0,301,302,5,111,0,0,302,303,5,114,0,0,303,304,
		5,116,0,0,304,76,1,0,0,0,305,306,5,105,0,0,306,307,5,110,0,0,307,308,5,
		116,0,0,308,78,1,0,0,0,309,310,5,117,0,0,310,311,5,105,0,0,311,312,5,110,
		0,0,312,313,5,116,0,0,313,80,1,0,0,0,314,315,5,108,0,0,315,316,5,111,0,
		0,316,317,5,110,0,0,317,318,5,103,0,0,318,82,1,0,0,0,319,320,5,117,0,0,
		320,321,5,108,0,0,321,322,5,111,0,0,322,323,5,110,0,0,323,324,5,103,0,
		0,324,84,1,0,0,0,325,326,5,102,0,0,326,327,5,108,0,0,327,328,5,111,0,0,
		328,329,5,97,0,0,329,330,5,116,0,0,330,86,1,0,0,0,331,332,5,100,0,0,332,
		333,5,111,0,0,333,334,5,117,0,0,334,335,5,98,0,0,335,336,5,108,0,0,336,
		337,5,101,0,0,337,88,1,0,0,0,338,339,5,100,0,0,339,340,5,101,0,0,340,341,
		5,99,0,0,341,342,5,105,0,0,342,343,5,109,0,0,343,344,5,97,0,0,344,345,
		5,108,0,0,345,90,1,0,0,0,346,347,5,116,0,0,347,348,5,121,0,0,348,349,5,
		112,0,0,349,350,5,101,0,0,350,92,1,0,0,0,351,352,5,115,0,0,352,353,5,121,
		0,0,353,354,5,109,0,0,354,355,5,98,0,0,355,356,5,111,0,0,356,357,5,108,
		0,0,357,94,1,0,0,0,358,359,5,118,0,0,359,360,5,111,0,0,360,361,5,105,0,
		0,361,362,5,100,0,0,362,96,1,0,0,0,363,364,5,117,0,0,364,365,5,115,0,0,
		365,366,5,105,0,0,366,367,5,110,0,0,367,368,5,103,0,0,368,98,1,0,0,0,369,
		370,5,114,0,0,370,371,5,101,0,0,371,372,5,116,0,0,372,373,5,117,0,0,373,
		374,5,114,0,0,374,375,5,110,0,0,375,376,5,115,0,0,376,100,1,0,0,0,377,
		378,5,124,0,0,378,102,1,0,0,0,379,380,5,97,0,0,380,381,5,108,0,0,381,382,
		5,116,0,0,382,104,1,0,0,0,383,384,5,61,0,0,384,385,5,62,0,0,385,106,1,
		0,0,0,386,387,5,116,0,0,387,388,5,111,0,0,388,389,5,107,0,0,389,390,5,
		101,0,0,390,391,5,110,0,0,391,108,1,0,0,0,392,393,5,104,0,0,393,394,5,
		105,0,0,394,395,5,100,0,0,395,396,5,100,0,0,396,397,5,101,0,0,397,398,
		5,110,0,0,398,110,1,0,0,0,399,400,5,110,0,0,400,401,5,117,0,0,401,402,
		5,108,0,0,402,403,5,108,0,0,403,112,1,0,0,0,404,405,5,116,0,0,405,406,
		5,114,0,0,406,407,5,117,0,0,407,408,5,101,0,0,408,114,1,0,0,0,409,410,
		5,102,0,0,410,411,5,97,0,0,411,412,5,108,0,0,412,413,5,115,0,0,413,414,
		5,101,0,0,414,116,1,0,0,0,415,424,5,48,0,0,416,420,2,49,57,0,417,419,2,
		48,57,0,418,417,1,0,0,0,419,422,1,0,0,0,420,418,1,0,0,0,420,421,1,0,0,
		0,421,424,1,0,0,0,422,420,1,0,0,0,423,415,1,0,0,0,423,416,1,0,0,0,424,
		118,1,0,0,0,425,434,5,48,0,0,426,430,2,49,57,0,427,429,2,48,57,0,428,427,
		1,0,0,0,429,432,1,0,0,0,430,428,1,0,0,0,430,431,1,0,0,0,431,434,1,0,0,
		0,432,430,1,0,0,0,433,425,1,0,0,0,433,426,1,0,0,0,434,435,1,0,0,0,435,
		437,5,46,0,0,436,438,2,48,57,0,437,436,1,0,0,0,438,439,1,0,0,0,439,437,
		1,0,0,0,439,440,1,0,0,0,440,120,1,0,0,0,441,443,7,0,0,0,442,441,1,0,0,
		0,443,444,1,0,0,0,444,442,1,0,0,0,444,445,1,0,0,0,445,449,1,0,0,0,446,
		448,7,1,0,0,447,446,1,0,0,0,448,451,1,0,0,0,449,447,1,0,0,0,449,450,1,
		0,0,0,450,122,1,0,0,0,451,449,1,0,0,0,452,454,5,64,0,0,453,455,7,0,0,0,
		454,453,1,0,0,0,455,456,1,0,0,0,456,454,1,0,0,0,456,457,1,0,0,0,457,461,
		1,0,0,0,458,460,7,1,0,0,459,458,1,0,0,0,460,463,1,0,0,0,461,459,1,0,0,
		0,461,462,1,0,0,0,462,124,1,0,0,0,463,461,1,0,0,0,464,468,5,34,0,0,465,
		467,3,137,68,0,466,465,1,0,0,0,467,470,1,0,0,0,468,466,1,0,0,0,468,469,
		1,0,0,0,469,471,1,0,0,0,470,468,1,0,0,0,471,481,5,34,0,0,472,476,5,39,
		0,0,473,475,3,141,70,0,474,473,1,0,0,0,475,478,1,0,0,0,476,474,1,0,0,0,
		476,477,1,0,0,0,477,479,1,0,0,0,478,476,1,0,0,0,479,481,5,39,0,0,480,464,
		1,0,0,0,480,472,1,0,0,0,481,126,1,0,0,0,482,484,7,2,0,0,483,482,1,0,0,
		0,484,485,1,0,0,0,485,483,1,0,0,0,485,486,1,0,0,0,486,487,1,0,0,0,487,
		488,6,63,0,0,488,128,1,0,0,0,489,490,5,13,0,0,490,493,5,10,0,0,491,493,
		7,3,0,0,492,489,1,0,0,0,492,491,1,0,0,0,493,494,1,0,0,0,494,495,6,64,0,
		0,495,130,1,0,0,0,496,497,5,47,0,0,497,498,5,47,0,0,498,502,1,0,0,0,499,
		501,8,3,0,0,500,499,1,0,0,0,501,504,1,0,0,0,502,500,1,0,0,0,502,503,1,
		0,0,0,503,505,1,0,0,0,504,502,1,0,0,0,505,506,6,65,0,0,506,132,1,0,0,0,
		507,508,5,47,0,0,508,509,5,42,0,0,509,513,1,0,0,0,510,512,9,0,0,0,511,
		510,1,0,0,0,512,515,1,0,0,0,513,514,1,0,0,0,513,511,1,0,0,0,514,516,1,
		0,0,0,515,513,1,0,0,0,516,517,5,42,0,0,517,518,5,47,0,0,518,519,1,0,0,
		0,519,520,6,66,0,0,520,134,1,0,0,0,521,522,9,0,0,0,522,523,1,0,0,0,523,
		524,6,67,0,0,524,136,1,0,0,0,525,529,3,139,69,0,526,529,3,145,72,0,527,
		529,3,149,74,0,528,525,1,0,0,0,528,526,1,0,0,0,528,527,1,0,0,0,529,138,
		1,0,0,0,530,531,8,4,0,0,531,140,1,0,0,0,532,536,3,143,71,0,533,536,3,145,
		72,0,534,536,3,149,74,0,535,532,1,0,0,0,535,533,1,0,0,0,535,534,1,0,0,
		0,536,142,1,0,0,0,537,538,8,5,0,0,538,144,1,0,0,0,539,540,5,92,0,0,540,
		541,3,147,73,0,541,146,1,0,0,0,542,543,7,6,0,0,543,148,1,0,0,0,544,545,
		5,92,0,0,545,546,5,117,0,0,546,547,1,0,0,0,547,548,3,151,75,0,548,549,
		3,151,75,0,549,550,3,151,75,0,550,551,3,151,75,0,551,565,1,0,0,0,552,553,
		5,92,0,0,553,554,5,85,0,0,554,555,1,0,0,0,555,556,3,151,75,0,556,557,3,
		151,75,0,557,558,3,151,75,0,558,559,3,151,75,0,559,560,3,151,75,0,560,
		561,3,151,75,0,561,562,3,151,75,0,562,563,3,151,75,0,563,565,1,0,0,0,564,
		544,1,0,0,0,564,552,1,0,0,0,565,150,1,0,0,0,566,567,7,7,0,0,567,152,1,
		0,0,0,20,0,420,423,430,433,439,444,449,456,461,468,476,480,485,492,502,
		513,528,535,564,1,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace MetaDslx.Bootstrap.MetaCompiler3.Compiler
