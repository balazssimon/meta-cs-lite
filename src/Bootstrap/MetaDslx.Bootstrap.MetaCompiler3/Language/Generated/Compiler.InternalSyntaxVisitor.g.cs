#nullable enable

namespace MetaDslx.Bootstrap.MetaCompiler3.Compiler.Syntax.InternalSyntax
{
    internal class CompilerInternalSyntaxVisitor : global::MetaDslx.CodeAnalysis.Syntax.InternalSyntax.InternalSyntaxVisitor
    {
        public virtual void VisitSkippedTokensTrivia(GreenSkippedTokensTriviaSyntax node) => this.DefaultVisit(node);
        public virtual void VisitMainGreen(MainGreen node) => this.DefaultVisit(node);
        public virtual void VisitUsingMetaModelGreen(UsingMetaModelGreen node) => this.DefaultVisit(node);
        public virtual void VisitUsingAlt2Green(UsingAlt2Green node) => this.DefaultVisit(node);
        public virtual void VisitLanguageDeclarationGreen(LanguageDeclarationGreen node) => this.DefaultVisit(node);
        public virtual void VisitGrammarGreen(GrammarGreen node) => this.DefaultVisit(node);
        public virtual void VisitGrammarRuleAlt1Green(GrammarRuleAlt1Green node) => this.DefaultVisit(node);
        public virtual void VisitGrammarRuleAlt2Green(GrammarRuleAlt2Green node) => this.DefaultVisit(node);
        public virtual void VisitRuleGreen(RuleGreen node) => this.DefaultVisit(node);
        public virtual void VisitAlternativeGreen(AlternativeGreen node) => this.DefaultVisit(node);
        public virtual void VisitElementGreen(ElementGreen node) => this.DefaultVisit(node);
        public virtual void VisitElementValueAlt1Green(ElementValueAlt1Green node) => this.DefaultVisit(node);
        public virtual void VisitElementValueAlt2Green(ElementValueAlt2Green node) => this.DefaultVisit(node);
        public virtual void VisitElementValueAlt3Green(ElementValueAlt3Green node) => this.DefaultVisit(node);
        public virtual void VisitElementValueAlt4Green(ElementValueAlt4Green node) => this.DefaultVisit(node);
        public virtual void VisitBlockGreen(BlockGreen node) => this.DefaultVisit(node);
        public virtual void VisitBlockAlternativeGreen(BlockAlternativeGreen node) => this.DefaultVisit(node);
        public virtual void VisitRuleRefAlt1Green(RuleRefAlt1Green node) => this.DefaultVisit(node);
        public virtual void VisitRuleRefAlt2Green(RuleRefAlt2Green node) => this.DefaultVisit(node);
        public virtual void VisitRuleRefAlt3Green(RuleRefAlt3Green node) => this.DefaultVisit(node);
        public virtual void VisitEof1Green(Eof1Green node) => this.DefaultVisit(node);
        public virtual void VisitFixedGreen(FixedGreen node) => this.DefaultVisit(node);
        public virtual void VisitLexerRuleAlt1Green(LexerRuleAlt1Green node) => this.DefaultVisit(node);
        public virtual void VisitLexerRuleAlt2Green(LexerRuleAlt2Green node) => this.DefaultVisit(node);
        public virtual void VisitTokenGreen(TokenGreen node) => this.DefaultVisit(node);
        public virtual void VisitFragmentGreen(FragmentGreen node) => this.DefaultVisit(node);
        public virtual void VisitLAlternativeGreen(LAlternativeGreen node) => this.DefaultVisit(node);
        public virtual void VisitLElementGreen(LElementGreen node) => this.DefaultVisit(node);
        public virtual void VisitLElementValueAlt1Green(LElementValueAlt1Green node) => this.DefaultVisit(node);
        public virtual void VisitLElementValueAlt2Green(LElementValueAlt2Green node) => this.DefaultVisit(node);
        public virtual void VisitLElementValueAlt3Green(LElementValueAlt3Green node) => this.DefaultVisit(node);
        public virtual void VisitLElementValueAlt4Green(LElementValueAlt4Green node) => this.DefaultVisit(node);
        public virtual void VisitLElementValueAlt5Green(LElementValueAlt5Green node) => this.DefaultVisit(node);
        public virtual void VisitLReferenceGreen(LReferenceGreen node) => this.DefaultVisit(node);
        public virtual void VisitLFixedGreen(LFixedGreen node) => this.DefaultVisit(node);
        public virtual void VisitLWildCardGreen(LWildCardGreen node) => this.DefaultVisit(node);
        public virtual void VisitLRangeGreen(LRangeGreen node) => this.DefaultVisit(node);
        public virtual void VisitLBlockGreen(LBlockGreen node) => this.DefaultVisit(node);
        public virtual void VisitExpressionAlt1Green(ExpressionAlt1Green node) => this.DefaultVisit(node);
        public virtual void VisitExpressionAlt2Green(ExpressionAlt2Green node) => this.DefaultVisit(node);
        public virtual void VisitSingleExpressionAlt1Green(SingleExpressionAlt1Green node) => this.DefaultVisit(node);
        public virtual void VisitSingleExpressionAlt2Green(SingleExpressionAlt2Green node) => this.DefaultVisit(node);
        public virtual void VisitArrayExpressionGreen(ArrayExpressionGreen node) => this.DefaultVisit(node);
        public virtual void VisitParserAnnotationGreen(ParserAnnotationGreen node) => this.DefaultVisit(node);
        public virtual void VisitLexerAnnotationGreen(LexerAnnotationGreen node) => this.DefaultVisit(node);
        public virtual void VisitAnnotationArgumentGreen(AnnotationArgumentGreen node) => this.DefaultVisit(node);
        public virtual void VisitAssignmentGreen(AssignmentGreen node) => this.DefaultVisit(node);
        public virtual void VisitMultiplicityGreen(MultiplicityGreen node) => this.DefaultVisit(node);
        public virtual void VisitTypeReferenceIdentifierAlt1Green(TypeReferenceIdentifierAlt1Green node) => this.DefaultVisit(node);
        public virtual void VisitTypeReferenceIdentifierAlt2Green(TypeReferenceIdentifierAlt2Green node) => this.DefaultVisit(node);
        public virtual void VisitTypeReferenceAlt1Green(TypeReferenceAlt1Green node) => this.DefaultVisit(node);
        public virtual void VisitTypeReferenceAlt2Green(TypeReferenceAlt2Green node) => this.DefaultVisit(node);
        public virtual void VisitPrimitiveTypeGreen(PrimitiveTypeGreen node) => this.DefaultVisit(node);
        public virtual void VisitNameGreen(NameGreen node) => this.DefaultVisit(node);
        public virtual void VisitQualifierGreen(QualifierGreen node) => this.DefaultVisit(node);
        public virtual void VisitIdentifierGreen(IdentifierGreen node) => this.DefaultVisit(node);
        public virtual void VisitMainBlock1Green(MainBlock1Green node) => this.DefaultVisit(node);
        public virtual void VisitMainBlock2Green(MainBlock2Green node) => this.DefaultVisit(node);
        public virtual void VisitGrammarBlock1Green(GrammarBlock1Green node) => this.DefaultVisit(node);
        public virtual void VisitRuleBlock1Alt1Green(RuleBlock1Alt1Green node) => this.DefaultVisit(node);
        public virtual void VisitRuleBlock1Alt2Green(RuleBlock1Alt2Green node) => this.DefaultVisit(node);
        public virtual void VisitRulealternativesBlockGreen(RulealternativesBlockGreen node) => this.DefaultVisit(node);
        public virtual void VisitAlternativeBlock1Green(AlternativeBlock1Green node) => this.DefaultVisit(node);
        public virtual void VisitAlternativeBlock1Block1Alt1Green(AlternativeBlock1Block1Alt1Green node) => this.DefaultVisit(node);
        public virtual void VisitAlternativeBlock1Block1Alt2Green(AlternativeBlock1Block1Alt2Green node) => this.DefaultVisit(node);
        public virtual void VisitAlternativeBlock2Green(AlternativeBlock2Green node) => this.DefaultVisit(node);
        public virtual void VisitElementBlock1Green(ElementBlock1Green node) => this.DefaultVisit(node);
        public virtual void VisitBlockalternativesBlockGreen(BlockalternativesBlockGreen node) => this.DefaultVisit(node);
        public virtual void VisitBlockAlternativeBlock1Green(BlockAlternativeBlock1Green node) => this.DefaultVisit(node);
        public virtual void VisitRuleRefAlt3referencedTypesBlockGreen(RuleRefAlt3referencedTypesBlockGreen node) => this.DefaultVisit(node);
        public virtual void VisitRuleRefAlt3Block1Green(RuleRefAlt3Block1Green node) => this.DefaultVisit(node);
        public virtual void VisitTokenBlock1Alt1Green(TokenBlock1Alt1Green node) => this.DefaultVisit(node);
        public virtual void VisitTokenBlock1Alt2Green(TokenBlock1Alt2Green node) => this.DefaultVisit(node);
        public virtual void VisitTokenBlock1Alt1Block1Green(TokenBlock1Alt1Block1Green node) => this.DefaultVisit(node);
        public virtual void VisitTokenalternativesBlockGreen(TokenalternativesBlockGreen node) => this.DefaultVisit(node);
        public virtual void VisitFragmentalternativesBlockGreen(FragmentalternativesBlockGreen node) => this.DefaultVisit(node);
        public virtual void VisitLBlockalternativesBlockGreen(LBlockalternativesBlockGreen node) => this.DefaultVisit(node);
        public virtual void VisitSingleExpressionAlt1Block1Alt1Green(SingleExpressionAlt1Block1Alt1Green node) => this.DefaultVisit(node);
        public virtual void VisitSingleExpressionAlt1Block1Alt2Green(SingleExpressionAlt1Block1Alt2Green node) => this.DefaultVisit(node);
        public virtual void VisitSingleExpressionAlt1Block1Alt3Green(SingleExpressionAlt1Block1Alt3Green node) => this.DefaultVisit(node);
        public virtual void VisitSingleExpressionAlt1Block1Alt4Green(SingleExpressionAlt1Block1Alt4Green node) => this.DefaultVisit(node);
        public virtual void VisitSingleExpressionAlt1Block1Alt5Green(SingleExpressionAlt1Block1Alt5Green node) => this.DefaultVisit(node);
        public virtual void VisitSingleExpressionAlt1Block1Alt6Green(SingleExpressionAlt1Block1Alt6Green node) => this.DefaultVisit(node);
        public virtual void VisitSingleExpressionAlt1Block1Alt7Green(SingleExpressionAlt1Block1Alt7Green node) => this.DefaultVisit(node);
        public virtual void VisitArrayExpressionBlock1Green(ArrayExpressionBlock1Green node) => this.DefaultVisit(node);
        public virtual void VisitArrayExpressionBlock1itemsBlockGreen(ArrayExpressionBlock1itemsBlockGreen node) => this.DefaultVisit(node);
        public virtual void VisitParserAnnotationBlock1Green(ParserAnnotationBlock1Green node) => this.DefaultVisit(node);
        public virtual void VisitParserAnnotationBlock1argumentsBlockGreen(ParserAnnotationBlock1argumentsBlockGreen node) => this.DefaultVisit(node);
        public virtual void VisitLexerAnnotationBlock1Green(LexerAnnotationBlock1Green node) => this.DefaultVisit(node);
        public virtual void VisitLexerAnnotationBlock1argumentsBlockGreen(LexerAnnotationBlock1argumentsBlockGreen node) => this.DefaultVisit(node);
        public virtual void VisitAnnotationArgumentBlock1Green(AnnotationArgumentBlock1Green node) => this.DefaultVisit(node);
        public virtual void VisitQualifierIdentifierBlockGreen(QualifierIdentifierBlockGreen node) => this.DefaultVisit(node);
    }

    internal class CompilerInternalSyntaxVisitor<TResult> : global::MetaDslx.CodeAnalysis.Syntax.InternalSyntax.InternalSyntaxVisitor<TResult>
    {
        public virtual TResult VisitSkippedTokensTrivia(GreenSkippedTokensTriviaSyntax node) => this.DefaultVisit(node);
        public virtual TResult VisitMainGreen(MainGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitUsingMetaModelGreen(UsingMetaModelGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitUsingAlt2Green(UsingAlt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitLanguageDeclarationGreen(LanguageDeclarationGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitGrammarGreen(GrammarGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitGrammarRuleAlt1Green(GrammarRuleAlt1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitGrammarRuleAlt2Green(GrammarRuleAlt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitRuleGreen(RuleGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitAlternativeGreen(AlternativeGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitElementGreen(ElementGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitElementValueAlt1Green(ElementValueAlt1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitElementValueAlt2Green(ElementValueAlt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitElementValueAlt3Green(ElementValueAlt3Green node) => this.DefaultVisit(node);
        public virtual TResult VisitElementValueAlt4Green(ElementValueAlt4Green node) => this.DefaultVisit(node);
        public virtual TResult VisitBlockGreen(BlockGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitBlockAlternativeGreen(BlockAlternativeGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitRuleRefAlt1Green(RuleRefAlt1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitRuleRefAlt2Green(RuleRefAlt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitRuleRefAlt3Green(RuleRefAlt3Green node) => this.DefaultVisit(node);
        public virtual TResult VisitEof1Green(Eof1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitFixedGreen(FixedGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitLexerRuleAlt1Green(LexerRuleAlt1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitLexerRuleAlt2Green(LexerRuleAlt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitTokenGreen(TokenGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitFragmentGreen(FragmentGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitLAlternativeGreen(LAlternativeGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitLElementGreen(LElementGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitLElementValueAlt1Green(LElementValueAlt1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitLElementValueAlt2Green(LElementValueAlt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitLElementValueAlt3Green(LElementValueAlt3Green node) => this.DefaultVisit(node);
        public virtual TResult VisitLElementValueAlt4Green(LElementValueAlt4Green node) => this.DefaultVisit(node);
        public virtual TResult VisitLElementValueAlt5Green(LElementValueAlt5Green node) => this.DefaultVisit(node);
        public virtual TResult VisitLReferenceGreen(LReferenceGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitLFixedGreen(LFixedGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitLWildCardGreen(LWildCardGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitLRangeGreen(LRangeGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitLBlockGreen(LBlockGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitExpressionAlt1Green(ExpressionAlt1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitExpressionAlt2Green(ExpressionAlt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitSingleExpressionAlt1Green(SingleExpressionAlt1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitSingleExpressionAlt2Green(SingleExpressionAlt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitArrayExpressionGreen(ArrayExpressionGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitParserAnnotationGreen(ParserAnnotationGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitLexerAnnotationGreen(LexerAnnotationGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitAnnotationArgumentGreen(AnnotationArgumentGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitAssignmentGreen(AssignmentGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitMultiplicityGreen(MultiplicityGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitTypeReferenceIdentifierAlt1Green(TypeReferenceIdentifierAlt1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitTypeReferenceIdentifierAlt2Green(TypeReferenceIdentifierAlt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitTypeReferenceAlt1Green(TypeReferenceAlt1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitTypeReferenceAlt2Green(TypeReferenceAlt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitPrimitiveTypeGreen(PrimitiveTypeGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitNameGreen(NameGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitQualifierGreen(QualifierGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitIdentifierGreen(IdentifierGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitMainBlock1Green(MainBlock1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitMainBlock2Green(MainBlock2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitGrammarBlock1Green(GrammarBlock1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitRuleBlock1Alt1Green(RuleBlock1Alt1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitRuleBlock1Alt2Green(RuleBlock1Alt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitRulealternativesBlockGreen(RulealternativesBlockGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitAlternativeBlock1Green(AlternativeBlock1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitAlternativeBlock1Block1Alt1Green(AlternativeBlock1Block1Alt1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitAlternativeBlock1Block1Alt2Green(AlternativeBlock1Block1Alt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitAlternativeBlock2Green(AlternativeBlock2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitElementBlock1Green(ElementBlock1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitBlockalternativesBlockGreen(BlockalternativesBlockGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitBlockAlternativeBlock1Green(BlockAlternativeBlock1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitRuleRefAlt3referencedTypesBlockGreen(RuleRefAlt3referencedTypesBlockGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitRuleRefAlt3Block1Green(RuleRefAlt3Block1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitTokenBlock1Alt1Green(TokenBlock1Alt1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitTokenBlock1Alt2Green(TokenBlock1Alt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitTokenBlock1Alt1Block1Green(TokenBlock1Alt1Block1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitTokenalternativesBlockGreen(TokenalternativesBlockGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitFragmentalternativesBlockGreen(FragmentalternativesBlockGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitLBlockalternativesBlockGreen(LBlockalternativesBlockGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitSingleExpressionAlt1Block1Alt1Green(SingleExpressionAlt1Block1Alt1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitSingleExpressionAlt1Block1Alt2Green(SingleExpressionAlt1Block1Alt2Green node) => this.DefaultVisit(node);
        public virtual TResult VisitSingleExpressionAlt1Block1Alt3Green(SingleExpressionAlt1Block1Alt3Green node) => this.DefaultVisit(node);
        public virtual TResult VisitSingleExpressionAlt1Block1Alt4Green(SingleExpressionAlt1Block1Alt4Green node) => this.DefaultVisit(node);
        public virtual TResult VisitSingleExpressionAlt1Block1Alt5Green(SingleExpressionAlt1Block1Alt5Green node) => this.DefaultVisit(node);
        public virtual TResult VisitSingleExpressionAlt1Block1Alt6Green(SingleExpressionAlt1Block1Alt6Green node) => this.DefaultVisit(node);
        public virtual TResult VisitSingleExpressionAlt1Block1Alt7Green(SingleExpressionAlt1Block1Alt7Green node) => this.DefaultVisit(node);
        public virtual TResult VisitArrayExpressionBlock1Green(ArrayExpressionBlock1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitArrayExpressionBlock1itemsBlockGreen(ArrayExpressionBlock1itemsBlockGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitParserAnnotationBlock1Green(ParserAnnotationBlock1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitParserAnnotationBlock1argumentsBlockGreen(ParserAnnotationBlock1argumentsBlockGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitLexerAnnotationBlock1Green(LexerAnnotationBlock1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitLexerAnnotationBlock1argumentsBlockGreen(LexerAnnotationBlock1argumentsBlockGreen node) => this.DefaultVisit(node);
        public virtual TResult VisitAnnotationArgumentBlock1Green(AnnotationArgumentBlock1Green node) => this.DefaultVisit(node);
        public virtual TResult VisitQualifierIdentifierBlockGreen(QualifierIdentifierBlockGreen node) => this.DefaultVisit(node);
    }
}
