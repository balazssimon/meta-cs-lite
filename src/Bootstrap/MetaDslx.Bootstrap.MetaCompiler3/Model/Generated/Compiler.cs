#nullable enable

namespace MetaDslx.Bootstrap.MetaCompiler3.Model
{
    using __MetaMetaModel = global::MetaDslx.Languages.MetaModel.Model.Meta;
    using __MetaModelFactory = global::MetaDslx.Languages.MetaModel.Model.MetaModelFactory;
    using __Model = global::MetaDslx.Modeling.Model;
    using __MetaModel = global::MetaDslx.Modeling.MetaModel;
    using __IModelObject = global::MetaDslx.Modeling.IModelObject;
    using __ModelFactory = global::MetaDslx.Modeling.ModelFactory;
    using __MultiModelFactory = global::MetaDslx.Modeling.MultiModelFactory;
    using __ModelVersion = global::MetaDslx.Modeling.ModelVersion;
    using __ModelEnumInfo = global::MetaDslx.Modeling.ModelEnumInfo;
    using __ModelClassInfo = global::MetaDslx.Modeling.ModelClassInfo;
    using __ModelProperty = global::MetaDslx.Modeling.ModelProperty;
    using __ModelPropertyFlags = global::MetaDslx.Modeling.ModelPropertyFlags;
    using __ModelOperation = global::MetaDslx.Modeling.ModelOperation;
    using __ModelOperationInfo = global::MetaDslx.Modeling.ModelOperationInfo;
    using __ImmutableArray = global::System.Collections.Immutable.ImmutableArray;
    using __ImmutableDictionary = global::System.Collections.Immutable.ImmutableDictionary;
    using __MetaType = global::MetaDslx.CodeAnalysis.MetaType;
    using __MetaSymbol = global::MetaDslx.CodeAnalysis.MetaSymbol;
    using __Type = global::System.Type;
    using __Enum = global::System.Enum;

    internal interface ICompiler
    {
    }
    
    public sealed class Compiler : __MetaModel, ICompiler
    {
        // If there is an error at the following line, create a new class called 'CustomCompilerImplementation'
        // inheriting from the class 'CustomCompilerImplementationBase' and provide the custom implementation
        // for the derived properties and operations defined in the metamodel
        internal static readonly CustomCompilerImplementationBase __CustomImpl = new CustomCompilerImplementation();
    
        private static readonly Compiler _instance;
        public static Compiler MInstance => _instance;
    
        private static readonly __ModelProperty _Declaration_Name;
        private static readonly __ModelProperty _Declaration_Parent;
        private static readonly __ModelProperty _Declaration_Declarations;
        private static readonly __ModelProperty _Declaration_FullName;
        private static readonly __ModelProperty _Language_Namespace;
        private static readonly __ModelProperty _Language_BaseLanguages;
        private static readonly __ModelProperty _Language_Grammar;
        private static readonly __ModelProperty _Grammar_Language;
        private static readonly __ModelProperty _Grammar_GrammarRules;
        private static readonly __ModelProperty _Grammar_TokenKinds;
        private static readonly __ModelProperty _Grammar_Tokens;
        private static readonly __ModelProperty _Grammar_Rules;
        private static readonly __ModelProperty _Grammar_Blocks;
        private static readonly __ModelProperty _Grammar_DefaultWhitespace;
        private static readonly __ModelProperty _Grammar_DefaultEndOfLine;
        private static readonly __ModelProperty _Grammar_DefaultSeparator;
        private static readonly __ModelProperty _Grammar_DefaultIdentifier;
        private static readonly __ModelProperty _Grammar_MainRule;
        private static readonly __ModelProperty _Annotation_AttributeClass;
        private static readonly __ModelProperty _Annotation_Arguments;
        private static readonly __ModelProperty _AnnotationArgument_NamedParameter;
        private static readonly __ModelProperty _AnnotationArgument_Parameter;
        private static readonly __ModelProperty _AnnotationArgument_ParameterType;
        private static readonly __ModelProperty _AnnotationArgument_Value;
        private static readonly __ModelProperty _Binder_TypeName;
        private static readonly __ModelProperty _Binder_Arguments;
        private static readonly __ModelProperty _Binder_IsNegated;
        private static readonly __ModelProperty _Binder_ConstructorArguments;
        private static readonly __ModelProperty _BinderArgument_Name;
        private static readonly __ModelProperty _BinderArgument_TypeName;
        private static readonly __ModelProperty _BinderArgument_IsArray;
        private static readonly __ModelProperty _BinderArgument_Values;
        private static readonly __ModelProperty _CSharpElement_Annotations;
        private static readonly __ModelProperty _CSharpElement_CSharpName;
        private static readonly __ModelProperty _CSharpElement_AntlrName;
        private static readonly __ModelProperty _CSharpElement_Binders;
        private static readonly __ModelProperty _CSharpElement_ContainsBinders;
        private static readonly __ModelProperty _TokenKind_Name;
        private static readonly __ModelProperty _TokenKind_TypeName;
        private static readonly __ModelProperty _GrammarRule_Language;
        private static readonly __ModelProperty _GrammarRule_Grammar;
        private static readonly __ModelProperty _LexerRule_Alternatives;
        private static readonly __ModelProperty _LexerRule_IsFixed;
        private static readonly __ModelProperty _LexerRule_FixedText;
        private static readonly __ModelProperty _Token_ReturnType;
        private static readonly __ModelProperty _Token_IsTrivia;
        private static readonly __ModelProperty _Token_TokenKind;
        private static readonly __ModelProperty _LAlternative_IsFixed;
        private static readonly __ModelProperty _LAlternative_FixedText;
        private static readonly __ModelProperty _LAlternative_Elements;
        private static readonly __ModelProperty _LElement_IsFixed;
        private static readonly __ModelProperty _LElement_FixedText;
        private static readonly __ModelProperty _LElement_IsNegated;
        private static readonly __ModelProperty _LElement_Value;
        private static readonly __ModelProperty _LElement_Multiplicity;
        private static readonly __ModelProperty _LElementValue_IsFixed;
        private static readonly __ModelProperty _LElementValue_FixedText;
        private static readonly __ModelProperty _LReference_IsFixed;
        private static readonly __ModelProperty _LReference_FixedText;
        private static readonly __ModelProperty _LReference_Rule;
        private static readonly __ModelProperty _LFixed_IsFixed;
        private static readonly __ModelProperty _LFixed_FixedText;
        private static readonly __ModelProperty _LFixed_Text;
        private static readonly __ModelProperty _LWildCard_IsFixed;
        private static readonly __ModelProperty _LWildCard_FixedText;
        private static readonly __ModelProperty _LRange_IsFixed;
        private static readonly __ModelProperty _LRange_FixedText;
        private static readonly __ModelProperty _LRange_StartChar;
        private static readonly __ModelProperty _LRange_EndChar;
        private static readonly __ModelProperty _LSet_IsFixed;
        private static readonly __ModelProperty _LSet_FixedText;
        private static readonly __ModelProperty _LSet_Items;
        private static readonly __ModelProperty _LSetItem_IsFixed;
        private static readonly __ModelProperty _LSetItem_FixedText;
        private static readonly __ModelProperty _LSetChar_IsFixed;
        private static readonly __ModelProperty _LSetChar_FixedText;
        private static readonly __ModelProperty _LSetChar_Char;
        private static readonly __ModelProperty _LSetRange_IsFixed;
        private static readonly __ModelProperty _LSetRange_FixedText;
        private static readonly __ModelProperty _LSetRange_StartChar;
        private static readonly __ModelProperty _LSetRange_EndChar;
        private static readonly __ModelProperty _LBlock_IsFixed;
        private static readonly __ModelProperty _LBlock_FixedText;
        private static readonly __ModelProperty _LBlock_Alternatives;
        private static readonly __ModelProperty _Rule_ReturnType;
        private static readonly __ModelProperty _Rule_Alternatives;
        private static readonly __ModelProperty _Rule_BaseRule;
        private static readonly __ModelProperty _Rule_GreenName;
        private static readonly __ModelProperty _Rule_RedName;
        private static readonly __ModelProperty _Alternative_ReturnType;
        private static readonly __ModelProperty _Alternative_ReturnValue;
        private static readonly __ModelProperty _Alternative_Elements;
        private static readonly __ModelProperty _Alternative_GreenName;
        private static readonly __ModelProperty _Alternative_GreenConstructorParameters;
        private static readonly __ModelProperty _Alternative_GreenConstructorArguments;
        private static readonly __ModelProperty _Alternative_GreenUpdateParameters;
        private static readonly __ModelProperty _Alternative_GreenUpdateArguments;
        private static readonly __ModelProperty _Alternative_RedName;
        private static readonly __ModelProperty _Alternative_RedUpdateParameters;
        private static readonly __ModelProperty _Alternative_RedUpdateArguments;
        private static readonly __ModelProperty _Alternative_RedOptionalUpdateParameters;
        private static readonly __ModelProperty _Alternative_RedToGreenArgumentList;
        private static readonly __ModelProperty _Alternative_RedToGreenOptionalArgumentList;
        private static readonly __ModelProperty _Alternative_HasRedToGreenOptionalArguments;
        private static readonly __ModelProperty _Element_Name;
        private static readonly __ModelProperty _Element_Assignment;
        private static readonly __ModelProperty _Element_Value;
        private static readonly __ModelProperty _Element_IsToken;
        private static readonly __ModelProperty _Element_IsList;
        private static readonly __ModelProperty _Element_FieldName;
        private static readonly __ModelProperty _Element_ParameterName;
        private static readonly __ModelProperty _Element_PropertyName;
        private static readonly __ModelProperty _Element_GreenFieldType;
        private static readonly __ModelProperty _Element_GreenParameterValue;
        private static readonly __ModelProperty _Element_GreenPropertyType;
        private static readonly __ModelProperty _Element_GreenPropertyValue;
        private static readonly __ModelProperty _Element_GreenSyntaxNullCondition;
        private static readonly __ModelProperty _Element_GreenSyntaxCondition;
        private static readonly __ModelProperty _Element_IsOptionalUpdateParameter;
        private static readonly __ModelProperty _Element_RedFieldType;
        private static readonly __ModelProperty _Element_RedParameterValue;
        private static readonly __ModelProperty _Element_RedPropertyType;
        private static readonly __ModelProperty _Element_RedPropertyValue;
        private static readonly __ModelProperty _Element_RedToGreenArgument;
        private static readonly __ModelProperty _Element_RedToGreenOptionalArgument;
        private static readonly __ModelProperty _Element_RedSyntaxNullCondition;
        private static readonly __ModelProperty _Element_RedSyntaxCondition;
        private static readonly __ModelProperty _Element_VisitCall;
        private static readonly __ModelProperty _ElementValue_Multiplicity;
        private static readonly __ModelProperty _ElementValue_GreenType;
        private static readonly __ModelProperty _ElementValue_GreenSyntaxCondition;
        private static readonly __ModelProperty _ElementValue_RedType;
        private static readonly __ModelProperty _RuleRef_GrammarRule;
        private static readonly __ModelProperty _RuleRef_ReferencedTypes;
        private static readonly __ModelProperty _RuleRef_Token;
        private static readonly __ModelProperty _RuleRef_Rule;
        private static readonly __ModelProperty _RuleRef_GreenType;
        private static readonly __ModelProperty _RuleRef_GreenSyntaxCondition;
        private static readonly __ModelProperty _RuleRef_RedType;
        private static readonly __ModelProperty _Eof_GreenType;
        private static readonly __ModelProperty _Eof_GreenSyntaxCondition;
        private static readonly __ModelProperty _Eof_RedType;
        private static readonly __ModelProperty _Fixed_Text;
        private static readonly __ModelProperty _TokenAlts_Tokens;
        private static readonly __ModelProperty _TokenAlts_GreenType;
        private static readonly __ModelProperty _TokenAlts_GreenSyntaxCondition;
        private static readonly __ModelProperty _TokenAlts_RedType;
        private static readonly __ModelProperty _Block_GreenType;
        private static readonly __ModelProperty _Block_GreenSyntaxCondition;
        private static readonly __ModelProperty _Block_RedType;
        private static readonly __ModelProperty _SeparatedList_SeparatorFirst;
        private static readonly __ModelProperty _SeparatedList_RepeatedSeparatorFirst;
        private static readonly __ModelProperty _SeparatedList_FirstItems;
        private static readonly __ModelProperty _SeparatedList_FirstSeparators;
        private static readonly __ModelProperty _SeparatedList_RepeatedBlock;
        private static readonly __ModelProperty _SeparatedList_RepeatedItem;
        private static readonly __ModelProperty _SeparatedList_RepeatedSeparator;
        private static readonly __ModelProperty _SeparatedList_LastItems;
        private static readonly __ModelProperty _SeparatedList_LastSeparators;
        private static readonly __ModelProperty _SeparatedList_GreenType;
        private static readonly __ModelProperty _SeparatedList_GreenSyntaxCondition;
        private static readonly __ModelProperty _SeparatedList_RedType;
        private static readonly __ModelProperty _Expression_Value;
        private static readonly __ModelProperty _ArrayExpression_Items;
    
        static Compiler()
        {
            _Annotation_Arguments = new __ModelProperty(typeof(Annotation), "Arguments", typeof(AnnotationArgument), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, "Arguments");
            _Annotation_AttributeClass = new __ModelProperty(typeof(Annotation), "AttributeClass", typeof(__MetaType), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, "AttributeClass");
            _AnnotationArgument_NamedParameter = new __ModelProperty(typeof(AnnotationArgument), "NamedParameter", typeof(__MetaSymbol), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Collection, "NamedParameter");
            _AnnotationArgument_Parameter = new __ModelProperty(typeof(AnnotationArgument), "Parameter", typeof(Declaration), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.Single, "Parameter");
            _AnnotationArgument_ParameterType = new __ModelProperty(typeof(AnnotationArgument), "ParameterType", typeof(__MetaType), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _AnnotationArgument_Value = new __ModelProperty(typeof(AnnotationArgument), "Value", typeof(Expression), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Single, "Value");
            _ArrayExpression_Items = new __ModelProperty(typeof(ArrayExpression), "Items", typeof(Expression), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Collection, null);
            _Binder_Arguments = new __ModelProperty(typeof(Binder), "Arguments", typeof(BinderArgument), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _Binder_ConstructorArguments = new __ModelProperty(typeof(Binder), "ConstructorArguments", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Binder_IsNegated = new __ModelProperty(typeof(Binder), "IsNegated", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _Binder_TypeName = new __ModelProperty(typeof(Binder), "TypeName", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _BinderArgument_IsArray = new __ModelProperty(typeof(BinderArgument), "IsArray", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _BinderArgument_Name = new __ModelProperty(typeof(BinderArgument), "Name", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _BinderArgument_TypeName = new __ModelProperty(typeof(BinderArgument), "TypeName", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _BinderArgument_Values = new __ModelProperty(typeof(BinderArgument), "Values", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Collection, null);
            _CSharpElement_Annotations = new __ModelProperty(typeof(CSharpElement), "Annotations", typeof(Annotation), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _CSharpElement_AntlrName = new __ModelProperty(typeof(CSharpElement), "AntlrName", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _CSharpElement_Binders = new __ModelProperty(typeof(CSharpElement), "Binders", typeof(Binder), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _CSharpElement_ContainsBinders = new __ModelProperty(typeof(CSharpElement), "ContainsBinders", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _CSharpElement_CSharpName = new __ModelProperty(typeof(CSharpElement), "CSharpName", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _Declaration_Declarations = new __ModelProperty(typeof(Declaration), "Declarations", typeof(Declaration), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _Declaration_FullName = new __ModelProperty(typeof(Declaration), "FullName", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Declaration_Name = new __ModelProperty(typeof(Declaration), "Name", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.Name, "Name");
            _Declaration_Parent = new __ModelProperty(typeof(Declaration), "Parent", typeof(Declaration), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, null);
            _Alternative_Elements = new __ModelProperty(typeof(Alternative), "Elements", typeof(Element), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, "Elements");
            _Alternative_GreenConstructorArguments = new __ModelProperty(typeof(Alternative), "GreenConstructorArguments", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Alternative_GreenConstructorParameters = new __ModelProperty(typeof(Alternative), "GreenConstructorParameters", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Alternative_GreenName = new __ModelProperty(typeof(Alternative), "GreenName", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Alternative_GreenUpdateArguments = new __ModelProperty(typeof(Alternative), "GreenUpdateArguments", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Alternative_GreenUpdateParameters = new __ModelProperty(typeof(Alternative), "GreenUpdateParameters", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Alternative_HasRedToGreenOptionalArguments = new __ModelProperty(typeof(Alternative), "HasRedToGreenOptionalArguments", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Alternative_RedName = new __ModelProperty(typeof(Alternative), "RedName", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Alternative_RedOptionalUpdateParameters = new __ModelProperty(typeof(Alternative), "RedOptionalUpdateParameters", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Alternative_RedToGreenArgumentList = new __ModelProperty(typeof(Alternative), "RedToGreenArgumentList", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Alternative_RedToGreenOptionalArgumentList = new __ModelProperty(typeof(Alternative), "RedToGreenOptionalArgumentList", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Alternative_RedUpdateArguments = new __ModelProperty(typeof(Alternative), "RedUpdateArguments", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Alternative_RedUpdateParameters = new __ModelProperty(typeof(Alternative), "RedUpdateParameters", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Alternative_ReturnType = new __ModelProperty(typeof(Alternative), "ReturnType", typeof(__MetaType), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, "ReturnType");
            _Alternative_ReturnValue = new __ModelProperty(typeof(Alternative), "ReturnValue", typeof(Expression), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Single, "ReturnValue");
            _ElementValue_GreenSyntaxCondition = new __ModelProperty(typeof(ElementValue), "GreenSyntaxCondition", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _ElementValue_GreenType = new __ModelProperty(typeof(ElementValue), "GreenType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _ElementValue_Multiplicity = new __ModelProperty(typeof(ElementValue), "Multiplicity", typeof(global::MetaDslx.Bootstrap.MetaCompiler3.Model.Multiplicity), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.EnumType | __ModelPropertyFlags.Single, null);
            _ElementValue_RedType = new __ModelProperty(typeof(ElementValue), "RedType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Block_GreenSyntaxCondition = new __ModelProperty(typeof(Block), "GreenSyntaxCondition", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Block_GreenType = new __ModelProperty(typeof(Block), "GreenType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Block_RedType = new __ModelProperty(typeof(Block), "RedType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_Assignment = new __ModelProperty(typeof(Element), "Assignment", typeof(global::MetaDslx.Bootstrap.MetaCompiler3.Model.Assignment), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.EnumType | __ModelPropertyFlags.Single, "Assignment");
            _Element_FieldName = new __ModelProperty(typeof(Element), "FieldName", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_GreenFieldType = new __ModelProperty(typeof(Element), "GreenFieldType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_GreenParameterValue = new __ModelProperty(typeof(Element), "GreenParameterValue", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_GreenPropertyType = new __ModelProperty(typeof(Element), "GreenPropertyType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_GreenPropertyValue = new __ModelProperty(typeof(Element), "GreenPropertyValue", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_GreenSyntaxCondition = new __ModelProperty(typeof(Element), "GreenSyntaxCondition", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_GreenSyntaxNullCondition = new __ModelProperty(typeof(Element), "GreenSyntaxNullCondition", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_IsList = new __ModelProperty(typeof(Element), "IsList", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_IsOptionalUpdateParameter = new __ModelProperty(typeof(Element), "IsOptionalUpdateParameter", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_IsToken = new __ModelProperty(typeof(Element), "IsToken", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_Name = new __ModelProperty(typeof(Element), "Name", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.Name, "Name");
            _Element_ParameterName = new __ModelProperty(typeof(Element), "ParameterName", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_PropertyName = new __ModelProperty(typeof(Element), "PropertyName", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_RedFieldType = new __ModelProperty(typeof(Element), "RedFieldType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_RedParameterValue = new __ModelProperty(typeof(Element), "RedParameterValue", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_RedPropertyType = new __ModelProperty(typeof(Element), "RedPropertyType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_RedPropertyValue = new __ModelProperty(typeof(Element), "RedPropertyValue", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_RedSyntaxCondition = new __ModelProperty(typeof(Element), "RedSyntaxCondition", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_RedSyntaxNullCondition = new __ModelProperty(typeof(Element), "RedSyntaxNullCondition", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_RedToGreenArgument = new __ModelProperty(typeof(Element), "RedToGreenArgument", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_RedToGreenOptionalArgument = new __ModelProperty(typeof(Element), "RedToGreenOptionalArgument", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Element_Value = new __ModelProperty(typeof(Element), "Value", typeof(ElementValue), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Single, "Value");
            _Element_VisitCall = new __ModelProperty(typeof(Element), "VisitCall", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Eof_GreenSyntaxCondition = new __ModelProperty(typeof(Eof), "GreenSyntaxCondition", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Eof_GreenType = new __ModelProperty(typeof(Eof), "GreenType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Eof_RedType = new __ModelProperty(typeof(Eof), "RedType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Expression_Value = new __ModelProperty(typeof(Expression), "Value", typeof(__MetaSymbol), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, "Value");
            _Fixed_Text = new __ModelProperty(typeof(Fixed), "Text", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _GrammarRule_Grammar = new __ModelProperty(typeof(GrammarRule), "Grammar", typeof(Grammar), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, null);
            _GrammarRule_Language = new __ModelProperty(typeof(GrammarRule), "Language", typeof(Language), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Language_BaseLanguages = new __ModelProperty(typeof(Language), "BaseLanguages", typeof(__MetaType), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Collection, null);
            _Language_Grammar = new __ModelProperty(typeof(Language), "Grammar", typeof(Grammar), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Single, null);
            _Language_Namespace = new __ModelProperty(typeof(Language), "Namespace", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LexerRule_Alternatives = new __ModelProperty(typeof(LexerRule), "Alternatives", typeof(LAlternative), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _LexerRule_FixedText = new __ModelProperty(typeof(LexerRule), "FixedText", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LexerRule_IsFixed = new __ModelProperty(typeof(LexerRule), "IsFixed", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Grammar_Blocks = new __ModelProperty(typeof(Grammar), "Blocks", typeof(Block), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Collection, null);
            _Grammar_DefaultEndOfLine = new __ModelProperty(typeof(Grammar), "DefaultEndOfLine", typeof(Token), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, null);
            _Grammar_DefaultIdentifier = new __ModelProperty(typeof(Grammar), "DefaultIdentifier", typeof(Token), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, null);
            _Grammar_DefaultSeparator = new __ModelProperty(typeof(Grammar), "DefaultSeparator", typeof(Token), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, null);
            _Grammar_DefaultWhitespace = new __ModelProperty(typeof(Grammar), "DefaultWhitespace", typeof(Token), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, null);
            _Grammar_GrammarRules = new __ModelProperty(typeof(Grammar), "GrammarRules", typeof(GrammarRule), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _Grammar_Language = new __ModelProperty(typeof(Grammar), "Language", typeof(Language), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, null);
            _Grammar_MainRule = new __ModelProperty(typeof(Grammar), "MainRule", typeof(Rule), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, null);
            _Grammar_Rules = new __ModelProperty(typeof(Grammar), "Rules", typeof(Rule), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _Grammar_TokenKinds = new __ModelProperty(typeof(Grammar), "TokenKinds", typeof(TokenKind), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _Grammar_Tokens = new __ModelProperty(typeof(Grammar), "Tokens", typeof(Token), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _LAlternative_Elements = new __ModelProperty(typeof(LAlternative), "Elements", typeof(LElement), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _LAlternative_FixedText = new __ModelProperty(typeof(LAlternative), "FixedText", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LAlternative_IsFixed = new __ModelProperty(typeof(LAlternative), "IsFixed", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LElement_FixedText = new __ModelProperty(typeof(LElement), "FixedText", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LElement_IsFixed = new __ModelProperty(typeof(LElement), "IsFixed", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LElement_IsNegated = new __ModelProperty(typeof(LElement), "IsNegated", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _LElement_Multiplicity = new __ModelProperty(typeof(LElement), "Multiplicity", typeof(global::MetaDslx.Bootstrap.MetaCompiler3.Model.Multiplicity), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.EnumType | __ModelPropertyFlags.Single, null);
            _LElement_Value = new __ModelProperty(typeof(LElement), "Value", typeof(LElementValue), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Single, null);
            _LElementValue_FixedText = new __ModelProperty(typeof(LElementValue), "FixedText", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LElementValue_IsFixed = new __ModelProperty(typeof(LElementValue), "IsFixed", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LBlock_Alternatives = new __ModelProperty(typeof(LBlock), "Alternatives", typeof(LAlternative), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _LBlock_FixedText = new __ModelProperty(typeof(LBlock), "FixedText", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LBlock_IsFixed = new __ModelProperty(typeof(LBlock), "IsFixed", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LFixed_FixedText = new __ModelProperty(typeof(LFixed), "FixedText", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LFixed_IsFixed = new __ModelProperty(typeof(LFixed), "IsFixed", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LFixed_Text = new __ModelProperty(typeof(LFixed), "Text", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _LRange_EndChar = new __ModelProperty(typeof(LRange), "EndChar", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _LRange_FixedText = new __ModelProperty(typeof(LRange), "FixedText", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LRange_IsFixed = new __ModelProperty(typeof(LRange), "IsFixed", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LRange_StartChar = new __ModelProperty(typeof(LRange), "StartChar", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _LReference_FixedText = new __ModelProperty(typeof(LReference), "FixedText", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LReference_IsFixed = new __ModelProperty(typeof(LReference), "IsFixed", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LReference_Rule = new __ModelProperty(typeof(LReference), "Rule", typeof(LexerRule), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, null);
            _LSet_FixedText = new __ModelProperty(typeof(LSet), "FixedText", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LSet_IsFixed = new __ModelProperty(typeof(LSet), "IsFixed", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LSet_Items = new __ModelProperty(typeof(LSet), "Items", typeof(LSetItem), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _LSetItem_FixedText = new __ModelProperty(typeof(LSetItem), "FixedText", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LSetItem_IsFixed = new __ModelProperty(typeof(LSetItem), "IsFixed", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LSetChar_Char = new __ModelProperty(typeof(LSetChar), "Char", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _LSetChar_FixedText = new __ModelProperty(typeof(LSetChar), "FixedText", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LSetChar_IsFixed = new __ModelProperty(typeof(LSetChar), "IsFixed", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LSetRange_EndChar = new __ModelProperty(typeof(LSetRange), "EndChar", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _LSetRange_FixedText = new __ModelProperty(typeof(LSetRange), "FixedText", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LSetRange_IsFixed = new __ModelProperty(typeof(LSetRange), "IsFixed", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LSetRange_StartChar = new __ModelProperty(typeof(LSetRange), "StartChar", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _LWildCard_FixedText = new __ModelProperty(typeof(LWildCard), "FixedText", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _LWildCard_IsFixed = new __ModelProperty(typeof(LWildCard), "IsFixed", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Rule_Alternatives = new __ModelProperty(typeof(Rule), "Alternatives", typeof(Alternative), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, "Alternatives");
            _Rule_BaseRule = new __ModelProperty(typeof(Rule), "BaseRule", typeof(Alternative), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, null);
            _Rule_GreenName = new __ModelProperty(typeof(Rule), "GreenName", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Rule_RedName = new __ModelProperty(typeof(Rule), "RedName", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _Rule_ReturnType = new __ModelProperty(typeof(Rule), "ReturnType", typeof(__MetaType), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, "ReturnType");
            _RuleRef_GrammarRule = new __ModelProperty(typeof(RuleRef), "GrammarRule", typeof(GrammarRule), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, "Rule");
            _RuleRef_GreenSyntaxCondition = new __ModelProperty(typeof(RuleRef), "GreenSyntaxCondition", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _RuleRef_GreenType = new __ModelProperty(typeof(RuleRef), "GreenType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _RuleRef_RedType = new __ModelProperty(typeof(RuleRef), "RedType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _RuleRef_ReferencedTypes = new __ModelProperty(typeof(RuleRef), "ReferencedTypes", typeof(__MetaType), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Collection, "ReferencedTypes");
            _RuleRef_Rule = new __ModelProperty(typeof(RuleRef), "Rule", typeof(Rule), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _RuleRef_Token = new __ModelProperty(typeof(RuleRef), "Token", typeof(Token), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _SeparatedList_FirstItems = new __ModelProperty(typeof(SeparatedList), "FirstItems", typeof(Element), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _SeparatedList_FirstSeparators = new __ModelProperty(typeof(SeparatedList), "FirstSeparators", typeof(Element), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _SeparatedList_GreenSyntaxCondition = new __ModelProperty(typeof(SeparatedList), "GreenSyntaxCondition", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _SeparatedList_GreenType = new __ModelProperty(typeof(SeparatedList), "GreenType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _SeparatedList_LastItems = new __ModelProperty(typeof(SeparatedList), "LastItems", typeof(Element), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _SeparatedList_LastSeparators = new __ModelProperty(typeof(SeparatedList), "LastSeparators", typeof(Element), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _SeparatedList_RedType = new __ModelProperty(typeof(SeparatedList), "RedType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _SeparatedList_RepeatedBlock = new __ModelProperty(typeof(SeparatedList), "RepeatedBlock", typeof(Element), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Single, null);
            _SeparatedList_RepeatedItem = new __ModelProperty(typeof(SeparatedList), "RepeatedItem", typeof(Element), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, null);
            _SeparatedList_RepeatedSeparator = new __ModelProperty(typeof(SeparatedList), "RepeatedSeparator", typeof(Element), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, null);
            _SeparatedList_RepeatedSeparatorFirst = new __ModelProperty(typeof(SeparatedList), "RepeatedSeparatorFirst", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _SeparatedList_SeparatorFirst = new __ModelProperty(typeof(SeparatedList), "SeparatorFirst", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _Token_IsTrivia = new __ModelProperty(typeof(Token), "IsTrivia", typeof(bool), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _Token_ReturnType = new __ModelProperty(typeof(Token), "ReturnType", typeof(__MetaType), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, "ReturnType");
            _Token_TokenKind = new __ModelProperty(typeof(Token), "TokenKind", typeof(TokenKind), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Single, null);
            _TokenAlts_GreenSyntaxCondition = new __ModelProperty(typeof(TokenAlts), "GreenSyntaxCondition", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _TokenAlts_GreenType = new __ModelProperty(typeof(TokenAlts), "GreenType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _TokenAlts_RedType = new __ModelProperty(typeof(TokenAlts), "RedType", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single | __ModelPropertyFlags.ReadOnly | __ModelPropertyFlags.Derived, null);
            _TokenAlts_Tokens = new __ModelProperty(typeof(TokenAlts), "Tokens", typeof(RuleRef), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ReferenceType | __ModelPropertyFlags.NullableType | __ModelPropertyFlags.ModelObjectType | __ModelPropertyFlags.Containment | __ModelPropertyFlags.Collection, null);
            _TokenKind_Name = new __ModelProperty(typeof(TokenKind), "Name", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _TokenKind_TypeName = new __ModelProperty(typeof(TokenKind), "TypeName", typeof(string), default, __ModelPropertyFlags.None | __ModelPropertyFlags.ValueType | __ModelPropertyFlags.BuiltInType | __ModelPropertyFlags.Single, null);
            _instance = new Compiler();
        }
    
        private readonly __Model _model;
    
        private readonly global::System.Collections.Immutable.ImmutableArray<__MetaType> _enumTypes;
        private readonly global::System.Collections.Immutable.ImmutableArray<__ModelEnumInfo> _enumInfos;
        private readonly global::System.Collections.Immutable.ImmutableDictionary<__MetaType, __ModelEnumInfo> _enumInfosByType;
        private readonly global::System.Collections.Immutable.ImmutableDictionary<string, __ModelEnumInfo> _enumInfosByName;
    
        private readonly global::System.Collections.Immutable.ImmutableArray<__MetaType> _classTypes;
        private readonly global::System.Collections.Immutable.ImmutableArray<__ModelClassInfo> _classInfos;
        private readonly global::System.Collections.Immutable.ImmutableDictionary<__MetaType, __ModelClassInfo> _classInfosByType;
        private readonly global::System.Collections.Immutable.ImmutableDictionary<string, __ModelClassInfo> _classInfosByName;
    
    
        private Compiler()
        {
            _enumTypes = __ImmutableArray.Create<__MetaType>(typeof(Assignment), typeof(Multiplicity));
            _enumInfos = __ImmutableArray.Create<__ModelEnumInfo>(AssignmentInfo, MultiplicityInfo);
            var enumInfosByType = __ImmutableDictionary.CreateBuilder<__MetaType, __ModelEnumInfo>();
            enumInfosByType.Add(typeof(Assignment), AssignmentInfo);
            enumInfosByType.Add(typeof(Multiplicity), MultiplicityInfo);
            _enumInfosByType = enumInfosByType.ToImmutable();
            var enumInfosByName = __ImmutableDictionary.CreateBuilder<string, __ModelEnumInfo>();
            enumInfosByName.Add("Assignment", AssignmentInfo);
            enumInfosByName.Add("Multiplicity", MultiplicityInfo);
            _enumInfosByName = enumInfosByName.ToImmutable();
    
            _classTypes = __ImmutableArray.Create<__MetaType>(typeof(Annotation), typeof(AnnotationArgument), typeof(ArrayExpression), typeof(Binder), typeof(BinderArgument), typeof(CSharpElement), typeof(Declaration), typeof(Alternative), typeof(ElementValue), typeof(Block), typeof(Element), typeof(Eof), typeof(Expression), typeof(Fixed), typeof(GrammarRule), typeof(Language), typeof(LexerRule), typeof(Fragment), typeof(Grammar), typeof(LAlternative), typeof(LElement), typeof(LElementValue), typeof(LBlock), typeof(LFixed), typeof(LRange), typeof(LReference), typeof(LSet), typeof(LSetItem), typeof(LSetChar), typeof(LSetRange), typeof(LWildCard), typeof(Namespace), typeof(Rule), typeof(RuleRef), typeof(SeparatedList), typeof(Token), typeof(TokenAlts), typeof(TokenKind));
            _classInfos = __ImmutableArray.Create<__ModelClassInfo>(AnnotationInfo, AnnotationArgumentInfo, ArrayExpressionInfo, BinderInfo, BinderArgumentInfo, CSharpElementInfo, DeclarationInfo, AlternativeInfo, ElementValueInfo, BlockInfo, ElementInfo, EofInfo, ExpressionInfo, FixedInfo, GrammarRuleInfo, LanguageInfo, LexerRuleInfo, FragmentInfo, GrammarInfo, LAlternativeInfo, LElementInfo, LElementValueInfo, LBlockInfo, LFixedInfo, LRangeInfo, LReferenceInfo, LSetInfo, LSetItemInfo, LSetCharInfo, LSetRangeInfo, LWildCardInfo, NamespaceInfo, RuleInfo, RuleRefInfo, SeparatedListInfo, TokenInfo, TokenAltsInfo, TokenKindInfo);
            var classInfosByType = __ImmutableDictionary.CreateBuilder<__MetaType, __ModelClassInfo>();
            classInfosByType.Add(typeof(Annotation), AnnotationInfo);
            classInfosByType.Add(typeof(AnnotationArgument), AnnotationArgumentInfo);
            classInfosByType.Add(typeof(ArrayExpression), ArrayExpressionInfo);
            classInfosByType.Add(typeof(Binder), BinderInfo);
            classInfosByType.Add(typeof(BinderArgument), BinderArgumentInfo);
            classInfosByType.Add(typeof(CSharpElement), CSharpElementInfo);
            classInfosByType.Add(typeof(Declaration), DeclarationInfo);
            classInfosByType.Add(typeof(Alternative), AlternativeInfo);
            classInfosByType.Add(typeof(ElementValue), ElementValueInfo);
            classInfosByType.Add(typeof(Block), BlockInfo);
            classInfosByType.Add(typeof(Element), ElementInfo);
            classInfosByType.Add(typeof(Eof), EofInfo);
            classInfosByType.Add(typeof(Expression), ExpressionInfo);
            classInfosByType.Add(typeof(Fixed), FixedInfo);
            classInfosByType.Add(typeof(GrammarRule), GrammarRuleInfo);
            classInfosByType.Add(typeof(Language), LanguageInfo);
            classInfosByType.Add(typeof(LexerRule), LexerRuleInfo);
            classInfosByType.Add(typeof(Fragment), FragmentInfo);
            classInfosByType.Add(typeof(Grammar), GrammarInfo);
            classInfosByType.Add(typeof(LAlternative), LAlternativeInfo);
            classInfosByType.Add(typeof(LElement), LElementInfo);
            classInfosByType.Add(typeof(LElementValue), LElementValueInfo);
            classInfosByType.Add(typeof(LBlock), LBlockInfo);
            classInfosByType.Add(typeof(LFixed), LFixedInfo);
            classInfosByType.Add(typeof(LRange), LRangeInfo);
            classInfosByType.Add(typeof(LReference), LReferenceInfo);
            classInfosByType.Add(typeof(LSet), LSetInfo);
            classInfosByType.Add(typeof(LSetItem), LSetItemInfo);
            classInfosByType.Add(typeof(LSetChar), LSetCharInfo);
            classInfosByType.Add(typeof(LSetRange), LSetRangeInfo);
            classInfosByType.Add(typeof(LWildCard), LWildCardInfo);
            classInfosByType.Add(typeof(Namespace), NamespaceInfo);
            classInfosByType.Add(typeof(Rule), RuleInfo);
            classInfosByType.Add(typeof(RuleRef), RuleRefInfo);
            classInfosByType.Add(typeof(SeparatedList), SeparatedListInfo);
            classInfosByType.Add(typeof(Token), TokenInfo);
            classInfosByType.Add(typeof(TokenAlts), TokenAltsInfo);
            classInfosByType.Add(typeof(TokenKind), TokenKindInfo);
            _classInfosByType = classInfosByType.ToImmutable();
            var classInfosByName = __ImmutableDictionary.CreateBuilder<string, __ModelClassInfo>();
            classInfosByName.Add("Annotation", AnnotationInfo);
            classInfosByName.Add("AnnotationArgument", AnnotationArgumentInfo);
            classInfosByName.Add("ArrayExpression", ArrayExpressionInfo);
            classInfosByName.Add("Binder", BinderInfo);
            classInfosByName.Add("BinderArgument", BinderArgumentInfo);
            classInfosByName.Add("CSharpElement", CSharpElementInfo);
            classInfosByName.Add("Declaration", DeclarationInfo);
            classInfosByName.Add("Alternative", AlternativeInfo);
            classInfosByName.Add("ElementValue", ElementValueInfo);
            classInfosByName.Add("Block", BlockInfo);
            classInfosByName.Add("Element", ElementInfo);
            classInfosByName.Add("Eof", EofInfo);
            classInfosByName.Add("Expression", ExpressionInfo);
            classInfosByName.Add("Fixed", FixedInfo);
            classInfosByName.Add("GrammarRule", GrammarRuleInfo);
            classInfosByName.Add("Language", LanguageInfo);
            classInfosByName.Add("LexerRule", LexerRuleInfo);
            classInfosByName.Add("Fragment", FragmentInfo);
            classInfosByName.Add("Grammar", GrammarInfo);
            classInfosByName.Add("LAlternative", LAlternativeInfo);
            classInfosByName.Add("LElement", LElementInfo);
            classInfosByName.Add("LElementValue", LElementValueInfo);
            classInfosByName.Add("LBlock", LBlockInfo);
            classInfosByName.Add("LFixed", LFixedInfo);
            classInfosByName.Add("LRange", LRangeInfo);
            classInfosByName.Add("LReference", LReferenceInfo);
            classInfosByName.Add("LSet", LSetInfo);
            classInfosByName.Add("LSetItem", LSetItemInfo);
            classInfosByName.Add("LSetChar", LSetCharInfo);
            classInfosByName.Add("LSetRange", LSetRangeInfo);
            classInfosByName.Add("LWildCard", LWildCardInfo);
            classInfosByName.Add("Namespace", NamespaceInfo);
            classInfosByName.Add("Rule", RuleInfo);
            classInfosByName.Add("RuleRef", RuleRefInfo);
            classInfosByName.Add("SeparatedList", SeparatedListInfo);
            classInfosByName.Add("Token", TokenInfo);
            classInfosByName.Add("TokenAlts", TokenAltsInfo);
            classInfosByName.Add("TokenKind", TokenKindInfo);
            _classInfosByName = classInfosByName.ToImmutable();
            _model = new __Model();
            var cf = new CompilerModelFactory(_model, this);
            var f = new __MetaModelFactory(_model);
            var obj1 = f.MetaNamespace();
            var obj2 = f.Namespace();
            var obj3 = f.Namespace();
            var obj4 = f.MetaNamespace();
            var obj5 = f.MetaNamespace();
            var obj6 = f.MetaNamespace();
            var obj7 = f.MetaModel();
            var obj8 = f.MetaClass();
            var obj9 = f.MetaClass();
            var obj10 = f.MetaClass();
            var obj11 = f.MetaClass();
            var obj12 = f.MetaClass();
            var obj13 = f.MetaClass();
            var obj14 = f.MetaClass();
            var obj15 = f.MetaClass();
            var obj16 = f.MetaClass();
            var obj17 = f.MetaClass();
            var obj18 = f.MetaEnum();
            var obj19 = f.MetaClass();
            var obj20 = f.MetaClass();
            var obj21 = f.MetaClass();
            var obj22 = f.MetaClass();
            var obj23 = f.MetaClass();
            var obj24 = f.MetaClass();
            var obj25 = f.MetaClass();
            var obj26 = f.MetaClass();
            var obj27 = f.MetaClass();
            var obj28 = f.MetaClass();
            var obj29 = f.MetaClass();
            var obj30 = f.MetaClass();
            var obj31 = f.MetaClass();
            var obj32 = f.MetaClass();
            var obj33 = f.MetaClass();
            var obj34 = f.MetaClass();
            var obj35 = f.MetaClass();
            var obj36 = f.MetaClass();
            var obj37 = f.MetaEnum();
            var obj38 = f.MetaClass();
            var obj39 = f.MetaClass();
            var obj40 = f.MetaClass();
            var obj41 = f.MetaClass();
            var obj42 = f.MetaClass();
            var obj43 = f.MetaClass();
            var obj44 = f.MetaClass();
            var obj45 = f.MetaClass();
            var obj46 = f.MetaClass();
            var obj47 = f.MetaClass();
            var obj48 = f.Namespace();
            var obj49 = f.Namespace();
            var obj50 = f.Namespace();
            var obj51 = f.Namespace();
            var obj52 = f.Namespace();
            var obj53 = f.Namespace();
            var obj54 = f.Language();
            var obj55 = f.Symbol();
            var obj56 = f.Symbol();
            var obj57 = f.Symbol();
            var obj58 = f.Symbol();
            var obj59 = f.Symbol();
            var obj60 = f.Symbol();
            var obj61 = f.Symbol();
            var obj62 = f.Symbol();
            var obj63 = f.Symbol();
            var obj64 = f.MetaProperty();
            var obj65 = f.MetaProperty();
            var obj66 = f.MetaProperty();
            var obj67 = f.MetaProperty();
            var obj68 = f.MetaNullableType();
            var obj69 = f.MetaNullableType();
            var obj70 = f.MetaArrayType();
            var obj71 = f.MetaNullableType();
            var obj72 = f.MetaProperty();
            var obj73 = f.MetaProperty();
            var obj74 = f.MetaProperty();
            var obj75 = f.MetaArrayType();
            var obj76 = f.MetaProperty();
            var obj77 = f.MetaProperty();
            var obj78 = f.MetaProperty();
            var obj79 = f.MetaProperty();
            var obj80 = f.MetaProperty();
            var obj81 = f.MetaProperty();
            var obj82 = f.MetaProperty();
            var obj83 = f.MetaProperty();
            var obj84 = f.MetaProperty();
            var obj85 = f.MetaProperty();
            var obj86 = f.MetaProperty();
            var obj87 = f.MetaArrayType();
            var obj88 = f.MetaArrayType();
            var obj89 = f.MetaArrayType();
            var obj90 = f.MetaArrayType();
            var obj91 = f.MetaArrayType();
            var obj92 = f.MetaNullableType();
            var obj93 = f.MetaNullableType();
            var obj94 = f.MetaNullableType();
            var obj95 = f.MetaNullableType();
            var obj96 = f.MetaNullableType();
            var obj97 = f.MetaProperty();
            var obj98 = f.MetaProperty();
            var obj99 = f.MetaArrayType();
            var obj100 = f.MetaProperty();
            var obj101 = f.MetaProperty();
            var obj102 = f.MetaProperty();
            var obj103 = f.MetaProperty();
            var obj104 = f.MetaArrayType();
            var obj105 = f.MetaProperty();
            var obj106 = f.MetaProperty();
            var obj107 = f.MetaProperty();
            var obj108 = f.MetaProperty();
            var obj109 = f.MetaArrayType();
            var obj110 = f.MetaProperty();
            var obj111 = f.MetaProperty();
            var obj112 = f.MetaProperty();
            var obj113 = f.MetaProperty();
            var obj114 = f.MetaArrayType();
            var obj115 = f.MetaNullableType();
            var obj116 = f.MetaProperty();
            var obj117 = f.MetaProperty();
            var obj118 = f.MetaProperty();
            var obj119 = f.MetaProperty();
            var obj120 = f.MetaProperty();
            var obj121 = f.MetaArrayType();
            var obj122 = f.MetaArrayType();
            var obj123 = f.MetaProperty();
            var obj124 = f.MetaProperty();
            var obj125 = f.MetaEnumLiteral();
            var obj126 = f.MetaEnumLiteral();
            var obj127 = f.MetaEnumLiteral();
            var obj128 = f.MetaEnumLiteral();
            var obj129 = f.MetaEnumLiteral();
            var obj130 = f.MetaEnumLiteral();
            var obj131 = f.MetaEnumLiteral();
            var obj132 = f.MetaProperty();
            var obj133 = f.MetaProperty();
            var obj134 = f.MetaProperty();
            var obj135 = f.MetaProperty();
            var obj136 = f.MetaProperty();
            var obj137 = f.MetaArrayType();
            var obj138 = f.MetaNullableType();
            var obj139 = f.MetaProperty();
            var obj140 = f.MetaProperty();
            var obj141 = f.MetaProperty();
            var obj142 = f.MetaNullableType();
            var obj143 = f.MetaProperty();
            var obj144 = f.MetaProperty();
            var obj145 = f.MetaProperty();
            var obj146 = f.MetaNullableType();
            var obj147 = f.MetaArrayType();
            var obj148 = f.MetaProperty();
            var obj149 = f.MetaProperty();
            var obj150 = f.MetaProperty();
            var obj151 = f.MetaProperty();
            var obj152 = f.MetaProperty();
            var obj153 = f.MetaNullableType();
            var obj154 = f.MetaProperty();
            var obj155 = f.MetaProperty();
            var obj156 = f.MetaNullableType();
            var obj157 = f.MetaProperty();
            var obj158 = f.MetaProperty();
            var obj159 = f.MetaProperty();
            var obj160 = f.MetaNullableType();
            var obj161 = f.MetaProperty();
            var obj162 = f.MetaProperty();
            var obj163 = f.MetaProperty();
            var obj164 = f.MetaNullableType();
            var obj165 = f.MetaProperty();
            var obj166 = f.MetaProperty();
            var obj167 = f.MetaNullableType();
            var obj168 = f.MetaProperty();
            var obj169 = f.MetaProperty();
            var obj170 = f.MetaProperty();
            var obj171 = f.MetaProperty();
            var obj172 = f.MetaNullableType();
            var obj173 = f.MetaProperty();
            var obj174 = f.MetaProperty();
            var obj175 = f.MetaProperty();
            var obj176 = f.MetaNullableType();
            var obj177 = f.MetaArrayType();
            var obj178 = f.MetaProperty();
            var obj179 = f.MetaProperty();
            var obj180 = f.MetaNullableType();
            var obj181 = f.MetaProperty();
            var obj182 = f.MetaProperty();
            var obj183 = f.MetaProperty();
            var obj184 = f.MetaNullableType();
            var obj185 = f.MetaProperty();
            var obj186 = f.MetaProperty();
            var obj187 = f.MetaProperty();
            var obj188 = f.MetaProperty();
            var obj189 = f.MetaNullableType();
            var obj190 = f.MetaProperty();
            var obj191 = f.MetaProperty();
            var obj192 = f.MetaProperty();
            var obj193 = f.MetaNullableType();
            var obj194 = f.MetaArrayType();
            var obj195 = f.MetaProperty();
            var obj196 = f.MetaProperty();
            var obj197 = f.MetaProperty();
            var obj198 = f.MetaProperty();
            var obj199 = f.MetaProperty();
            var obj200 = f.MetaArrayType();
            var obj201 = f.MetaNullableType();
            var obj202 = f.MetaProperty();
            var obj203 = f.MetaProperty();
            var obj204 = f.MetaProperty();
            var obj205 = f.MetaProperty();
            var obj206 = f.MetaProperty();
            var obj207 = f.MetaProperty();
            var obj208 = f.MetaProperty();
            var obj209 = f.MetaProperty();
            var obj210 = f.MetaProperty();
            var obj211 = f.MetaProperty();
            var obj212 = f.MetaProperty();
            var obj213 = f.MetaProperty();
            var obj214 = f.MetaProperty();
            var obj215 = f.MetaProperty();
            var obj216 = f.MetaProperty();
            var obj217 = f.MetaArrayType();
            var obj218 = f.MetaEnumLiteral();
            var obj219 = f.MetaEnumLiteral();
            var obj220 = f.MetaEnumLiteral();
            var obj221 = f.MetaEnumLiteral();
            var obj222 = f.MetaProperty();
            var obj223 = f.MetaProperty();
            var obj224 = f.MetaProperty();
            var obj225 = f.MetaProperty();
            var obj226 = f.MetaProperty();
            var obj227 = f.MetaProperty();
            var obj228 = f.MetaProperty();
            var obj229 = f.MetaProperty();
            var obj230 = f.MetaProperty();
            var obj231 = f.MetaProperty();
            var obj232 = f.MetaProperty();
            var obj233 = f.MetaProperty();
            var obj234 = f.MetaProperty();
            var obj235 = f.MetaProperty();
            var obj236 = f.MetaProperty();
            var obj237 = f.MetaProperty();
            var obj238 = f.MetaProperty();
            var obj239 = f.MetaProperty();
            var obj240 = f.MetaProperty();
            var obj241 = f.MetaProperty();
            var obj242 = f.MetaProperty();
            var obj243 = f.MetaProperty();
            var obj244 = f.MetaProperty();
            var obj245 = f.MetaProperty();
            var obj246 = f.MetaNullableType();
            var obj247 = f.MetaNullableType();
            var obj248 = f.MetaNullableType();
            var obj249 = f.MetaNullableType();
            var obj250 = f.MetaNullableType();
            var obj251 = f.MetaNullableType();
            var obj252 = f.MetaProperty();
            var obj253 = f.MetaProperty();
            var obj254 = f.MetaProperty();
            var obj255 = f.MetaProperty();
            var obj256 = f.MetaNullableType();
            var obj257 = f.MetaProperty();
            var obj258 = f.MetaProperty();
            var obj259 = f.MetaProperty();
            var obj260 = f.MetaProperty();
            var obj261 = f.MetaProperty();
            var obj262 = f.MetaProperty();
            var obj263 = f.MetaProperty();
            var obj264 = f.MetaArrayType();
            var obj265 = f.MetaNullableType();
            var obj266 = f.MetaNullableType();
            var obj267 = f.MetaNullableType();
            var obj268 = f.MetaProperty();
            var obj269 = f.MetaProperty();
            var obj270 = f.MetaProperty();
            var obj271 = f.MetaNullableType();
            var obj272 = f.MetaProperty();
            var obj273 = f.MetaProperty();
            var obj274 = f.MetaProperty();
            var obj275 = f.MetaProperty();
            var obj276 = f.MetaProperty();
            var obj277 = f.MetaArrayType();
            var obj278 = f.MetaNullableType();
            var obj279 = f.MetaProperty();
            var obj280 = f.MetaProperty();
            var obj281 = f.MetaProperty();
            var obj282 = f.MetaNullableType();
            var obj283 = f.MetaProperty();
            var obj284 = f.MetaProperty();
            var obj285 = f.MetaProperty();
            var obj286 = f.MetaProperty();
            var obj287 = f.MetaProperty();
            var obj288 = f.MetaProperty();
            var obj289 = f.MetaProperty();
            var obj290 = f.MetaProperty();
            var obj291 = f.MetaProperty();
            var obj292 = f.MetaProperty();
            var obj293 = f.MetaProperty();
            var obj294 = f.MetaProperty();
            var obj295 = f.MetaArrayType();
            var obj296 = f.MetaArrayType();
            var obj297 = f.MetaArrayType();
            var obj298 = f.MetaArrayType();
            var obj299 = f.MetaNullableType();
            var obj300 = f.MetaProperty();
            var obj301 = f.MetaProperty();
            var obj302 = f.MetaArrayType();
            var obj303 = f.Grammar();
            var obj304 = f.Rule();
            var obj305 = f.Rule();
            var obj306 = f.Rule();
            var obj307 = f.Rule();
            var obj308 = f.Rule();
            var obj309 = f.Rule();
            var obj310 = f.Rule();
            var obj311 = f.Rule();
            var obj312 = f.Rule();
            var obj313 = f.Rule();
            var obj314 = f.Rule();
            var obj315 = f.Rule();
            var obj316 = f.Rule();
            var obj317 = f.Rule();
            var obj318 = f.Rule();
            var obj319 = f.Rule();
            var obj320 = f.Rule();
            var obj321 = f.Rule();
            var obj322 = f.Rule();
            var obj323 = f.Rule();
            var obj324 = f.Rule();
            var obj325 = f.Rule();
            var obj326 = f.Rule();
            var obj327 = f.Rule();
            var obj328 = f.Rule();
            var obj329 = f.Rule();
            var obj330 = f.Rule();
            var obj331 = f.Rule();
            var obj332 = f.Rule();
            var obj333 = f.Rule();
            var obj334 = f.Rule();
            var obj335 = f.Rule();
            var obj336 = f.Rule();
            var obj337 = f.Rule();
            var obj338 = f.Rule();
            var obj339 = f.Rule();
            var obj340 = f.Rule();
            var obj341 = f.Rule();
            var obj342 = f.Rule();
            var obj343 = f.Token();
            var obj344 = f.Token();
            var obj345 = f.Token();
            var obj346 = f.Token();
            var obj347 = f.Token();
            var obj348 = f.Token();
            var obj349 = f.Fragment();
            var obj350 = f.Fragment();
            var obj351 = f.Fragment();
            var obj352 = f.Fragment();
            var obj353 = f.Fragment();
            var obj354 = f.Fragment();
            var obj355 = f.Fragment();
            var obj356 = f.Fragment();
            var obj357 = f.Token();
            var obj358 = f.Token();
            var obj359 = f.Token();
            var obj360 = f.Token();
            var obj361 = f.Token();
            var obj362 = f.Token();
            var obj363 = f.Alternative();
            var obj364 = f.Element();
            var obj365 = f.Element();
            var obj366 = f.Element();
            var obj367 = f.Element();
            var obj368 = f.Element();
            var obj369 = f.Element();
            var obj370 = f.Fixed();
            var obj371 = f.RuleRef();
            var obj372 = f.Annotation();
            var obj373 = f.AnnotationArgument();
            var obj374 = f.Expression();
            var obj375 = f.Fixed();
            var obj376 = f.Block();
            var obj377 = f.Alternative();
            var obj378 = f.Element();
            var obj379 = f.Element();
            var obj380 = f.Element();
            var obj381 = f.Fixed();
            var obj382 = f.RuleRef();
            var obj383 = f.Fixed();
            var obj384 = f.Block();
            var obj385 = f.Annotation();
            var obj386 = f.Alternative();
            var obj387 = f.Element();
            var obj388 = f.RuleRef();
            var obj389 = f.Eof();
            var obj390 = f.Alternative();
            var obj391 = f.Alternative();
            var obj392 = f.Element();
            var obj393 = f.Element();
            var obj394 = f.Fixed();
            var obj395 = f.RuleRef();
            var obj396 = f.Element();
            var obj397 = f.RuleRef();
            var obj398 = f.Alternative();
            var obj399 = f.Element();
            var obj400 = f.Element();
            var obj401 = f.Element();
            var obj402 = f.Element();
            var obj403 = f.Element();
            var obj404 = f.Fixed();
            var obj405 = f.RuleRef();
            var obj406 = f.Block();
            var obj407 = f.Alternative();
            var obj408 = f.Element();
            var obj409 = f.Element();
            var obj410 = f.Element();
            var obj411 = f.Fixed();
            var obj412 = f.RuleRef();
            var obj413 = f.Annotation();
            var obj414 = f.AnnotationArgument();
            var obj415 = f.AnnotationArgument();
            var obj416 = f.Expression();
            var obj417 = f.Expression();
            var obj418 = f.Block();
            var obj419 = f.Alternative();
            var obj420 = f.Element();
            var obj421 = f.Element();
            var obj422 = f.Fixed();
            var obj423 = f.RuleRef();
            var obj424 = f.Annotation();
            var obj425 = f.AnnotationArgument();
            var obj426 = f.AnnotationArgument();
            var obj427 = f.Expression();
            var obj428 = f.Expression();
            var obj429 = f.Fixed();
            var obj430 = f.RuleRef();
            var obj431 = f.Alternative();
            var obj432 = f.Element();
            var obj433 = f.Block();
            var obj434 = f.Annotation();
            var obj435 = f.Alternative();
            var obj436 = f.Element();
            var obj437 = f.RuleRef();
            var obj438 = f.Alternative();
            var obj439 = f.Alternative();
            var obj440 = f.Element();
            var obj441 = f.RuleRef();
            var obj442 = f.Element();
            var obj443 = f.RuleRef();
            var obj444 = f.Alternative();
            var obj445 = f.Element();
            var obj446 = f.Element();
            var obj447 = f.Element();
            var obj448 = f.Element();
            var obj449 = f.Element();
            var obj450 = f.Element();
            var obj451 = f.RuleRef();
            var obj452 = f.Block();
            var obj453 = f.Annotation();
            var obj454 = f.Alternative();
            var obj455 = f.Alternative();
            var obj456 = f.Element();
            var obj457 = f.RuleRef();
            var obj458 = f.Element();
            var obj459 = f.Element();
            var obj460 = f.Element();
            var obj461 = f.RuleRef();
            var obj462 = f.Fixed();
            var obj463 = f.RuleRef();
            var obj464 = f.Fixed();
            var obj465 = f.RuleRef();
            var obj466 = f.Block();
            var obj467 = f.Alternative();
            var obj468 = f.Element();
            var obj469 = f.Element();
            var obj470 = f.Fixed();
            var obj471 = f.RuleRef();
            var obj472 = f.Fixed();
            var obj473 = f.Alternative();
            var obj474 = f.Element();
            var obj475 = f.Element();
            var obj476 = f.Element();
            var obj477 = f.Block();
            var obj478 = f.Alternative();
            var obj479 = f.Element();
            var obj480 = f.Element();
            var obj481 = f.Element();
            var obj482 = f.Element();
            var obj483 = f.RuleRef();
            var obj484 = f.Fixed();
            var obj485 = f.Block();
            var obj486 = f.Annotation();
            var obj487 = f.Alternative();
            var obj488 = f.Alternative();
            var obj489 = f.Element();
            var obj490 = f.RuleRef();
            var obj491 = f.Element();
            var obj492 = f.Element();
            var obj493 = f.Element();
            var obj494 = f.RuleRef();
            var obj495 = f.Fixed();
            var obj496 = f.RuleRef();
            var obj497 = f.Fixed();
            var obj498 = f.RuleRef();
            var obj499 = f.Block();
            var obj500 = f.Alternative();
            var obj501 = f.Element();
            var obj502 = f.Element();
            var obj503 = f.Fixed();
            var obj504 = f.RuleRef();
            var obj505 = f.Alternative();
            var obj506 = f.Element();
            var obj507 = f.Element();
            var obj508 = f.Block();
            var obj509 = f.Alternative();
            var obj510 = f.Element();
            var obj511 = f.Element();
            var obj512 = f.Element();
            var obj513 = f.RuleRef();
            var obj514 = f.RuleRef();
            var obj515 = f.RuleRef();
            var obj516 = f.RuleRef();
            var obj517 = f.Alternative();
            var obj518 = f.Alternative();
            var obj519 = f.Alternative();
            var obj520 = f.Alternative();
            var obj521 = f.Element();
            var obj522 = f.RuleRef();
            var obj523 = f.Element();
            var obj524 = f.RuleRef();
            var obj525 = f.Element();
            var obj526 = f.RuleRef();
            var obj527 = f.Element();
            var obj528 = f.RuleRef();
            var obj529 = f.Alternative();
            var obj530 = f.Element();
            var obj531 = f.Element();
            var obj532 = f.Element();
            var obj533 = f.Element();
            var obj534 = f.Element();
            var obj535 = f.Element();
            var obj536 = f.RuleRef();
            var obj537 = f.Fixed();
            var obj538 = f.RuleRef();
            var obj539 = f.Block();
            var obj540 = f.Alternative();
            var obj541 = f.Element();
            var obj542 = f.Element();
            var obj543 = f.Fixed();
            var obj544 = f.RuleRef();
            var obj545 = f.Fixed();
            var obj546 = f.RuleRef();
            var obj547 = f.Alternative();
            var obj548 = f.Element();
            var obj549 = f.Element();
            var obj550 = f.RuleRef();
            var obj551 = f.Block();
            var obj552 = f.Alternative();
            var obj553 = f.Element();
            var obj554 = f.Element();
            var obj555 = f.Fixed();
            var obj556 = f.RuleRef();
            var obj557 = f.Alternative();
            var obj558 = f.Alternative();
            var obj559 = f.Alternative();
            var obj560 = f.Element();
            var obj561 = f.Element();
            var obj562 = f.Element();
            var obj563 = f.RuleRef();
            var obj564 = f.RuleRef();
            var obj565 = f.RuleRef();
            var obj566 = f.Element();
            var obj567 = f.Element();
            var obj568 = f.Element();
            var obj569 = f.Element();
            var obj570 = f.RuleRef();
            var obj571 = f.Fixed();
            var obj572 = f.RuleRef();
            var obj573 = f.RuleRef();
            var obj574 = f.Element();
            var obj575 = f.Element();
            var obj576 = f.Element();
            var obj577 = f.Element();
            var obj578 = f.Element();
            var obj579 = f.Element();
            var obj580 = f.Element();
            var obj581 = f.RuleRef();
            var obj582 = f.Fixed();
            var obj583 = f.RuleRef();
            var obj584 = f.Block();
            var obj585 = f.Alternative();
            var obj586 = f.Element();
            var obj587 = f.Element();
            var obj588 = f.Fixed();
            var obj589 = f.RuleRef();
            var obj590 = f.Block();
            var obj591 = f.Alternative();
            var obj592 = f.Element();
            var obj593 = f.Element();
            var obj594 = f.Fixed();
            var obj595 = f.RuleRef();
            var obj596 = f.Fixed();
            var obj597 = f.RuleRef();
            var obj598 = f.Alternative();
            var obj599 = f.Element();
            var obj600 = f.Fixed();
            var obj601 = f.Alternative();
            var obj602 = f.Element();
            var obj603 = f.Element();
            var obj604 = f.Element();
            var obj605 = f.RuleRef();
            var obj606 = f.RuleRef();
            var obj607 = f.RuleRef();
            var obj608 = f.Alternative();
            var obj609 = f.Alternative();
            var obj610 = f.Element();
            var obj611 = f.RuleRef();
            var obj612 = f.Element();
            var obj613 = f.RuleRef();
            var obj614 = f.Alternative();
            var obj615 = f.Element();
            var obj616 = f.Element();
            var obj617 = f.Element();
            var obj618 = f.Element();
            var obj619 = f.Element();
            var obj620 = f.Element();
            var obj621 = f.RuleRef();
            var obj622 = f.Block();
            var obj623 = f.Alternative();
            var obj624 = f.Alternative();
            var obj625 = f.Element();
            var obj626 = f.Element();
            var obj627 = f.Element();
            var obj628 = f.Fixed();
            var obj629 = f.RuleRef();
            var obj630 = f.Block();
            var obj631 = f.Alternative();
            var obj632 = f.Element();
            var obj633 = f.Element();
            var obj634 = f.Fixed();
            var obj635 = f.RuleRef();
            var obj636 = f.Element();
            var obj637 = f.Element();
            var obj638 = f.Fixed();
            var obj639 = f.RuleRef();
            var obj640 = f.Fixed();
            var obj641 = f.RuleRef();
            var obj642 = f.Block();
            var obj643 = f.Alternative();
            var obj644 = f.Element();
            var obj645 = f.Element();
            var obj646 = f.Fixed();
            var obj647 = f.RuleRef();
            var obj648 = f.Fixed();
            var obj649 = f.Alternative();
            var obj650 = f.Element();
            var obj651 = f.Element();
            var obj652 = f.Element();
            var obj653 = f.Element();
            var obj654 = f.Element();
            var obj655 = f.Element();
            var obj656 = f.Fixed();
            var obj657 = f.RuleRef();
            var obj658 = f.Fixed();
            var obj659 = f.RuleRef();
            var obj660 = f.Block();
            var obj661 = f.Alternative();
            var obj662 = f.Element();
            var obj663 = f.Element();
            var obj664 = f.Fixed();
            var obj665 = f.RuleRef();
            var obj666 = f.Fixed();
            var obj667 = f.Alternative();
            var obj668 = f.Element();
            var obj669 = f.RuleRef();
            var obj670 = f.Alternative();
            var obj671 = f.Element();
            var obj672 = f.Element();
            var obj673 = f.Element();
            var obj674 = f.Fixed();
            var obj675 = f.RuleRef();
            var obj676 = f.RuleRef();
            var obj677 = f.Alternative();
            var obj678 = f.Alternative();
            var obj679 = f.Alternative();
            var obj680 = f.Alternative();
            var obj681 = f.Alternative();
            var obj682 = f.Element();
            var obj683 = f.RuleRef();
            var obj684 = f.Element();
            var obj685 = f.RuleRef();
            var obj686 = f.Element();
            var obj687 = f.RuleRef();
            var obj688 = f.Element();
            var obj689 = f.RuleRef();
            var obj690 = f.Element();
            var obj691 = f.RuleRef();
            var obj692 = f.Alternative();
            var obj693 = f.Element();
            var obj694 = f.RuleRef();
            var obj695 = f.Alternative();
            var obj696 = f.Element();
            var obj697 = f.RuleRef();
            var obj698 = f.Alternative();
            var obj699 = f.Element();
            var obj700 = f.Fixed();
            var obj701 = f.Alternative();
            var obj702 = f.Element();
            var obj703 = f.Element();
            var obj704 = f.Element();
            var obj705 = f.RuleRef();
            var obj706 = f.Fixed();
            var obj707 = f.RuleRef();
            var obj708 = f.Alternative();
            var obj709 = f.Element();
            var obj710 = f.Element();
            var obj711 = f.Element();
            var obj712 = f.Element();
            var obj713 = f.Fixed();
            var obj714 = f.RuleRef();
            var obj715 = f.Block();
            var obj716 = f.Alternative();
            var obj717 = f.Element();
            var obj718 = f.Element();
            var obj719 = f.Fixed();
            var obj720 = f.RuleRef();
            var obj721 = f.Fixed();
            var obj722 = f.Alternative();
            var obj723 = f.Alternative();
            var obj724 = f.Element();
            var obj725 = f.RuleRef();
            var obj726 = f.Element();
            var obj727 = f.RuleRef();
            var obj728 = f.Alternative();
            var obj729 = f.Alternative();
            var obj730 = f.Element();
            var obj731 = f.Block();
            var obj732 = f.Annotation();
            var obj733 = f.Alternative();
            var obj734 = f.Alternative();
            var obj735 = f.Alternative();
            var obj736 = f.Alternative();
            var obj737 = f.Alternative();
            var obj738 = f.Alternative();
            var obj739 = f.Alternative();
            var obj740 = f.Element();
            var obj741 = f.Fixed();
            var obj742 = f.Element();
            var obj743 = f.Fixed();
            var obj744 = f.Element();
            var obj745 = f.Fixed();
            var obj746 = f.Element();
            var obj747 = f.RuleRef();
            var obj748 = f.Element();
            var obj749 = f.RuleRef();
            var obj750 = f.Element();
            var obj751 = f.RuleRef();
            var obj752 = f.Element();
            var obj753 = f.RuleRef();
            var obj754 = f.Element();
            var obj755 = f.RuleRef();
            var obj756 = f.Annotation();
            var obj757 = f.Alternative();
            var obj758 = f.Element();
            var obj759 = f.Element();
            var obj760 = f.Element();
            var obj761 = f.Fixed();
            var obj762 = f.Block();
            var obj763 = f.Alternative();
            var obj764 = f.Element();
            var obj765 = f.Element();
            var obj766 = f.RuleRef();
            var obj767 = f.Block();
            var obj768 = f.Alternative();
            var obj769 = f.Element();
            var obj770 = f.Element();
            var obj771 = f.Fixed();
            var obj772 = f.RuleRef();
            var obj773 = f.Fixed();
            var obj774 = f.Alternative();
            var obj775 = f.Element();
            var obj776 = f.Element();
            var obj777 = f.Element();
            var obj778 = f.Element();
            var obj779 = f.Fixed();
            var obj780 = f.RuleRef();
            var obj781 = f.Annotation();
            var obj782 = f.AnnotationArgument();
            var obj783 = f.AnnotationArgument();
            var obj784 = f.ArrayExpression();
            var obj785 = f.Expression();
            var obj786 = f.Expression();
            var obj787 = f.ArrayExpression();
            var obj788 = f.Expression();
            var obj789 = f.Expression();
            var obj790 = f.Block();
            var obj791 = f.Alternative();
            var obj792 = f.Element();
            var obj793 = f.Element();
            var obj794 = f.Element();
            var obj795 = f.Element();
            var obj796 = f.Fixed();
            var obj797 = f.RuleRef();
            var obj798 = f.Block();
            var obj799 = f.Alternative();
            var obj800 = f.Element();
            var obj801 = f.Element();
            var obj802 = f.Fixed();
            var obj803 = f.RuleRef();
            var obj804 = f.Fixed();
            var obj805 = f.Fixed();
            var obj806 = f.Alternative();
            var obj807 = f.Element();
            var obj808 = f.Element();
            var obj809 = f.Element();
            var obj810 = f.Element();
            var obj811 = f.Fixed();
            var obj812 = f.RuleRef();
            var obj813 = f.Annotation();
            var obj814 = f.AnnotationArgument();
            var obj815 = f.AnnotationArgument();
            var obj816 = f.ArrayExpression();
            var obj817 = f.Expression();
            var obj818 = f.Expression();
            var obj819 = f.ArrayExpression();
            var obj820 = f.Expression();
            var obj821 = f.Expression();
            var obj822 = f.Block();
            var obj823 = f.Alternative();
            var obj824 = f.Element();
            var obj825 = f.Element();
            var obj826 = f.Element();
            var obj827 = f.Element();
            var obj828 = f.Fixed();
            var obj829 = f.RuleRef();
            var obj830 = f.Block();
            var obj831 = f.Alternative();
            var obj832 = f.Element();
            var obj833 = f.Element();
            var obj834 = f.Fixed();
            var obj835 = f.RuleRef();
            var obj836 = f.Fixed();
            var obj837 = f.Fixed();
            var obj838 = f.Alternative();
            var obj839 = f.Element();
            var obj840 = f.Element();
            var obj841 = f.Block();
            var obj842 = f.Alternative();
            var obj843 = f.Element();
            var obj844 = f.Element();
            var obj845 = f.RuleRef();
            var obj846 = f.Annotation();
            var obj847 = f.Fixed();
            var obj848 = f.RuleRef();
            var obj849 = f.Alternative();
            var obj850 = f.Alternative();
            var obj851 = f.Alternative();
            var obj852 = f.Alternative();
            var obj853 = f.Element();
            var obj854 = f.Expression();
            var obj855 = f.Fixed();
            var obj856 = f.Element();
            var obj857 = f.Expression();
            var obj858 = f.Fixed();
            var obj859 = f.Element();
            var obj860 = f.Expression();
            var obj861 = f.Fixed();
            var obj862 = f.Element();
            var obj863 = f.Expression();
            var obj864 = f.Fixed();
            var obj865 = f.Alternative();
            var obj866 = f.Alternative();
            var obj867 = f.Alternative();
            var obj868 = f.Alternative();
            var obj869 = f.Alternative();
            var obj870 = f.Alternative();
            var obj871 = f.Element();
            var obj872 = f.Expression();
            var obj873 = f.Fixed();
            var obj874 = f.Element();
            var obj875 = f.Expression();
            var obj876 = f.Fixed();
            var obj877 = f.Element();
            var obj878 = f.Expression();
            var obj879 = f.Fixed();
            var obj880 = f.Element();
            var obj881 = f.Expression();
            var obj882 = f.Fixed();
            var obj883 = f.Element();
            var obj884 = f.Expression();
            var obj885 = f.Fixed();
            var obj886 = f.Element();
            var obj887 = f.Expression();
            var obj888 = f.Fixed();
            var obj889 = f.Alternative();
            var obj890 = f.Alternative();
            var obj891 = f.Element();
            var obj892 = f.RuleRef();
            var obj893 = f.Element();
            var obj894 = f.RuleRef();
            var obj895 = f.Alternative();
            var obj896 = f.Alternative();
            var obj897 = f.Element();
            var obj898 = f.RuleRef();
            var obj899 = f.Element();
            var obj900 = f.RuleRef();
            var obj901 = f.Alternative();
            var obj902 = f.Alternative();
            var obj903 = f.Alternative();
            var obj904 = f.Alternative();
            var obj905 = f.Alternative();
            var obj906 = f.Alternative();
            var obj907 = f.Alternative();
            var obj908 = f.Alternative();
            var obj909 = f.Alternative();
            var obj910 = f.Alternative();
            var obj911 = f.Alternative();
            var obj912 = f.Alternative();
            var obj913 = f.Alternative();
            var obj914 = f.Alternative();
            var obj915 = f.Alternative();
            var obj916 = f.Alternative();
            var obj917 = f.Alternative();
            var obj918 = f.Alternative();
            var obj919 = f.Element();
            var obj920 = f.Fixed();
            var obj921 = f.Element();
            var obj922 = f.Fixed();
            var obj923 = f.Element();
            var obj924 = f.Fixed();
            var obj925 = f.Element();
            var obj926 = f.Fixed();
            var obj927 = f.Element();
            var obj928 = f.Fixed();
            var obj929 = f.Element();
            var obj930 = f.Fixed();
            var obj931 = f.Element();
            var obj932 = f.Fixed();
            var obj933 = f.Element();
            var obj934 = f.Fixed();
            var obj935 = f.Element();
            var obj936 = f.Fixed();
            var obj937 = f.Element();
            var obj938 = f.Fixed();
            var obj939 = f.Element();
            var obj940 = f.Fixed();
            var obj941 = f.Element();
            var obj942 = f.Fixed();
            var obj943 = f.Element();
            var obj944 = f.Fixed();
            var obj945 = f.Element();
            var obj946 = f.Fixed();
            var obj947 = f.Element();
            var obj948 = f.Fixed();
            var obj949 = f.Element();
            var obj950 = f.Fixed();
            var obj951 = f.Element();
            var obj952 = f.Fixed();
            var obj953 = f.Element();
            var obj954 = f.Fixed();
            var obj955 = f.Annotation();
            var obj956 = f.Alternative();
            var obj957 = f.Element();
            var obj958 = f.RuleRef();
            var obj959 = f.Annotation();
            var obj960 = f.Alternative();
            var obj961 = f.Element();
            var obj962 = f.Element();
            var obj963 = f.RuleRef();
            var obj964 = f.Block();
            var obj965 = f.Alternative();
            var obj966 = f.Element();
            var obj967 = f.Element();
            var obj968 = f.Fixed();
            var obj969 = f.RuleRef();
            var obj970 = f.Annotation();
            var obj971 = f.Annotation();
            var obj972 = f.Alternative();
            var obj973 = f.Alternative();
            var obj974 = f.Element();
            var obj975 = f.RuleRef();
            var obj976 = f.Element();
            var obj977 = f.RuleRef();
            var obj978 = f.Annotation();
            var obj979 = f.LAlternative();
            var obj980 = f.LAlternative();
            var obj981 = f.LElement();
            var obj982 = f.LFixed();
            var obj983 = f.LElement();
            var obj984 = f.LElement();
            var obj985 = f.LRange();
            var obj986 = f.LBlock();
            var obj987 = f.LAlternative();
            var obj988 = f.LElement();
            var obj989 = f.LRange();
            var obj990 = f.Annotation();
            var obj991 = f.LAlternative();
            var obj992 = f.LElement();
            var obj993 = f.LElement();
            var obj994 = f.LElement();
            var obj995 = f.LBlock();
            var obj996 = f.LAlternative();
            var obj997 = f.LAlternative();
            var obj998 = f.LElement();
            var obj999 = f.LFixed();
            var obj1000 = f.LElement();
            var obj1001 = f.LElement();
            var obj1002 = f.LRange();
            var obj1003 = f.LBlock();
            var obj1004 = f.LAlternative();
            var obj1005 = f.LElement();
            var obj1006 = f.LRange();
            var obj1007 = f.LFixed();
            var obj1008 = f.LBlock();
            var obj1009 = f.LAlternative();
            var obj1010 = f.LElement();
            var obj1011 = f.LRange();
            var obj1012 = f.Annotation();
            var obj1013 = f.LAlternative();
            var obj1014 = f.LElement();
            var obj1015 = f.LElement();
            var obj1016 = f.LBlock();
            var obj1017 = f.LAlternative();
            var obj1018 = f.LAlternative();
            var obj1019 = f.LAlternative();
            var obj1020 = f.LElement();
            var obj1021 = f.LFixed();
            var obj1022 = f.LElement();
            var obj1023 = f.LRange();
            var obj1024 = f.LElement();
            var obj1025 = f.LRange();
            var obj1026 = f.LBlock();
            var obj1027 = f.LAlternative();
            var obj1028 = f.LAlternative();
            var obj1029 = f.LAlternative();
            var obj1030 = f.LAlternative();
            var obj1031 = f.LElement();
            var obj1032 = f.LFixed();
            var obj1033 = f.LElement();
            var obj1034 = f.LRange();
            var obj1035 = f.LElement();
            var obj1036 = f.LRange();
            var obj1037 = f.LElement();
            var obj1038 = f.LRange();
            var obj1039 = f.Annotation();
            var obj1040 = f.LAlternative();
            var obj1041 = f.LElement();
            var obj1042 = f.LElement();
            var obj1043 = f.LElement();
            var obj1044 = f.LFixed();
            var obj1045 = f.LBlock();
            var obj1046 = f.LAlternative();
            var obj1047 = f.LAlternative();
            var obj1048 = f.LAlternative();
            var obj1049 = f.LElement();
            var obj1050 = f.LFixed();
            var obj1051 = f.LElement();
            var obj1052 = f.LRange();
            var obj1053 = f.LElement();
            var obj1054 = f.LRange();
            var obj1055 = f.LBlock();
            var obj1056 = f.LAlternative();
            var obj1057 = f.LAlternative();
            var obj1058 = f.LAlternative();
            var obj1059 = f.LAlternative();
            var obj1060 = f.LElement();
            var obj1061 = f.LFixed();
            var obj1062 = f.LElement();
            var obj1063 = f.LRange();
            var obj1064 = f.LElement();
            var obj1065 = f.LRange();
            var obj1066 = f.LElement();
            var obj1067 = f.LRange();
            var obj1068 = f.Annotation();
            var obj1069 = f.LAlternative();
            var obj1070 = f.LElement();
            var obj1071 = f.LFixed();
            var obj1072 = f.Annotation();
            var obj1073 = f.LAlternative();
            var obj1074 = f.LAlternative();
            var obj1075 = f.LElement();
            var obj1076 = f.LElement();
            var obj1077 = f.LElement();
            var obj1078 = f.LFixed();
            var obj1079 = f.LReference();
            var obj1080 = f.LFixed();
            var obj1081 = f.LElement();
            var obj1082 = f.LElement();
            var obj1083 = f.LElement();
            var obj1084 = f.LFixed();
            var obj1085 = f.LReference();
            var obj1086 = f.LFixed();
            var obj1087 = f.LAlternative();
            var obj1088 = f.LAlternative();
            var obj1089 = f.LAlternative();
            var obj1090 = f.LElement();
            var obj1091 = f.LReference();
            var obj1092 = f.LElement();
            var obj1093 = f.LReference();
            var obj1094 = f.LElement();
            var obj1095 = f.LReference();
            var obj1096 = f.LAlternative();
            var obj1097 = f.LElement();
            var obj1098 = f.LBlock();
            var obj1099 = f.LAlternative();
            var obj1100 = f.LAlternative();
            var obj1101 = f.LAlternative();
            var obj1102 = f.LAlternative();
            var obj1103 = f.LAlternative();
            var obj1104 = f.LAlternative();
            var obj1105 = f.LAlternative();
            var obj1106 = f.LElement();
            var obj1107 = f.LFixed();
            var obj1108 = f.LElement();
            var obj1109 = f.LFixed();
            var obj1110 = f.LElement();
            var obj1111 = f.LFixed();
            var obj1112 = f.LElement();
            var obj1113 = f.LFixed();
            var obj1114 = f.LElement();
            var obj1115 = f.LFixed();
            var obj1116 = f.LElement();
            var obj1117 = f.LFixed();
            var obj1118 = f.LElement();
            var obj1119 = f.LFixed();
            var obj1120 = f.LAlternative();
            var obj1121 = f.LAlternative();
            var obj1122 = f.LAlternative();
            var obj1123 = f.LElement();
            var obj1124 = f.LReference();
            var obj1125 = f.LElement();
            var obj1126 = f.LReference();
            var obj1127 = f.LElement();
            var obj1128 = f.LReference();
            var obj1129 = f.LAlternative();
            var obj1130 = f.LElement();
            var obj1131 = f.LBlock();
            var obj1132 = f.LAlternative();
            var obj1133 = f.LAlternative();
            var obj1134 = f.LAlternative();
            var obj1135 = f.LAlternative();
            var obj1136 = f.LAlternative();
            var obj1137 = f.LAlternative();
            var obj1138 = f.LAlternative();
            var obj1139 = f.LElement();
            var obj1140 = f.LFixed();
            var obj1141 = f.LElement();
            var obj1142 = f.LFixed();
            var obj1143 = f.LElement();
            var obj1144 = f.LFixed();
            var obj1145 = f.LElement();
            var obj1146 = f.LFixed();
            var obj1147 = f.LElement();
            var obj1148 = f.LFixed();
            var obj1149 = f.LElement();
            var obj1150 = f.LFixed();
            var obj1151 = f.LElement();
            var obj1152 = f.LFixed();
            var obj1153 = f.LAlternative();
            var obj1154 = f.LElement();
            var obj1155 = f.LElement();
            var obj1156 = f.LFixed();
            var obj1157 = f.LReference();
            var obj1158 = f.LAlternative();
            var obj1159 = f.LAlternative();
            var obj1160 = f.LAlternative();
            var obj1161 = f.LAlternative();
            var obj1162 = f.LAlternative();
            var obj1163 = f.LAlternative();
            var obj1164 = f.LAlternative();
            var obj1165 = f.LAlternative();
            var obj1166 = f.LAlternative();
            var obj1167 = f.LAlternative();
            var obj1168 = f.LAlternative();
            var obj1169 = f.LElement();
            var obj1170 = f.LFixed();
            var obj1171 = f.LElement();
            var obj1172 = f.LFixed();
            var obj1173 = f.LElement();
            var obj1174 = f.LFixed();
            var obj1175 = f.LElement();
            var obj1176 = f.LFixed();
            var obj1177 = f.LElement();
            var obj1178 = f.LFixed();
            var obj1179 = f.LElement();
            var obj1180 = f.LFixed();
            var obj1181 = f.LElement();
            var obj1182 = f.LFixed();
            var obj1183 = f.LElement();
            var obj1184 = f.LFixed();
            var obj1185 = f.LElement();
            var obj1186 = f.LFixed();
            var obj1187 = f.LElement();
            var obj1188 = f.LFixed();
            var obj1189 = f.LElement();
            var obj1190 = f.LFixed();
            var obj1191 = f.LAlternative();
            var obj1192 = f.LAlternative();
            var obj1193 = f.LElement();
            var obj1194 = f.LElement();
            var obj1195 = f.LElement();
            var obj1196 = f.LElement();
            var obj1197 = f.LElement();
            var obj1198 = f.LFixed();
            var obj1199 = f.LReference();
            var obj1200 = f.LReference();
            var obj1201 = f.LReference();
            var obj1202 = f.LReference();
            var obj1203 = f.LElement();
            var obj1204 = f.LElement();
            var obj1205 = f.LElement();
            var obj1206 = f.LElement();
            var obj1207 = f.LElement();
            var obj1208 = f.LElement();
            var obj1209 = f.LElement();
            var obj1210 = f.LElement();
            var obj1211 = f.LElement();
            var obj1212 = f.LFixed();
            var obj1213 = f.LReference();
            var obj1214 = f.LReference();
            var obj1215 = f.LReference();
            var obj1216 = f.LReference();
            var obj1217 = f.LReference();
            var obj1218 = f.LReference();
            var obj1219 = f.LReference();
            var obj1220 = f.LReference();
            var obj1221 = f.LAlternative();
            var obj1222 = f.LElement();
            var obj1223 = f.LBlock();
            var obj1224 = f.LAlternative();
            var obj1225 = f.LAlternative();
            var obj1226 = f.LAlternative();
            var obj1227 = f.LElement();
            var obj1228 = f.LRange();
            var obj1229 = f.LElement();
            var obj1230 = f.LRange();
            var obj1231 = f.LElement();
            var obj1232 = f.LRange();
            var obj1233 = f.Annotation();
            var obj1234 = f.LAlternative();
            var obj1235 = f.LElement();
            var obj1236 = f.LElement();
            var obj1237 = f.LElement();
            var obj1238 = f.LFixed();
            var obj1239 = f.LFixed();
            var obj1240 = f.LFixed();
            var obj1241 = f.Annotation();
            var obj1242 = f.LAlternative();
            var obj1243 = f.LElement();
            var obj1244 = f.LBlock();
            var obj1245 = f.LAlternative();
            var obj1246 = f.LAlternative();
            var obj1247 = f.LElement();
            var obj1248 = f.LFixed();
            var obj1249 = f.LElement();
            var obj1250 = f.LFixed();
            var obj1251 = f.Annotation();
            var obj1252 = f.LAlternative();
            var obj1253 = f.LElement();
            var obj1254 = f.LBlock();
            var obj1255 = f.LAlternative();
            var obj1256 = f.LAlternative();
            var obj1257 = f.LAlternative();
            var obj1258 = f.LElement();
            var obj1259 = f.LFixed();
            var obj1260 = f.LElement();
            var obj1261 = f.LFixed();
            var obj1262 = f.LElement();
            var obj1263 = f.LFixed();
            var obj1264 = f.Annotation();
            var obj1265 = f.LAlternative();
            var obj1266 = f.LElement();
            var obj1267 = f.LElement();
            var obj1268 = f.LFixed();
            var obj1269 = f.LBlock();
            var obj1270 = f.LAlternative();
            var obj1271 = f.LAlternative();
            var obj1272 = f.LElement();
            var obj1273 = f.LFixed();
            var obj1274 = f.LElement();
            var obj1275 = f.LFixed();
            var obj1276 = f.Annotation();
            var obj1277 = f.LAlternative();
            var obj1278 = f.LElement();
            var obj1279 = f.LElement();
            var obj1280 = f.LElement();
            var obj1281 = f.LFixed();
            var obj1282 = f.LWildCard();
            var obj1283 = f.LFixed();
            var obj1284 = f.LAlternative();
            var obj1285 = f.LElement();
            var obj1286 = f.LWildCard();
            var obj1287 = f.Property();
            var obj1288 = f.Property();
            var obj1289 = f.Property();
            var obj1290 = f.Property();
            var obj1291 = f.Property();
            var obj1292 = f.TypeReference();
            var obj1293 = f.TypeReference();
            var obj1294 = f.TypeReference();
            var obj1295 = f.TypeReference();
            var obj1296 = f.TypeReference();
            var obj1297 = f.Property();
            var obj1298 = f.Property();
            var obj1299 = f.Property();
            var obj1300 = f.Property();
            var obj1301 = f.Property();
            var obj1302 = f.Property();
            var obj1303 = f.TypeReference();
            var obj1304 = f.TypeReference();
            var obj1305 = f.TypeReference();
            var obj1306 = f.TypeReference();
            var obj1307 = f.TypeReference();
            var obj1308 = f.TypeReference();
            var obj1309 = f.Property();
            var obj1310 = f.Property();
            var obj1311 = f.Property();
            var obj1312 = f.Property();
            var obj1313 = f.Property();
            var obj1314 = f.TypeReference();
            var obj1315 = f.TypeReference();
            var obj1316 = f.TypeReference();
            var obj1317 = f.TypeReference();
            var obj1318 = f.TypeReference();
            var obj1319 = f.Property();
            var obj1320 = f.Property();
            var obj1321 = f.Property();
            var obj1322 = f.Property();
            var obj1323 = f.Property();
            var obj1324 = f.Property();
            var obj1325 = f.Property();
            var obj1326 = f.TypeReference();
            var obj1327 = f.TypeReference();
            var obj1328 = f.TypeReference();
            var obj1329 = f.TypeReference();
            var obj1330 = f.TypeReference();
            var obj1331 = f.TypeReference();
            var obj1332 = f.TypeReference();
            var obj1333 = f.Property();
            var obj1334 = f.Property();
            var obj1335 = f.TypeReference();
            var obj1336 = f.TypeReference();
            var obj1337 = f.Property();
            var obj1338 = f.Property();
            var obj1339 = f.TypeReference();
            var obj1340 = f.TypeReference();
            var obj1341 = f.Property();
            var obj1342 = f.Property();
            var obj1343 = f.Property();
            var obj1344 = f.Property();
            var obj1345 = f.Property();
            var obj1346 = f.Property();
            var obj1347 = f.TypeReference();
            var obj1348 = f.TypeReference();
            var obj1349 = f.TypeReference();
            var obj1350 = f.TypeReference();
            var obj1351 = f.TypeReference();
            var obj1352 = f.TypeReference();
            var obj1353 = f.Property();
            var obj1354 = f.Property();
            var obj1355 = f.TypeReference();
            var obj1356 = f.TypeReference();
            var obj1357 = f.Property();
            var obj1358 = f.Property();
            var obj1359 = f.TypeReference();
            var obj1360 = f.TypeReference();
            __CustomImpl.Compiler(this);
            obj1.MChildren.Add(obj4);
            obj1.Declarations.Add(obj4);
            obj1.Name = "MetaDslx";
            obj2.MChildren.Add(obj48);
            obj2.Declarations.Add(obj48);
            obj2.Name = "MetaDslx";
            obj3.MChildren.Add(obj51);
            obj3.Declarations.Add(obj51);
            obj3.Name = "MetaDslx";
            obj4.MChildren.Add(obj5);
            obj4.Declarations.Add(obj5);
            obj4.Name = "Bootstrap";
            obj4.Parent = obj1;
            obj5.MChildren.Add(obj6);
            obj5.Declarations.Add(obj6);
            obj5.Name = "MetaCompiler3";
            obj5.Parent = obj4;
            obj6.MChildren.Add(obj7);
            obj6.MChildren.Add(obj8);
            obj6.MChildren.Add(obj9);
            obj6.MChildren.Add(obj10);
            obj6.MChildren.Add(obj11);
            obj6.MChildren.Add(obj12);
            obj6.MChildren.Add(obj13);
            obj6.MChildren.Add(obj14);
            obj6.MChildren.Add(obj15);
            obj6.MChildren.Add(obj16);
            obj6.MChildren.Add(obj17);
            obj6.MChildren.Add(obj18);
            obj6.MChildren.Add(obj19);
            obj6.MChildren.Add(obj20);
            obj6.MChildren.Add(obj21);
            obj6.MChildren.Add(obj22);
            obj6.MChildren.Add(obj23);
            obj6.MChildren.Add(obj24);
            obj6.MChildren.Add(obj25);
            obj6.MChildren.Add(obj26);
            obj6.MChildren.Add(obj27);
            obj6.MChildren.Add(obj28);
            obj6.MChildren.Add(obj29);
            obj6.MChildren.Add(obj30);
            obj6.MChildren.Add(obj31);
            obj6.MChildren.Add(obj32);
            obj6.MChildren.Add(obj33);
            obj6.MChildren.Add(obj34);
            obj6.MChildren.Add(obj35);
            obj6.MChildren.Add(obj36);
            obj6.MChildren.Add(obj37);
            obj6.MChildren.Add(obj38);
            obj6.MChildren.Add(obj39);
            obj6.MChildren.Add(obj40);
            obj6.MChildren.Add(obj41);
            obj6.MChildren.Add(obj42);
            obj6.MChildren.Add(obj43);
            obj6.MChildren.Add(obj44);
            obj6.MChildren.Add(obj45);
            obj6.MChildren.Add(obj46);
            obj6.MChildren.Add(obj47);
            obj6.Declarations.Add(obj7);
            obj6.Declarations.Add(obj8);
            obj6.Declarations.Add(obj9);
            obj6.Declarations.Add(obj10);
            obj6.Declarations.Add(obj11);
            obj6.Declarations.Add(obj12);
            obj6.Declarations.Add(obj13);
            obj6.Declarations.Add(obj14);
            obj6.Declarations.Add(obj15);
            obj6.Declarations.Add(obj16);
            obj6.Declarations.Add(obj17);
            obj6.Declarations.Add(obj18);
            obj6.Declarations.Add(obj19);
            obj6.Declarations.Add(obj20);
            obj6.Declarations.Add(obj21);
            obj6.Declarations.Add(obj22);
            obj6.Declarations.Add(obj23);
            obj6.Declarations.Add(obj24);
            obj6.Declarations.Add(obj25);
            obj6.Declarations.Add(obj26);
            obj6.Declarations.Add(obj27);
            obj6.Declarations.Add(obj28);
            obj6.Declarations.Add(obj29);
            obj6.Declarations.Add(obj30);
            obj6.Declarations.Add(obj31);
            obj6.Declarations.Add(obj32);
            obj6.Declarations.Add(obj33);
            obj6.Declarations.Add(obj34);
            obj6.Declarations.Add(obj35);
            obj6.Declarations.Add(obj36);
            obj6.Declarations.Add(obj37);
            obj6.Declarations.Add(obj38);
            obj6.Declarations.Add(obj39);
            obj6.Declarations.Add(obj40);
            obj6.Declarations.Add(obj41);
            obj6.Declarations.Add(obj42);
            obj6.Declarations.Add(obj43);
            obj6.Declarations.Add(obj44);
            obj6.Declarations.Add(obj45);
            obj6.Declarations.Add(obj46);
            obj6.Declarations.Add(obj47);
            obj6.Name = "Model";
            obj6.Parent = obj5;
            obj7.Name = "Compiler";
            obj7.Parent = obj6;
            obj8.MChildren.Add(obj64);
            obj8.MChildren.Add(obj65);
            obj8.MChildren.Add(obj66);
            obj8.MChildren.Add(obj67);
            obj8.IsAbstract = true;
            obj8.Properties.Add(obj64);
            obj8.Properties.Add(obj65);
            obj8.Properties.Add(obj66);
            obj8.Properties.Add(obj67);
            obj8.SymbolType = __MetaType.FromModelObject();
            obj8.Declarations.Add(obj64);
            obj8.Declarations.Add(obj65);
            obj8.Declarations.Add(obj66);
            obj8.Declarations.Add(obj67);
            obj8.Name = "Declaration";
            obj8.Parent = obj6;
            obj9.BaseTypes.Add(obj8);
            obj9.SymbolType = __MetaType.FromModelObject();
            obj9.Name = "Namespace";
            obj9.Parent = obj6;
            obj10.MChildren.Add(obj72);
            obj10.MChildren.Add(obj73);
            obj10.MChildren.Add(obj74);
            obj10.BaseTypes.Add(obj8);
            obj10.Properties.Add(obj72);
            obj10.Properties.Add(obj73);
            obj10.Properties.Add(obj74);
            obj10.Declarations.Add(obj72);
            obj10.Declarations.Add(obj73);
            obj10.Declarations.Add(obj74);
            obj10.Name = "Language";
            obj10.Parent = obj6;
            obj11.MChildren.Add(obj76);
            obj11.MChildren.Add(obj77);
            obj11.MChildren.Add(obj78);
            obj11.MChildren.Add(obj79);
            obj11.MChildren.Add(obj80);
            obj11.MChildren.Add(obj81);
            obj11.MChildren.Add(obj82);
            obj11.MChildren.Add(obj83);
            obj11.MChildren.Add(obj84);
            obj11.MChildren.Add(obj85);
            obj11.MChildren.Add(obj86);
            obj11.BaseTypes.Add(obj8);
            obj11.Properties.Add(obj76);
            obj11.Properties.Add(obj77);
            obj11.Properties.Add(obj78);
            obj11.Properties.Add(obj79);
            obj11.Properties.Add(obj80);
            obj11.Properties.Add(obj81);
            obj11.Properties.Add(obj82);
            obj11.Properties.Add(obj83);
            obj11.Properties.Add(obj84);
            obj11.Properties.Add(obj85);
            obj11.Properties.Add(obj86);
            obj11.Declarations.Add(obj76);
            obj11.Declarations.Add(obj77);
            obj11.Declarations.Add(obj78);
            obj11.Declarations.Add(obj79);
            obj11.Declarations.Add(obj80);
            obj11.Declarations.Add(obj81);
            obj11.Declarations.Add(obj82);
            obj11.Declarations.Add(obj83);
            obj11.Declarations.Add(obj84);
            obj11.Declarations.Add(obj85);
            obj11.Declarations.Add(obj86);
            obj11.Name = "Grammar";
            obj11.Parent = obj6;
            obj12.MChildren.Add(obj97);
            obj12.MChildren.Add(obj98);
            obj12.Properties.Add(obj97);
            obj12.Properties.Add(obj98);
            obj12.SymbolType = __MetaType.FromModelObject();
            obj12.Declarations.Add(obj97);
            obj12.Declarations.Add(obj98);
            obj12.Name = "Annotation";
            obj12.Parent = obj6;
            obj13.MChildren.Add(obj100);
            obj13.MChildren.Add(obj101);
            obj13.MChildren.Add(obj102);
            obj13.MChildren.Add(obj103);
            obj13.Properties.Add(obj100);
            obj13.Properties.Add(obj101);
            obj13.Properties.Add(obj102);
            obj13.Properties.Add(obj103);
            obj13.SymbolType = __MetaType.FromModelObject();
            obj13.Declarations.Add(obj100);
            obj13.Declarations.Add(obj101);
            obj13.Declarations.Add(obj102);
            obj13.Declarations.Add(obj103);
            obj13.Name = "AnnotationArgument";
            obj13.Parent = obj6;
            obj14.MChildren.Add(obj105);
            obj14.MChildren.Add(obj106);
            obj14.MChildren.Add(obj107);
            obj14.MChildren.Add(obj108);
            obj14.Properties.Add(obj105);
            obj14.Properties.Add(obj106);
            obj14.Properties.Add(obj107);
            obj14.Properties.Add(obj108);
            obj14.Declarations.Add(obj105);
            obj14.Declarations.Add(obj106);
            obj14.Declarations.Add(obj107);
            obj14.Declarations.Add(obj108);
            obj14.Name = "Binder";
            obj14.Parent = obj6;
            obj15.MChildren.Add(obj110);
            obj15.MChildren.Add(obj111);
            obj15.MChildren.Add(obj112);
            obj15.MChildren.Add(obj113);
            obj15.Properties.Add(obj110);
            obj15.Properties.Add(obj111);
            obj15.Properties.Add(obj112);
            obj15.Properties.Add(obj113);
            obj15.Declarations.Add(obj110);
            obj15.Declarations.Add(obj111);
            obj15.Declarations.Add(obj112);
            obj15.Declarations.Add(obj113);
            obj15.Name = "BinderArgument";
            obj15.Parent = obj6;
            obj16.MChildren.Add(obj116);
            obj16.MChildren.Add(obj117);
            obj16.MChildren.Add(obj118);
            obj16.MChildren.Add(obj119);
            obj16.MChildren.Add(obj120);
            obj16.Properties.Add(obj116);
            obj16.Properties.Add(obj117);
            obj16.Properties.Add(obj118);
            obj16.Properties.Add(obj119);
            obj16.Properties.Add(obj120);
            obj16.Declarations.Add(obj116);
            obj16.Declarations.Add(obj117);
            obj16.Declarations.Add(obj118);
            obj16.Declarations.Add(obj119);
            obj16.Declarations.Add(obj120);
            obj16.Name = "CSharpElement";
            obj16.Parent = obj6;
            obj17.MChildren.Add(obj123);
            obj17.MChildren.Add(obj124);
            obj17.Properties.Add(obj123);
            obj17.Properties.Add(obj124);
            obj17.Declarations.Add(obj123);
            obj17.Declarations.Add(obj124);
            obj17.Name = "TokenKind";
            obj17.Parent = obj6;
            obj18.MChildren.Add(obj125);
            obj18.MChildren.Add(obj126);
            obj18.MChildren.Add(obj127);
            obj18.MChildren.Add(obj128);
            obj18.MChildren.Add(obj129);
            obj18.MChildren.Add(obj130);
            obj18.MChildren.Add(obj131);
            obj18.Literals.Add(obj125);
            obj18.Literals.Add(obj126);
            obj18.Literals.Add(obj127);
            obj18.Literals.Add(obj128);
            obj18.Literals.Add(obj129);
            obj18.Literals.Add(obj130);
            obj18.Literals.Add(obj131);
            obj18.Declarations.Add(obj125);
            obj18.Declarations.Add(obj126);
            obj18.Declarations.Add(obj127);
            obj18.Declarations.Add(obj128);
            obj18.Declarations.Add(obj129);
            obj18.Declarations.Add(obj130);
            obj18.Declarations.Add(obj131);
            obj18.Name = "Multiplicity";
            obj18.Parent = obj6;
            obj19.MChildren.Add(obj132);
            obj19.MChildren.Add(obj133);
            obj19.BaseTypes.Add(obj8);
            obj19.BaseTypes.Add(obj16);
            obj19.IsAbstract = true;
            obj19.Properties.Add(obj132);
            obj19.Properties.Add(obj133);
            obj19.Declarations.Add(obj132);
            obj19.Declarations.Add(obj133);
            obj19.Name = "GrammarRule";
            obj19.Parent = obj6;
            obj20.MChildren.Add(obj134);
            obj20.MChildren.Add(obj135);
            obj20.MChildren.Add(obj136);
            obj20.BaseTypes.Add(obj19);
            obj20.IsAbstract = true;
            obj20.Properties.Add(obj134);
            obj20.Properties.Add(obj135);
            obj20.Properties.Add(obj136);
            obj20.Declarations.Add(obj134);
            obj20.Declarations.Add(obj135);
            obj20.Declarations.Add(obj136);
            obj20.Name = "LexerRule";
            obj20.Parent = obj6;
            obj21.MChildren.Add(obj139);
            obj21.MChildren.Add(obj140);
            obj21.MChildren.Add(obj141);
            obj21.BaseTypes.Add(obj20);
            obj21.Properties.Add(obj139);
            obj21.Properties.Add(obj140);
            obj21.Properties.Add(obj141);
            obj21.SymbolType = __MetaType.FromModelObject();
            obj21.Declarations.Add(obj139);
            obj21.Declarations.Add(obj140);
            obj21.Declarations.Add(obj141);
            obj21.Name = "Token";
            obj21.Parent = obj6;
            obj22.BaseTypes.Add(obj20);
            obj22.Name = "Fragment";
            obj22.Parent = obj6;
            obj23.MChildren.Add(obj143);
            obj23.MChildren.Add(obj144);
            obj23.MChildren.Add(obj145);
            obj23.Properties.Add(obj143);
            obj23.Properties.Add(obj144);
            obj23.Properties.Add(obj145);
            obj23.SymbolType = typeof(global::MetaDslx.CodeAnalysis.Symbols.Symbol);
            obj23.Declarations.Add(obj143);
            obj23.Declarations.Add(obj144);
            obj23.Declarations.Add(obj145);
            obj23.Name = "LAlternative";
            obj23.Parent = obj6;
            obj24.MChildren.Add(obj148);
            obj24.MChildren.Add(obj149);
            obj24.MChildren.Add(obj150);
            obj24.MChildren.Add(obj151);
            obj24.MChildren.Add(obj152);
            obj24.Properties.Add(obj148);
            obj24.Properties.Add(obj149);
            obj24.Properties.Add(obj150);
            obj24.Properties.Add(obj151);
            obj24.Properties.Add(obj152);
            obj24.SymbolType = typeof(global::MetaDslx.CodeAnalysis.Symbols.Symbol);
            obj24.Declarations.Add(obj148);
            obj24.Declarations.Add(obj149);
            obj24.Declarations.Add(obj150);
            obj24.Declarations.Add(obj151);
            obj24.Declarations.Add(obj152);
            obj24.Name = "LElement";
            obj24.Parent = obj6;
            obj25.MChildren.Add(obj154);
            obj25.MChildren.Add(obj155);
            obj25.IsAbstract = true;
            obj25.Properties.Add(obj154);
            obj25.Properties.Add(obj155);
            obj25.SymbolType = typeof(global::MetaDslx.CodeAnalysis.Symbols.Symbol);
            obj25.Declarations.Add(obj154);
            obj25.Declarations.Add(obj155);
            obj25.Name = "LElementValue";
            obj25.Parent = obj6;
            obj26.MChildren.Add(obj157);
            obj26.MChildren.Add(obj158);
            obj26.MChildren.Add(obj159);
            obj26.BaseTypes.Add(obj25);
            obj26.Properties.Add(obj157);
            obj26.Properties.Add(obj158);
            obj26.Properties.Add(obj159);
            obj26.Declarations.Add(obj157);
            obj26.Declarations.Add(obj158);
            obj26.Declarations.Add(obj159);
            obj26.Name = "LReference";
            obj26.Parent = obj6;
            obj27.MChildren.Add(obj161);
            obj27.MChildren.Add(obj162);
            obj27.MChildren.Add(obj163);
            obj27.BaseTypes.Add(obj25);
            obj27.Properties.Add(obj161);
            obj27.Properties.Add(obj162);
            obj27.Properties.Add(obj163);
            obj27.Declarations.Add(obj161);
            obj27.Declarations.Add(obj162);
            obj27.Declarations.Add(obj163);
            obj27.Name = "LFixed";
            obj27.Parent = obj6;
            obj28.MChildren.Add(obj165);
            obj28.MChildren.Add(obj166);
            obj28.BaseTypes.Add(obj25);
            obj28.Properties.Add(obj165);
            obj28.Properties.Add(obj166);
            obj28.Declarations.Add(obj165);
            obj28.Declarations.Add(obj166);
            obj28.Name = "LWildCard";
            obj28.Parent = obj6;
            obj29.MChildren.Add(obj168);
            obj29.MChildren.Add(obj169);
            obj29.MChildren.Add(obj170);
            obj29.MChildren.Add(obj171);
            obj29.BaseTypes.Add(obj25);
            obj29.Properties.Add(obj168);
            obj29.Properties.Add(obj169);
            obj29.Properties.Add(obj170);
            obj29.Properties.Add(obj171);
            obj29.Declarations.Add(obj168);
            obj29.Declarations.Add(obj169);
            obj29.Declarations.Add(obj170);
            obj29.Declarations.Add(obj171);
            obj29.Name = "LRange";
            obj29.Parent = obj6;
            obj30.MChildren.Add(obj173);
            obj30.MChildren.Add(obj174);
            obj30.MChildren.Add(obj175);
            obj30.BaseTypes.Add(obj25);
            obj30.Properties.Add(obj173);
            obj30.Properties.Add(obj174);
            obj30.Properties.Add(obj175);
            obj30.Declarations.Add(obj173);
            obj30.Declarations.Add(obj174);
            obj30.Declarations.Add(obj175);
            obj30.Name = "LSet";
            obj30.Parent = obj6;
            obj31.MChildren.Add(obj178);
            obj31.MChildren.Add(obj179);
            obj31.IsAbstract = true;
            obj31.Properties.Add(obj178);
            obj31.Properties.Add(obj179);
            obj31.Declarations.Add(obj178);
            obj31.Declarations.Add(obj179);
            obj31.Name = "LSetItem";
            obj31.Parent = obj6;
            obj32.MChildren.Add(obj181);
            obj32.MChildren.Add(obj182);
            obj32.MChildren.Add(obj183);
            obj32.BaseTypes.Add(obj31);
            obj32.Properties.Add(obj181);
            obj32.Properties.Add(obj182);
            obj32.Properties.Add(obj183);
            obj32.Declarations.Add(obj181);
            obj32.Declarations.Add(obj182);
            obj32.Declarations.Add(obj183);
            obj32.Name = "LSetChar";
            obj32.Parent = obj6;
            obj33.MChildren.Add(obj185);
            obj33.MChildren.Add(obj186);
            obj33.MChildren.Add(obj187);
            obj33.MChildren.Add(obj188);
            obj33.BaseTypes.Add(obj31);
            obj33.Properties.Add(obj185);
            obj33.Properties.Add(obj186);
            obj33.Properties.Add(obj187);
            obj33.Properties.Add(obj188);
            obj33.Declarations.Add(obj185);
            obj33.Declarations.Add(obj186);
            obj33.Declarations.Add(obj187);
            obj33.Declarations.Add(obj188);
            obj33.Name = "LSetRange";
            obj33.Parent = obj6;
            obj34.MChildren.Add(obj190);
            obj34.MChildren.Add(obj191);
            obj34.MChildren.Add(obj192);
            obj34.BaseTypes.Add(obj25);
            obj34.Properties.Add(obj190);
            obj34.Properties.Add(obj191);
            obj34.Properties.Add(obj192);
            obj34.Declarations.Add(obj190);
            obj34.Declarations.Add(obj191);
            obj34.Declarations.Add(obj192);
            obj34.Name = "LBlock";
            obj34.Parent = obj6;
            obj35.MChildren.Add(obj195);
            obj35.MChildren.Add(obj196);
            obj35.MChildren.Add(obj197);
            obj35.MChildren.Add(obj198);
            obj35.MChildren.Add(obj199);
            obj35.BaseTypes.Add(obj19);
            obj35.Properties.Add(obj195);
            obj35.Properties.Add(obj196);
            obj35.Properties.Add(obj197);
            obj35.Properties.Add(obj198);
            obj35.Properties.Add(obj199);
            obj35.SymbolType = __MetaType.FromModelObject();
            obj35.Declarations.Add(obj195);
            obj35.Declarations.Add(obj196);
            obj35.Declarations.Add(obj197);
            obj35.Declarations.Add(obj198);
            obj35.Declarations.Add(obj199);
            obj35.Name = "Rule";
            obj35.Parent = obj6;
            obj36.MChildren.Add(obj202);
            obj36.MChildren.Add(obj203);
            obj36.MChildren.Add(obj204);
            obj36.MChildren.Add(obj205);
            obj36.MChildren.Add(obj206);
            obj36.MChildren.Add(obj207);
            obj36.MChildren.Add(obj208);
            obj36.MChildren.Add(obj209);
            obj36.MChildren.Add(obj210);
            obj36.MChildren.Add(obj211);
            obj36.MChildren.Add(obj212);
            obj36.MChildren.Add(obj213);
            obj36.MChildren.Add(obj214);
            obj36.MChildren.Add(obj215);
            obj36.MChildren.Add(obj216);
            obj36.BaseTypes.Add(obj8);
            obj36.BaseTypes.Add(obj16);
            obj36.Properties.Add(obj202);
            obj36.Properties.Add(obj203);
            obj36.Properties.Add(obj204);
            obj36.Properties.Add(obj205);
            obj36.Properties.Add(obj206);
            obj36.Properties.Add(obj207);
            obj36.Properties.Add(obj208);
            obj36.Properties.Add(obj209);
            obj36.Properties.Add(obj210);
            obj36.Properties.Add(obj211);
            obj36.Properties.Add(obj212);
            obj36.Properties.Add(obj213);
            obj36.Properties.Add(obj214);
            obj36.Properties.Add(obj215);
            obj36.Properties.Add(obj216);
            obj36.SymbolType = __MetaType.FromModelObject();
            obj36.Declarations.Add(obj202);
            obj36.Declarations.Add(obj203);
            obj36.Declarations.Add(obj204);
            obj36.Declarations.Add(obj205);
            obj36.Declarations.Add(obj206);
            obj36.Declarations.Add(obj207);
            obj36.Declarations.Add(obj208);
            obj36.Declarations.Add(obj209);
            obj36.Declarations.Add(obj210);
            obj36.Declarations.Add(obj211);
            obj36.Declarations.Add(obj212);
            obj36.Declarations.Add(obj213);
            obj36.Declarations.Add(obj214);
            obj36.Declarations.Add(obj215);
            obj36.Declarations.Add(obj216);
            obj36.Name = "Alternative";
            obj36.Parent = obj6;
            obj37.MChildren.Add(obj218);
            obj37.MChildren.Add(obj219);
            obj37.MChildren.Add(obj220);
            obj37.MChildren.Add(obj221);
            obj37.Literals.Add(obj218);
            obj37.Literals.Add(obj219);
            obj37.Literals.Add(obj220);
            obj37.Literals.Add(obj221);
            obj37.Declarations.Add(obj218);
            obj37.Declarations.Add(obj219);
            obj37.Declarations.Add(obj220);
            obj37.Declarations.Add(obj221);
            obj37.Name = "Assignment";
            obj37.Parent = obj6;
            obj38.MChildren.Add(obj222);
            obj38.MChildren.Add(obj223);
            obj38.MChildren.Add(obj224);
            obj38.MChildren.Add(obj225);
            obj38.MChildren.Add(obj226);
            obj38.MChildren.Add(obj227);
            obj38.MChildren.Add(obj228);
            obj38.MChildren.Add(obj229);
            obj38.MChildren.Add(obj230);
            obj38.MChildren.Add(obj231);
            obj38.MChildren.Add(obj232);
            obj38.MChildren.Add(obj233);
            obj38.MChildren.Add(obj234);
            obj38.MChildren.Add(obj235);
            obj38.MChildren.Add(obj236);
            obj38.MChildren.Add(obj237);
            obj38.MChildren.Add(obj238);
            obj38.MChildren.Add(obj239);
            obj38.MChildren.Add(obj240);
            obj38.MChildren.Add(obj241);
            obj38.MChildren.Add(obj242);
            obj38.MChildren.Add(obj243);
            obj38.MChildren.Add(obj244);
            obj38.MChildren.Add(obj245);
            obj38.BaseTypes.Add(obj16);
            obj38.Properties.Add(obj222);
            obj38.Properties.Add(obj223);
            obj38.Properties.Add(obj224);
            obj38.Properties.Add(obj225);
            obj38.Properties.Add(obj226);
            obj38.Properties.Add(obj227);
            obj38.Properties.Add(obj228);
            obj38.Properties.Add(obj229);
            obj38.Properties.Add(obj230);
            obj38.Properties.Add(obj231);
            obj38.Properties.Add(obj232);
            obj38.Properties.Add(obj233);
            obj38.Properties.Add(obj234);
            obj38.Properties.Add(obj235);
            obj38.Properties.Add(obj236);
            obj38.Properties.Add(obj237);
            obj38.Properties.Add(obj238);
            obj38.Properties.Add(obj239);
            obj38.Properties.Add(obj240);
            obj38.Properties.Add(obj241);
            obj38.Properties.Add(obj242);
            obj38.Properties.Add(obj243);
            obj38.Properties.Add(obj244);
            obj38.Properties.Add(obj245);
            obj38.SymbolType = __MetaType.FromModelObject();
            obj38.Declarations.Add(obj222);
            obj38.Declarations.Add(obj223);
            obj38.Declarations.Add(obj224);
            obj38.Declarations.Add(obj225);
            obj38.Declarations.Add(obj226);
            obj38.Declarations.Add(obj227);
            obj38.Declarations.Add(obj228);
            obj38.Declarations.Add(obj229);
            obj38.Declarations.Add(obj230);
            obj38.Declarations.Add(obj231);
            obj38.Declarations.Add(obj232);
            obj38.Declarations.Add(obj233);
            obj38.Declarations.Add(obj234);
            obj38.Declarations.Add(obj235);
            obj38.Declarations.Add(obj236);
            obj38.Declarations.Add(obj237);
            obj38.Declarations.Add(obj238);
            obj38.Declarations.Add(obj239);
            obj38.Declarations.Add(obj240);
            obj38.Declarations.Add(obj241);
            obj38.Declarations.Add(obj242);
            obj38.Declarations.Add(obj243);
            obj38.Declarations.Add(obj244);
            obj38.Declarations.Add(obj245);
            obj38.Name = "Element";
            obj38.Parent = obj6;
            obj39.MChildren.Add(obj252);
            obj39.MChildren.Add(obj253);
            obj39.MChildren.Add(obj254);
            obj39.MChildren.Add(obj255);
            obj39.BaseTypes.Add(obj16);
            obj39.IsAbstract = true;
            obj39.Properties.Add(obj252);
            obj39.Properties.Add(obj253);
            obj39.Properties.Add(obj254);
            obj39.Properties.Add(obj255);
            obj39.SymbolType = typeof(global::MetaDslx.CodeAnalysis.Symbols.Symbol);
            obj39.Declarations.Add(obj252);
            obj39.Declarations.Add(obj253);
            obj39.Declarations.Add(obj254);
            obj39.Declarations.Add(obj255);
            obj39.Name = "ElementValue";
            obj39.Parent = obj6;
            obj40.MChildren.Add(obj257);
            obj40.MChildren.Add(obj258);
            obj40.MChildren.Add(obj259);
            obj40.MChildren.Add(obj260);
            obj40.MChildren.Add(obj261);
            obj40.MChildren.Add(obj262);
            obj40.MChildren.Add(obj263);
            obj40.BaseTypes.Add(obj39);
            obj40.Properties.Add(obj257);
            obj40.Properties.Add(obj258);
            obj40.Properties.Add(obj259);
            obj40.Properties.Add(obj260);
            obj40.Properties.Add(obj261);
            obj40.Properties.Add(obj262);
            obj40.Properties.Add(obj263);
            obj40.SymbolType = __MetaType.FromModelObject();
            obj40.Declarations.Add(obj257);
            obj40.Declarations.Add(obj258);
            obj40.Declarations.Add(obj259);
            obj40.Declarations.Add(obj260);
            obj40.Declarations.Add(obj261);
            obj40.Declarations.Add(obj262);
            obj40.Declarations.Add(obj263);
            obj40.Name = "RuleRef";
            obj40.Parent = obj6;
            obj41.MChildren.Add(obj268);
            obj41.MChildren.Add(obj269);
            obj41.MChildren.Add(obj270);
            obj41.BaseTypes.Add(obj39);
            obj41.Properties.Add(obj268);
            obj41.Properties.Add(obj269);
            obj41.Properties.Add(obj270);
            obj41.Declarations.Add(obj268);
            obj41.Declarations.Add(obj269);
            obj41.Declarations.Add(obj270);
            obj41.Name = "Eof";
            obj41.Parent = obj6;
            obj42.MChildren.Add(obj272);
            obj42.BaseTypes.Add(obj39);
            obj42.Properties.Add(obj272);
            obj42.Declarations.Add(obj272);
            obj42.Name = "Fixed";
            obj42.Parent = obj6;
            obj43.MChildren.Add(obj273);
            obj43.MChildren.Add(obj274);
            obj43.MChildren.Add(obj275);
            obj43.MChildren.Add(obj276);
            obj43.BaseTypes.Add(obj39);
            obj43.Properties.Add(obj273);
            obj43.Properties.Add(obj274);
            obj43.Properties.Add(obj275);
            obj43.Properties.Add(obj276);
            obj43.Declarations.Add(obj273);
            obj43.Declarations.Add(obj274);
            obj43.Declarations.Add(obj275);
            obj43.Declarations.Add(obj276);
            obj43.Name = "TokenAlts";
            obj43.Parent = obj6;
            obj44.MChildren.Add(obj279);
            obj44.MChildren.Add(obj280);
            obj44.MChildren.Add(obj281);
            obj44.BaseTypes.Add(obj39);
            obj44.BaseTypes.Add(obj35);
            obj44.Properties.Add(obj279);
            obj44.Properties.Add(obj280);
            obj44.Properties.Add(obj281);
            obj44.SymbolType = __MetaType.FromModelObject();
            obj44.Declarations.Add(obj279);
            obj44.Declarations.Add(obj280);
            obj44.Declarations.Add(obj281);
            obj44.Name = "Block";
            obj44.Parent = obj6;
            obj45.MChildren.Add(obj283);
            obj45.MChildren.Add(obj284);
            obj45.MChildren.Add(obj285);
            obj45.MChildren.Add(obj286);
            obj45.MChildren.Add(obj287);
            obj45.MChildren.Add(obj288);
            obj45.MChildren.Add(obj289);
            obj45.MChildren.Add(obj290);
            obj45.MChildren.Add(obj291);
            obj45.MChildren.Add(obj292);
            obj45.MChildren.Add(obj293);
            obj45.MChildren.Add(obj294);
            obj45.BaseTypes.Add(obj39);
            obj45.Properties.Add(obj283);
            obj45.Properties.Add(obj284);
            obj45.Properties.Add(obj285);
            obj45.Properties.Add(obj286);
            obj45.Properties.Add(obj287);
            obj45.Properties.Add(obj288);
            obj45.Properties.Add(obj289);
            obj45.Properties.Add(obj290);
            obj45.Properties.Add(obj291);
            obj45.Properties.Add(obj292);
            obj45.Properties.Add(obj293);
            obj45.Properties.Add(obj294);
            obj45.Declarations.Add(obj283);
            obj45.Declarations.Add(obj284);
            obj45.Declarations.Add(obj285);
            obj45.Declarations.Add(obj286);
            obj45.Declarations.Add(obj287);
            obj45.Declarations.Add(obj288);
            obj45.Declarations.Add(obj289);
            obj45.Declarations.Add(obj290);
            obj45.Declarations.Add(obj291);
            obj45.Declarations.Add(obj292);
            obj45.Declarations.Add(obj293);
            obj45.Declarations.Add(obj294);
            obj45.Name = "SeparatedList";
            obj45.Parent = obj6;
            obj46.MChildren.Add(obj300);
            obj46.Properties.Add(obj300);
            obj46.SymbolType = __MetaType.FromModelObject();
            obj46.Declarations.Add(obj300);
            obj46.Name = "Expression";
            obj46.Parent = obj6;
            obj47.MChildren.Add(obj301);
            obj47.BaseTypes.Add(obj46);
            obj47.Properties.Add(obj301);
            obj47.Declarations.Add(obj301);
            obj47.Name = "ArrayExpression";
            obj47.Parent = obj6;
            obj48.MChildren.Add(obj49);
            obj48.Declarations.Add(obj49);
            obj48.Name = "Bootstrap";
            obj48.Parent = obj2;
            obj49.MChildren.Add(obj50);
            obj49.Declarations.Add(obj50);
            obj49.Name = "MetaCompiler3";
            obj49.Parent = obj48;
            obj50.MChildren.Add(obj54);
            obj50.Declarations.Add(obj54);
            obj50.Name = "Compiler";
            obj50.Parent = obj49;
            obj51.MChildren.Add(obj52);
            obj51.Declarations.Add(obj52);
            obj51.Name = "Bootstrap";
            obj51.Parent = obj3;
            obj52.MChildren.Add(obj53);
            obj52.Declarations.Add(obj53);
            obj52.Name = "MetaCompiler3";
            obj52.Parent = obj51;
            obj53.MChildren.Add(obj55);
            obj53.MChildren.Add(obj56);
            obj53.MChildren.Add(obj57);
            obj53.MChildren.Add(obj58);
            obj53.MChildren.Add(obj59);
            obj53.MChildren.Add(obj60);
            obj53.MChildren.Add(obj61);
            obj53.MChildren.Add(obj62);
            obj53.MChildren.Add(obj63);
            obj53.Declarations.Add(obj55);
            obj53.Declarations.Add(obj56);
            obj53.Declarations.Add(obj57);
            obj53.Declarations.Add(obj58);
            obj53.Declarations.Add(obj59);
            obj53.Declarations.Add(obj60);
            obj53.Declarations.Add(obj61);
            obj53.Declarations.Add(obj62);
            obj53.Declarations.Add(obj63);
            obj53.Name = "Symbols";
            obj53.Parent = obj52;
            obj54.MChildren.Add(obj303);
            obj54.Grammar = obj303;
            obj54.Declarations.Add(obj303);
            obj54.Name = "Compiler";
            obj54.Parent = obj50;
            obj55.MChildren.Add(obj1287);
            obj55.MChildren.Add(obj1288);
            obj55.MChildren.Add(obj1289);
            obj55.MChildren.Add(obj1290);
            obj55.MChildren.Add(obj1291);
            obj55.BaseTypes.Add();
            obj55.Properties.Add(obj1287);
            obj55.Properties.Add(obj1288);
            obj55.Properties.Add(obj1289);
            obj55.Properties.Add(obj1290);
            obj55.Properties.Add(obj1291);
            obj55.Declarations.Add(obj1287);
            obj55.Declarations.Add(obj1288);
            obj55.Declarations.Add(obj1289);
            obj55.Declarations.Add(obj1290);
            obj55.Declarations.Add(obj1291);
            obj55.Name = "Annotation";
            obj55.Parent = obj53;
            obj56.MChildren.Add(obj1297);
            obj56.MChildren.Add(obj1298);
            obj56.MChildren.Add(obj1299);
            obj56.MChildren.Add(obj1300);
            obj56.MChildren.Add(obj1301);
            obj56.MChildren.Add(obj1302);
            obj56.Properties.Add(obj1297);
            obj56.Properties.Add(obj1298);
            obj56.Properties.Add(obj1299);
            obj56.Properties.Add(obj1300);
            obj56.Properties.Add(obj1301);
            obj56.Properties.Add(obj1302);
            obj56.Declarations.Add(obj1297);
            obj56.Declarations.Add(obj1298);
            obj56.Declarations.Add(obj1299);
            obj56.Declarations.Add(obj1300);
            obj56.Declarations.Add(obj1301);
            obj56.Declarations.Add(obj1302);
            obj56.Name = "AnnotationArgument";
            obj56.Parent = obj53;
            obj57.MChildren.Add(obj1309);
            obj57.MChildren.Add(obj1310);
            obj57.MChildren.Add(obj1311);
            obj57.MChildren.Add(obj1312);
            obj57.MChildren.Add(obj1313);
            obj57.Properties.Add(obj1309);
            obj57.Properties.Add(obj1310);
            obj57.Properties.Add(obj1311);
            obj57.Properties.Add(obj1312);
            obj57.Properties.Add(obj1313);
            obj57.Declarations.Add(obj1309);
            obj57.Declarations.Add(obj1310);
            obj57.Declarations.Add(obj1311);
            obj57.Declarations.Add(obj1312);
            obj57.Declarations.Add(obj1313);
            obj57.Name = "Expression";
            obj57.Parent = obj53;
            obj58.MChildren.Add(obj1319);
            obj58.MChildren.Add(obj1320);
            obj58.MChildren.Add(obj1321);
            obj58.MChildren.Add(obj1322);
            obj58.MChildren.Add(obj1323);
            obj58.MChildren.Add(obj1324);
            obj58.MChildren.Add(obj1325);
            obj58.BaseTypes.Add();
            obj58.Properties.Add(obj1319);
            obj58.Properties.Add(obj1320);
            obj58.Properties.Add(obj1321);
            obj58.Properties.Add(obj1322);
            obj58.Properties.Add(obj1323);
            obj58.Properties.Add(obj1324);
            obj58.Properties.Add(obj1325);
            obj58.Declarations.Add(obj1319);
            obj58.Declarations.Add(obj1320);
            obj58.Declarations.Add(obj1321);
            obj58.Declarations.Add(obj1322);
            obj58.Declarations.Add(obj1323);
            obj58.Declarations.Add(obj1324);
            obj58.Declarations.Add(obj1325);
            obj58.Name = "PAlternative";
            obj58.Parent = obj53;
            obj59.MChildren.Add(obj1333);
            obj59.MChildren.Add(obj1334);
            obj59.BaseTypes.Add();
            obj59.Properties.Add(obj1333);
            obj59.Properties.Add(obj1334);
            obj59.Declarations.Add(obj1333);
            obj59.Declarations.Add(obj1334);
            obj59.Name = "ParserRule";
            obj59.Parent = obj53;
            obj60.MChildren.Add(obj1337);
            obj60.MChildren.Add(obj1338);
            obj60.BaseTypes.Add();
            obj60.Properties.Add(obj1337);
            obj60.Properties.Add(obj1338);
            obj60.Declarations.Add(obj1337);
            obj60.Declarations.Add(obj1338);
            obj60.Name = "PBlock";
            obj60.Parent = obj53;
            obj61.MChildren.Add(obj1341);
            obj61.MChildren.Add(obj1342);
            obj61.MChildren.Add(obj1343);
            obj61.MChildren.Add(obj1344);
            obj61.MChildren.Add(obj1345);
            obj61.MChildren.Add(obj1346);
            obj61.BaseTypes.Add();
            obj61.Properties.Add(obj1341);
            obj61.Properties.Add(obj1342);
            obj61.Properties.Add(obj1343);
            obj61.Properties.Add(obj1344);
            obj61.Properties.Add(obj1345);
            obj61.Properties.Add(obj1346);
            obj61.Declarations.Add(obj1341);
            obj61.Declarations.Add(obj1342);
            obj61.Declarations.Add(obj1343);
            obj61.Declarations.Add(obj1344);
            obj61.Declarations.Add(obj1345);
            obj61.Declarations.Add(obj1346);
            obj61.Name = "PElement";
            obj61.Parent = obj53;
            obj62.MChildren.Add(obj1353);
            obj62.MChildren.Add(obj1354);
            obj62.BaseTypes.Add();
            obj62.Properties.Add(obj1353);
            obj62.Properties.Add(obj1354);
            obj62.Declarations.Add(obj1353);
            obj62.Declarations.Add(obj1354);
            obj62.Name = "PReference";
            obj62.Parent = obj53;
            obj63.MChildren.Add(obj1357);
            obj63.MChildren.Add(obj1358);
            obj63.BaseTypes.Add();
            obj63.Properties.Add(obj1357);
            obj63.Properties.Add(obj1358);
            obj63.Declarations.Add(obj1357);
            obj63.Declarations.Add(obj1358);
            obj63.Name = "Token";
            obj63.Parent = obj53;
            obj64.MChildren.Add(obj68);
            obj64.SymbolProperty = __MetaSymbol.FromValue("Name");
            obj64.Type = __MetaType.FromModelObject(obj68);
            obj64.Name = "Name";
            obj64.Parent = obj8;
            obj65.MChildren.Add(obj69);
            obj65.OppositeProperties.Add(obj66);
            obj65.Type = __MetaType.FromModelObject(obj69);
            obj65.Name = "Parent";
            obj65.Parent = obj8;
            obj66.MChildren.Add(obj70);
            obj66.IsContainment = true;
            obj66.OppositeProperties.Add(obj65);
            obj66.Type = __MetaType.FromModelObject(obj70);
            obj66.Name = "Declarations";
            obj66.Parent = obj8;
            obj67.MChildren.Add(obj71);
            obj67.IsDerived = true;
            obj67.Type = __MetaType.FromModelObject(obj71);
            obj67.Name = "FullName";
            obj67.Parent = obj8;
            obj68.InnerType = typeof(string);
            obj69.InnerType = __MetaType.FromModelObject(obj8);
            obj70.ItemType = __MetaType.FromModelObject(obj8);
            obj71.InnerType = typeof(string);
            obj72.IsDerived = true;
            obj72.Type = typeof(string);
            obj72.Name = "Namespace";
            obj72.Parent = obj10;
            obj73.MChildren.Add(obj75);
            obj73.Type = __MetaType.FromModelObject(obj75);
            obj73.Name = "BaseLanguages";
            obj73.Parent = obj10;
            obj74.IsContainment = true;
            obj74.SubsettedProperties.Add(obj66);
            obj74.Type = __MetaType.FromModelObject(obj11);
            obj74.Name = "Grammar";
            obj74.Parent = obj10;
            obj75.ItemType = typeof(__MetaType);
            obj76.RedefinedProperties.Add(obj65);
            obj76.Type = __MetaType.FromModelObject(obj10);
            obj76.Name = "Language";
            obj76.Parent = obj11;
            obj77.MChildren.Add(obj87);
            obj77.IsContainment = true;
            obj77.RedefinedProperties.Add(obj66);
            obj77.Type = __MetaType.FromModelObject(obj87);
            obj77.Name = "GrammarRules";
            obj77.Parent = obj11;
            obj78.MChildren.Add(obj88);
            obj78.IsContainment = true;
            obj78.Type = __MetaType.FromModelObject(obj88);
            obj78.Name = "TokenKinds";
            obj78.Parent = obj11;
            obj79.MChildren.Add(obj89);
            obj79.IsContainment = true;
            obj79.SubsettedProperties.Add(obj77);
            obj79.Type = __MetaType.FromModelObject(obj89);
            obj79.Name = "Tokens";
            obj79.Parent = obj11;
            obj80.MChildren.Add(obj90);
            obj80.IsContainment = true;
            obj80.SubsettedProperties.Add(obj77);
            obj80.Type = __MetaType.FromModelObject(obj90);
            obj80.Name = "Rules";
            obj80.Parent = obj11;
            obj81.MChildren.Add(obj91);
            obj81.Type = __MetaType.FromModelObject(obj91);
            obj81.Name = "Blocks";
            obj81.Parent = obj11;
            obj82.MChildren.Add(obj92);
            obj82.Type = __MetaType.FromModelObject(obj92);
            obj82.Name = "DefaultWhitespace";
            obj82.Parent = obj11;
            obj83.MChildren.Add(obj93);
            obj83.Type = __MetaType.FromModelObject(obj93);
            obj83.Name = "DefaultEndOfLine";
            obj83.Parent = obj11;
            obj84.MChildren.Add(obj94);
            obj84.Type = __MetaType.FromModelObject(obj94);
            obj84.Name = "DefaultSeparator";
            obj84.Parent = obj11;
            obj85.MChildren.Add(obj95);
            obj85.Type = __MetaType.FromModelObject(obj95);
            obj85.Name = "DefaultIdentifier";
            obj85.Parent = obj11;
            obj86.MChildren.Add(obj96);
            obj86.Type = __MetaType.FromModelObject(obj96);
            obj86.Name = "MainRule";
            obj86.Parent = obj11;
            obj87.ItemType = __MetaType.FromModelObject(obj19);
            obj88.ItemType = __MetaType.FromModelObject(obj17);
            obj89.ItemType = __MetaType.FromModelObject(obj21);
            obj90.ItemType = __MetaType.FromModelObject(obj35);
            obj91.ItemType = __MetaType.FromModelObject(obj44);
            obj92.InnerType = __MetaType.FromModelObject(obj21);
            obj93.InnerType = __MetaType.FromModelObject(obj21);
            obj94.InnerType = __MetaType.FromModelObject(obj21);
            obj95.InnerType = __MetaType.FromModelObject(obj21);
            obj96.InnerType = __MetaType.FromModelObject(obj35);
            obj97.SymbolProperty = ;
            obj97.Type = typeof(__MetaType);
            obj97.Name = "AttributeClass";
            obj97.Parent = obj12;
            obj98.MChildren.Add(obj99);
            obj98.IsContainment = true;
            obj98.SymbolProperty = ;
            obj98.Type = __MetaType.FromModelObject(obj99);
            obj98.Name = "Arguments";
            obj98.Parent = obj12;
            obj99.ItemType = __MetaType.FromModelObject(obj13);
            obj100.MChildren.Add(obj104);
            obj100.SymbolProperty = ;
            obj100.Type = __MetaType.FromModelObject(obj104);
            obj100.Name = "NamedParameter";
            obj100.Parent = obj13;
            obj101.SymbolProperty = ;
            obj101.Type = __MetaType.FromModelObject();
            obj101.Name = "Parameter";
            obj101.Parent = obj13;
            obj102.Type = typeof(__MetaType);
            obj102.Name = "ParameterType";
            obj102.Parent = obj13;
            obj103.IsContainment = true;
            obj103.SymbolProperty = ;
            obj103.Type = __MetaType.FromModelObject(obj46);
            obj103.Name = "Value";
            obj103.Parent = obj13;
            obj104.ItemType = typeof(__MetaSymbol);
            obj105.Type = typeof(string);
            obj105.Name = "TypeName";
            obj105.Parent = obj14;
            obj106.MChildren.Add(obj109);
            obj106.IsContainment = true;
            obj106.Type = __MetaType.FromModelObject(obj109);
            obj106.Name = "Arguments";
            obj106.Parent = obj14;
            obj107.Type = typeof(bool);
            obj107.Name = "IsNegated";
            obj107.Parent = obj14;
            obj108.IsDerived = true;
            obj108.Type = typeof(string);
            obj108.Name = "ConstructorArguments";
            obj108.Parent = obj14;
            obj109.ItemType = __MetaType.FromModelObject(obj15);
            obj110.Type = typeof(string);
            obj110.Name = "Name";
            obj110.Parent = obj15;
            obj111.Type = typeof(string);
            obj111.Name = "TypeName";
            obj111.Parent = obj15;
            obj112.Type = typeof(bool);
            obj112.Name = "IsArray";
            obj112.Parent = obj15;
            obj113.MChildren.Add(obj114);
            obj113.Type = __MetaType.FromModelObject(obj114);
            obj113.Name = "Values";
            obj113.Parent = obj15;
            obj114.MChildren.Add(obj115);
            obj114.ItemType = __MetaType.FromModelObject(obj115);
            obj115.InnerType = typeof(string);
            obj116.MChildren.Add(obj121);
            obj116.IsContainment = true;
            obj116.Type = __MetaType.FromModelObject(obj121);
            obj116.Name = "Annotations";
            obj116.Parent = obj16;
            obj117.Type = typeof(string);
            obj117.Name = "CSharpName";
            obj117.Parent = obj16;
            obj118.Type = typeof(string);
            obj118.Name = "AntlrName";
            obj118.Parent = obj16;
            obj119.MChildren.Add(obj122);
            obj119.IsContainment = true;
            obj119.Type = __MetaType.FromModelObject(obj122);
            obj119.Name = "Binders";
            obj119.Parent = obj16;
            obj120.Type = typeof(bool);
            obj120.Name = "ContainsBinders";
            obj120.Parent = obj16;
            obj121.ItemType = __MetaType.FromModelObject(obj12);
            obj122.ItemType = __MetaType.FromModelObject(obj14);
            obj123.Type = typeof(string);
            obj123.Name = "Name";
            obj123.Parent = obj17;
            obj124.Type = typeof(string);
            obj124.Name = "TypeName";
            obj124.Parent = obj17;
            obj125.Name = "ExactlyOne";
            obj125.Parent = obj18;
            obj126.Name = "ZeroOrOne";
            obj126.Parent = obj18;
            obj127.Name = "ZeroOrMore";
            obj127.Parent = obj18;
            obj128.Name = "OneOrMore";
            obj128.Parent = obj18;
            obj129.Name = "NonGreedyZeroOrOne";
            obj129.Parent = obj18;
            obj130.Name = "NonGreedyZeroOrMore";
            obj130.Parent = obj18;
            obj131.Name = "NonGreedyOneOrMore";
            obj131.Parent = obj18;
            obj132.IsDerived = true;
            obj132.Type = __MetaType.FromModelObject(obj10);
            obj132.Name = "Language";
            obj132.Parent = obj19;
            obj133.RedefinedProperties.Add(obj65);
            obj133.Type = __MetaType.FromModelObject(obj11);
            obj133.Name = "Grammar";
            obj133.Parent = obj19;
            obj134.MChildren.Add(obj137);
            obj134.IsContainment = true;
            obj134.Type = __MetaType.FromModelObject(obj137);
            obj134.Name = "Alternatives";
            obj134.Parent = obj20;
            obj135.IsDerived = true;
            obj135.Type = typeof(bool);
            obj135.Name = "IsFixed";
            obj135.Parent = obj20;
            obj136.MChildren.Add(obj138);
            obj136.IsDerived = true;
            obj136.Type = __MetaType.FromModelObject(obj138);
            obj136.Name = "FixedText";
            obj136.Parent = obj20;
            obj137.ItemType = __MetaType.FromModelObject(obj23);
            obj138.InnerType = typeof(string);
            obj139.SymbolProperty = ;
            obj139.Type = typeof(__MetaType);
            obj139.Name = "ReturnType";
            obj139.Parent = obj21;
            obj140.Type = typeof(bool);
            obj140.Name = "IsTrivia";
            obj140.Parent = obj21;
            obj141.MChildren.Add(obj142);
            obj141.Type = __MetaType.FromModelObject(obj142);
            obj141.Name = "TokenKind";
            obj141.Parent = obj21;
            obj142.InnerType = __MetaType.FromModelObject(obj17);
            obj143.IsDerived = true;
            obj143.Type = typeof(bool);
            obj143.Name = "IsFixed";
            obj143.Parent = obj23;
            obj144.MChildren.Add(obj146);
            obj144.IsDerived = true;
            obj144.Type = __MetaType.FromModelObject(obj146);
            obj144.Name = "FixedText";
            obj144.Parent = obj23;
            obj145.MChildren.Add(obj147);
            obj145.IsContainment = true;
            obj145.Type = __MetaType.FromModelObject(obj147);
            obj145.Name = "Elements";
            obj145.Parent = obj23;
            obj146.InnerType = typeof(string);
            obj147.ItemType = __MetaType.FromModelObject(obj24);
            obj148.IsDerived = true;
            obj148.Type = typeof(bool);
            obj148.Name = "IsFixed";
            obj148.Parent = obj24;
            obj149.MChildren.Add(obj153);
            obj149.IsDerived = true;
            obj149.Type = __MetaType.FromModelObject(obj153);
            obj149.Name = "FixedText";
            obj149.Parent = obj24;
            obj150.Type = typeof(bool);
            obj150.Name = "IsNegated";
            obj150.Parent = obj24;
            obj151.IsContainment = true;
            obj151.Type = __MetaType.FromModelObject(obj25);
            obj151.Name = "Value";
            obj151.Parent = obj24;
            obj152.Type = __MetaType.FromModelObject(obj18);
            obj152.Name = "Multiplicity";
            obj152.Parent = obj24;
            obj153.InnerType = typeof(string);
            obj154.IsDerived = true;
            obj154.Type = typeof(bool);
            obj154.Name = "IsFixed";
            obj154.Parent = obj25;
            obj155.MChildren.Add(obj156);
            obj155.IsDerived = true;
            obj155.Type = __MetaType.FromModelObject(obj156);
            obj155.Name = "FixedText";
            obj155.Parent = obj25;
            obj156.InnerType = typeof(string);
            obj157.IsDerived = true;
            obj157.Type = typeof(bool);
            obj157.Name = "IsFixed";
            obj157.Parent = obj26;
            obj158.MChildren.Add(obj160);
            obj158.IsDerived = true;
            obj158.Type = __MetaType.FromModelObject(obj160);
            obj158.Name = "FixedText";
            obj158.Parent = obj26;
            obj159.Type = __MetaType.FromModelObject(obj20);
            obj159.Name = "Rule";
            obj159.Parent = obj26;
            obj160.InnerType = typeof(string);
            obj161.IsDerived = true;
            obj161.Type = typeof(bool);
            obj161.Name = "IsFixed";
            obj161.Parent = obj27;
            obj162.MChildren.Add(obj164);
            obj162.IsDerived = true;
            obj162.Type = __MetaType.FromModelObject(obj164);
            obj162.Name = "FixedText";
            obj162.Parent = obj27;
            obj163.Type = typeof(string);
            obj163.Name = "Text";
            obj163.Parent = obj27;
            obj164.InnerType = typeof(string);
            obj165.IsDerived = true;
            obj165.Type = typeof(bool);
            obj165.Name = "IsFixed";
            obj165.Parent = obj28;
            obj166.MChildren.Add(obj167);
            obj166.IsDerived = true;
            obj166.Type = __MetaType.FromModelObject(obj167);
            obj166.Name = "FixedText";
            obj166.Parent = obj28;
            obj167.InnerType = typeof(string);
            obj168.IsDerived = true;
            obj168.Type = typeof(bool);
            obj168.Name = "IsFixed";
            obj168.Parent = obj29;
            obj169.MChildren.Add(obj172);
            obj169.IsDerived = true;
            obj169.Type = __MetaType.FromModelObject(obj172);
            obj169.Name = "FixedText";
            obj169.Parent = obj29;
            obj170.Type = typeof(string);
            obj170.Name = "StartChar";
            obj170.Parent = obj29;
            obj171.Type = typeof(string);
            obj171.Name = "EndChar";
            obj171.Parent = obj29;
            obj172.InnerType = typeof(string);
            obj173.IsDerived = true;
            obj173.Type = typeof(bool);
            obj173.Name = "IsFixed";
            obj173.Parent = obj30;
            obj174.MChildren.Add(obj176);
            obj174.IsDerived = true;
            obj174.Type = __MetaType.FromModelObject(obj176);
            obj174.Name = "FixedText";
            obj174.Parent = obj30;
            obj175.MChildren.Add(obj177);
            obj175.IsContainment = true;
            obj175.Type = __MetaType.FromModelObject(obj177);
            obj175.Name = "Items";
            obj175.Parent = obj30;
            obj176.InnerType = typeof(string);
            obj177.ItemType = __MetaType.FromModelObject(obj31);
            obj178.IsDerived = true;
            obj178.Type = typeof(bool);
            obj178.Name = "IsFixed";
            obj178.Parent = obj31;
            obj179.MChildren.Add(obj180);
            obj179.IsDerived = true;
            obj179.Type = __MetaType.FromModelObject(obj180);
            obj179.Name = "FixedText";
            obj179.Parent = obj31;
            obj180.InnerType = typeof(string);
            obj181.IsDerived = true;
            obj181.Type = typeof(bool);
            obj181.Name = "IsFixed";
            obj181.Parent = obj32;
            obj182.MChildren.Add(obj184);
            obj182.IsDerived = true;
            obj182.Type = __MetaType.FromModelObject(obj184);
            obj182.Name = "FixedText";
            obj182.Parent = obj32;
            obj183.Type = typeof(string);
            obj183.Name = "Char";
            obj183.Parent = obj32;
            obj184.InnerType = typeof(string);
            obj185.IsDerived = true;
            obj185.Type = typeof(bool);
            obj185.Name = "IsFixed";
            obj185.Parent = obj33;
            obj186.MChildren.Add(obj189);
            obj186.IsDerived = true;
            obj186.Type = __MetaType.FromModelObject(obj189);
            obj186.Name = "FixedText";
            obj186.Parent = obj33;
            obj187.Type = typeof(string);
            obj187.Name = "StartChar";
            obj187.Parent = obj33;
            obj188.Type = typeof(string);
            obj188.Name = "EndChar";
            obj188.Parent = obj33;
            obj189.InnerType = typeof(string);
            obj190.IsDerived = true;
            obj190.Type = typeof(bool);
            obj190.Name = "IsFixed";
            obj190.Parent = obj34;
            obj191.MChildren.Add(obj193);
            obj191.IsDerived = true;
            obj191.Type = __MetaType.FromModelObject(obj193);
            obj191.Name = "FixedText";
            obj191.Parent = obj34;
            obj192.MChildren.Add(obj194);
            obj192.IsContainment = true;
            obj192.Type = __MetaType.FromModelObject(obj194);
            obj192.Name = "Alternatives";
            obj192.Parent = obj34;
            obj193.InnerType = typeof(string);
            obj194.ItemType = __MetaType.FromModelObject(obj23);
            obj195.SymbolProperty = ;
            obj195.Type = typeof(__MetaType);
            obj195.Name = "ReturnType";
            obj195.Parent = obj35;
            obj196.MChildren.Add(obj200);
            obj196.IsContainment = true;
            obj196.SymbolProperty = ;
            obj196.Type = __MetaType.FromModelObject(obj200);
            obj196.Name = "Alternatives";
            obj196.Parent = obj35;
            obj197.MChildren.Add(obj201);
            obj197.Type = __MetaType.FromModelObject(obj201);
            obj197.Name = "BaseRule";
            obj197.Parent = obj35;
            obj198.IsDerived = true;
            obj198.Type = typeof(string);
            obj198.Name = "GreenName";
            obj198.Parent = obj35;
            obj199.IsDerived = true;
            obj199.Type = typeof(string);
            obj199.Name = "RedName";
            obj199.Parent = obj35;
            obj200.ItemType = __MetaType.FromModelObject(obj36);
            obj201.InnerType = __MetaType.FromModelObject(obj36);
            obj202.SymbolProperty = ;
            obj202.Type = typeof(__MetaType);
            obj202.Name = "ReturnType";
            obj202.Parent = obj36;
            obj203.IsContainment = true;
            obj203.SymbolProperty = ;
            obj203.Type = __MetaType.FromModelObject(obj46);
            obj203.Name = "ReturnValue";
            obj203.Parent = obj36;
            obj204.MChildren.Add(obj217);
            obj204.IsContainment = true;
            obj204.SymbolProperty = ;
            obj204.Type = __MetaType.FromModelObject(obj217);
            obj204.Name = "Elements";
            obj204.Parent = obj36;
            obj205.IsDerived = true;
            obj205.Type = typeof(string);
            obj205.Name = "GreenName";
            obj205.Parent = obj36;
            obj206.IsDerived = true;
            obj206.Type = typeof(string);
            obj206.Name = "GreenConstructorParameters";
            obj206.Parent = obj36;
            obj207.IsDerived = true;
            obj207.Type = typeof(string);
            obj207.Name = "GreenConstructorArguments";
            obj207.Parent = obj36;
            obj208.IsDerived = true;
            obj208.Type = typeof(string);
            obj208.Name = "GreenUpdateParameters";
            obj208.Parent = obj36;
            obj209.IsDerived = true;
            obj209.Type = typeof(string);
            obj209.Name = "GreenUpdateArguments";
            obj209.Parent = obj36;
            obj210.IsDerived = true;
            obj210.Type = typeof(string);
            obj210.Name = "RedName";
            obj210.Parent = obj36;
            obj211.IsDerived = true;
            obj211.Type = typeof(string);
            obj211.Name = "RedUpdateParameters";
            obj211.Parent = obj36;
            obj212.IsDerived = true;
            obj212.Type = typeof(string);
            obj212.Name = "RedUpdateArguments";
            obj212.Parent = obj36;
            obj213.IsDerived = true;
            obj213.Type = typeof(string);
            obj213.Name = "RedOptionalUpdateParameters";
            obj213.Parent = obj36;
            obj214.IsDerived = true;
            obj214.Type = typeof(string);
            obj214.Name = "RedToGreenArgumentList";
            obj214.Parent = obj36;
            obj215.IsDerived = true;
            obj215.Type = typeof(string);
            obj215.Name = "RedToGreenOptionalArgumentList";
            obj215.Parent = obj36;
            obj216.IsDerived = true;
            obj216.Type = typeof(bool);
            obj216.Name = "HasRedToGreenOptionalArguments";
            obj216.Parent = obj36;
            obj217.ItemType = __MetaType.FromModelObject(obj38);
            obj218.Name = "Assign";
            obj218.Parent = obj37;
            obj219.Name = "QuestionAssign";
            obj219.Parent = obj37;
            obj220.Name = "NegatedAssign";
            obj220.Parent = obj37;
            obj221.Name = "PlusAssign";
            obj221.Parent = obj37;
            obj222.MChildren.Add(obj246);
            obj222.SymbolProperty = __MetaSymbol.FromValue("Name");
            obj222.Type = __MetaType.FromModelObject(obj246);
            obj222.Name = "Name";
            obj222.Parent = obj38;
            obj223.SymbolProperty = ;
            obj223.Type = __MetaType.FromModelObject(obj37);
            obj223.Name = "Assignment";
            obj223.Parent = obj38;
            obj224.IsContainment = true;
            obj224.SymbolProperty = ;
            obj224.Type = __MetaType.FromModelObject(obj39);
            obj224.Name = "Value";
            obj224.Parent = obj38;
            obj225.IsDerived = true;
            obj225.Type = typeof(bool);
            obj225.Name = "IsToken";
            obj225.Parent = obj38;
            obj226.IsDerived = true;
            obj226.Type = typeof(bool);
            obj226.Name = "IsList";
            obj226.Parent = obj38;
            obj227.IsDerived = true;
            obj227.Type = typeof(string);
            obj227.Name = "FieldName";
            obj227.Parent = obj38;
            obj228.IsDerived = true;
            obj228.Type = typeof(string);
            obj228.Name = "ParameterName";
            obj228.Parent = obj38;
            obj229.IsDerived = true;
            obj229.Type = typeof(string);
            obj229.Name = "PropertyName";
            obj229.Parent = obj38;
            obj230.IsDerived = true;
            obj230.Type = typeof(string);
            obj230.Name = "GreenFieldType";
            obj230.Parent = obj38;
            obj231.IsDerived = true;
            obj231.Type = typeof(string);
            obj231.Name = "GreenParameterValue";
            obj231.Parent = obj38;
            obj232.IsDerived = true;
            obj232.Type = typeof(string);
            obj232.Name = "GreenPropertyType";
            obj232.Parent = obj38;
            obj233.IsDerived = true;
            obj233.Type = typeof(string);
            obj233.Name = "GreenPropertyValue";
            obj233.Parent = obj38;
            obj234.MChildren.Add(obj247);
            obj234.IsDerived = true;
            obj234.Type = __MetaType.FromModelObject(obj247);
            obj234.Name = "GreenSyntaxNullCondition";
            obj234.Parent = obj38;
            obj235.MChildren.Add(obj248);
            obj235.IsDerived = true;
            obj235.Type = __MetaType.FromModelObject(obj248);
            obj235.Name = "GreenSyntaxCondition";
            obj235.Parent = obj38;
            obj236.IsDerived = true;
            obj236.Type = typeof(bool);
            obj236.Name = "IsOptionalUpdateParameter";
            obj236.Parent = obj38;
            obj237.IsDerived = true;
            obj237.Type = typeof(string);
            obj237.Name = "RedFieldType";
            obj237.Parent = obj38;
            obj238.IsDerived = true;
            obj238.Type = typeof(string);
            obj238.Name = "RedParameterValue";
            obj238.Parent = obj38;
            obj239.IsDerived = true;
            obj239.Type = typeof(string);
            obj239.Name = "RedPropertyType";
            obj239.Parent = obj38;
            obj240.IsDerived = true;
            obj240.Type = typeof(string);
            obj240.Name = "RedPropertyValue";
            obj240.Parent = obj38;
            obj241.IsDerived = true;
            obj241.Type = typeof(string);
            obj241.Name = "RedToGreenArgument";
            obj241.Parent = obj38;
            obj242.IsDerived = true;
            obj242.Type = typeof(string);
            obj242.Name = "RedToGreenOptionalArgument";
            obj242.Parent = obj38;
            obj243.MChildren.Add(obj249);
            obj243.IsDerived = true;
            obj243.Type = __MetaType.FromModelObject(obj249);
            obj243.Name = "RedSyntaxNullCondition";
            obj243.Parent = obj38;
            obj244.MChildren.Add(obj250);
            obj244.IsDerived = true;
            obj244.Type = __MetaType.FromModelObject(obj250);
            obj244.Name = "RedSyntaxCondition";
            obj244.Parent = obj38;
            obj245.MChildren.Add(obj251);
            obj245.IsDerived = true;
            obj245.Type = __MetaType.FromModelObject(obj251);
            obj245.Name = "VisitCall";
            obj245.Parent = obj38;
            obj246.InnerType = typeof(string);
            obj247.InnerType = typeof(string);
            obj248.InnerType = typeof(string);
            obj249.InnerType = typeof(string);
            obj250.InnerType = typeof(string);
            obj251.InnerType = typeof(string);
            obj252.Type = __MetaType.FromModelObject(obj18);
            obj252.Name = "Multiplicity";
            obj252.Parent = obj39;
            obj253.IsDerived = true;
            obj253.Type = typeof(string);
            obj253.Name = "GreenType";
            obj253.Parent = obj39;
            obj254.MChildren.Add(obj256);
            obj254.IsDerived = true;
            obj254.Type = __MetaType.FromModelObject(obj256);
            obj254.Name = "GreenSyntaxCondition";
            obj254.Parent = obj39;
            obj255.IsDerived = true;
            obj255.Type = typeof(string);
            obj255.Name = "RedType";
            obj255.Parent = obj39;
            obj256.InnerType = typeof(string);
            obj257.SymbolProperty = ;
            obj257.Type = __MetaType.FromModelObject(obj19);
            obj257.Name = "GrammarRule";
            obj257.Parent = obj40;
            obj258.MChildren.Add(obj264);
            obj258.SymbolProperty = ;
            obj258.Type = __MetaType.FromModelObject(obj264);
            obj258.Name = "ReferencedTypes";
            obj258.Parent = obj40;
            obj259.MChildren.Add(obj265);
            obj259.IsDerived = true;
            obj259.Type = __MetaType.FromModelObject(obj265);
            obj259.Name = "Token";
            obj259.Parent = obj40;
            obj260.MChildren.Add(obj266);
            obj260.IsDerived = true;
            obj260.Type = __MetaType.FromModelObject(obj266);
            obj260.Name = "Rule";
            obj260.Parent = obj40;
            obj261.IsDerived = true;
            obj261.Type = typeof(string);
            obj261.Name = "GreenType";
            obj261.Parent = obj40;
            obj262.MChildren.Add(obj267);
            obj262.IsDerived = true;
            obj262.Type = __MetaType.FromModelObject(obj267);
            obj262.Name = "GreenSyntaxCondition";
            obj262.Parent = obj40;
            obj263.IsDerived = true;
            obj263.Type = typeof(string);
            obj263.Name = "RedType";
            obj263.Parent = obj40;
            obj264.ItemType = typeof(__MetaType);
            obj265.InnerType = __MetaType.FromModelObject(obj21);
            obj266.InnerType = __MetaType.FromModelObject(obj35);
            obj267.InnerType = typeof(string);
            obj268.IsDerived = true;
            obj268.Type = typeof(string);
            obj268.Name = "GreenType";
            obj268.Parent = obj41;
            obj269.MChildren.Add(obj271);
            obj269.IsDerived = true;
            obj269.Type = __MetaType.FromModelObject(obj271);
            obj269.Name = "GreenSyntaxCondition";
            obj269.Parent = obj41;
            obj270.IsDerived = true;
            obj270.Type = typeof(string);
            obj270.Name = "RedType";
            obj270.Parent = obj41;
            obj271.InnerType = typeof(string);
            obj272.Type = typeof(string);
            obj272.Name = "Text";
            obj272.Parent = obj42;
            obj273.MChildren.Add(obj277);
            obj273.IsContainment = true;
            obj273.Type = __MetaType.FromModelObject(obj277);
            obj273.Name = "Tokens";
            obj273.Parent = obj43;
            obj274.IsDerived = true;
            obj274.Type = typeof(string);
            obj274.Name = "GreenType";
            obj274.Parent = obj43;
            obj275.MChildren.Add(obj278);
            obj275.IsDerived = true;
            obj275.Type = __MetaType.FromModelObject(obj278);
            obj275.Name = "GreenSyntaxCondition";
            obj275.Parent = obj43;
            obj276.IsDerived = true;
            obj276.Type = typeof(string);
            obj276.Name = "RedType";
            obj276.Parent = obj43;
            obj277.ItemType = __MetaType.FromModelObject(obj40);
            obj278.InnerType = typeof(string);
            obj279.IsDerived = true;
            obj279.Type = typeof(string);
            obj279.Name = "GreenType";
            obj279.Parent = obj44;
            obj280.MChildren.Add(obj282);
            obj280.IsDerived = true;
            obj280.Type = __MetaType.FromModelObject(obj282);
            obj280.Name = "GreenSyntaxCondition";
            obj280.Parent = obj44;
            obj281.IsDerived = true;
            obj281.Type = typeof(string);
            obj281.Name = "RedType";
            obj281.Parent = obj44;
            obj282.InnerType = typeof(string);
            obj283.Type = typeof(bool);
            obj283.Name = "SeparatorFirst";
            obj283.Parent = obj45;
            obj284.Type = typeof(bool);
            obj284.Name = "RepeatedSeparatorFirst";
            obj284.Parent = obj45;
            obj285.MChildren.Add(obj295);
            obj285.IsContainment = true;
            obj285.Type = __MetaType.FromModelObject(obj295);
            obj285.Name = "FirstItems";
            obj285.Parent = obj45;
            obj286.MChildren.Add(obj296);
            obj286.IsContainment = true;
            obj286.Type = __MetaType.FromModelObject(obj296);
            obj286.Name = "FirstSeparators";
            obj286.Parent = obj45;
            obj287.IsContainment = true;
            obj287.Type = __MetaType.FromModelObject(obj38);
            obj287.Name = "RepeatedBlock";
            obj287.Parent = obj45;
            obj288.Type = __MetaType.FromModelObject(obj38);
            obj288.Name = "RepeatedItem";
            obj288.Parent = obj45;
            obj289.Type = __MetaType.FromModelObject(obj38);
            obj289.Name = "RepeatedSeparator";
            obj289.Parent = obj45;
            obj290.MChildren.Add(obj297);
            obj290.IsContainment = true;
            obj290.Type = __MetaType.FromModelObject(obj297);
            obj290.Name = "LastItems";
            obj290.Parent = obj45;
            obj291.MChildren.Add(obj298);
            obj291.IsContainment = true;
            obj291.Type = __MetaType.FromModelObject(obj298);
            obj291.Name = "LastSeparators";
            obj291.Parent = obj45;
            obj292.IsDerived = true;
            obj292.Type = typeof(string);
            obj292.Name = "GreenType";
            obj292.Parent = obj45;
            obj293.MChildren.Add(obj299);
            obj293.IsDerived = true;
            obj293.Type = __MetaType.FromModelObject(obj299);
            obj293.Name = "GreenSyntaxCondition";
            obj293.Parent = obj45;
            obj294.IsDerived = true;
            obj294.Type = typeof(string);
            obj294.Name = "RedType";
            obj294.Parent = obj45;
            obj295.ItemType = __MetaType.FromModelObject(obj38);
            obj296.ItemType = __MetaType.FromModelObject(obj38);
            obj297.ItemType = __MetaType.FromModelObject(obj38);
            obj298.ItemType = __MetaType.FromModelObject(obj38);
            obj299.InnerType = typeof(string);
            obj300.SymbolProperty = ;
            obj300.Type = typeof(__MetaSymbol);
            obj300.Name = "Value";
            obj300.Parent = obj46;
            obj301.MChildren.Add(obj302);
            obj301.Type = __MetaType.FromModelObject(obj302);
            obj301.Name = "Items";
            obj301.Parent = obj47;
            obj302.ItemType = __MetaType.FromModelObject(obj46);
            obj303.MChildren.Add(obj304);
            obj303.MChildren.Add(obj305);
            obj303.MChildren.Add(obj306);
            obj303.MChildren.Add(obj307);
            obj303.MChildren.Add(obj308);
            obj303.MChildren.Add(obj309);
            obj303.MChildren.Add(obj310);
            obj303.MChildren.Add(obj311);
            obj303.MChildren.Add(obj312);
            obj303.MChildren.Add(obj313);
            obj303.MChildren.Add(obj314);
            obj303.MChildren.Add(obj315);
            obj303.MChildren.Add(obj316);
            obj303.MChildren.Add(obj317);
            obj303.MChildren.Add(obj318);
            obj303.MChildren.Add(obj319);
            obj303.MChildren.Add(obj320);
            obj303.MChildren.Add(obj321);
            obj303.MChildren.Add(obj322);
            obj303.MChildren.Add(obj323);
            obj303.MChildren.Add(obj324);
            obj303.MChildren.Add(obj325);
            obj303.MChildren.Add(obj326);
            obj303.MChildren.Add(obj327);
            obj303.MChildren.Add(obj328);
            obj303.MChildren.Add(obj329);
            obj303.MChildren.Add(obj330);
            obj303.MChildren.Add(obj331);
            obj303.MChildren.Add(obj332);
            obj303.MChildren.Add(obj333);
            obj303.MChildren.Add(obj334);
            obj303.MChildren.Add(obj335);
            obj303.MChildren.Add(obj336);
            obj303.MChildren.Add(obj337);
            obj303.MChildren.Add(obj338);
            obj303.MChildren.Add(obj339);
            obj303.MChildren.Add(obj340);
            obj303.MChildren.Add(obj341);
            obj303.MChildren.Add(obj342);
            obj303.MChildren.Add(obj343);
            obj303.MChildren.Add(obj344);
            obj303.MChildren.Add(obj345);
            obj303.MChildren.Add(obj346);
            obj303.MChildren.Add(obj347);
            obj303.MChildren.Add(obj348);
            obj303.MChildren.Add(obj349);
            obj303.MChildren.Add(obj350);
            obj303.MChildren.Add(obj351);
            obj303.MChildren.Add(obj352);
            obj303.MChildren.Add(obj353);
            obj303.MChildren.Add(obj354);
            obj303.MChildren.Add(obj355);
            obj303.MChildren.Add(obj356);
            obj303.MChildren.Add(obj357);
            obj303.MChildren.Add(obj358);
            obj303.MChildren.Add(obj359);
            obj303.MChildren.Add(obj360);
            obj303.MChildren.Add(obj361);
            obj303.MChildren.Add(obj362);
            obj303.GrammarRules.Add(obj304);
            obj303.GrammarRules.Add(obj305);
            obj303.GrammarRules.Add(obj306);
            obj303.GrammarRules.Add(obj307);
            obj303.GrammarRules.Add(obj308);
            obj303.GrammarRules.Add(obj309);
            obj303.GrammarRules.Add(obj310);
            obj303.GrammarRules.Add(obj311);
            obj303.GrammarRules.Add(obj312);
            obj303.GrammarRules.Add(obj313);
            obj303.GrammarRules.Add(obj314);
            obj303.GrammarRules.Add(obj315);
            obj303.GrammarRules.Add(obj316);
            obj303.GrammarRules.Add(obj317);
            obj303.GrammarRules.Add(obj318);
            obj303.GrammarRules.Add(obj319);
            obj303.GrammarRules.Add(obj320);
            obj303.GrammarRules.Add(obj321);
            obj303.GrammarRules.Add(obj322);
            obj303.GrammarRules.Add(obj323);
            obj303.GrammarRules.Add(obj324);
            obj303.GrammarRules.Add(obj325);
            obj303.GrammarRules.Add(obj326);
            obj303.GrammarRules.Add(obj327);
            obj303.GrammarRules.Add(obj328);
            obj303.GrammarRules.Add(obj329);
            obj303.GrammarRules.Add(obj330);
            obj303.GrammarRules.Add(obj331);
            obj303.GrammarRules.Add(obj332);
            obj303.GrammarRules.Add(obj333);
            obj303.GrammarRules.Add(obj334);
            obj303.GrammarRules.Add(obj335);
            obj303.GrammarRules.Add(obj336);
            obj303.GrammarRules.Add(obj337);
            obj303.GrammarRules.Add(obj338);
            obj303.GrammarRules.Add(obj339);
            obj303.GrammarRules.Add(obj340);
            obj303.GrammarRules.Add(obj341);
            obj303.GrammarRules.Add(obj342);
            obj303.GrammarRules.Add(obj343);
            obj303.GrammarRules.Add(obj344);
            obj303.GrammarRules.Add(obj345);
            obj303.GrammarRules.Add(obj346);
            obj303.GrammarRules.Add(obj347);
            obj303.GrammarRules.Add(obj348);
            obj303.GrammarRules.Add(obj349);
            obj303.GrammarRules.Add(obj350);
            obj303.GrammarRules.Add(obj351);
            obj303.GrammarRules.Add(obj352);
            obj303.GrammarRules.Add(obj353);
            obj303.GrammarRules.Add(obj354);
            obj303.GrammarRules.Add(obj355);
            obj303.GrammarRules.Add(obj356);
            obj303.GrammarRules.Add(obj357);
            obj303.GrammarRules.Add(obj358);
            obj303.GrammarRules.Add(obj359);
            obj303.GrammarRules.Add(obj360);
            obj303.GrammarRules.Add(obj361);
            obj303.GrammarRules.Add(obj362);
            obj303.Language = obj54;
            obj303.Declarations.Add(obj304);
            obj303.Declarations.Add(obj305);
            obj303.Declarations.Add(obj306);
            obj303.Declarations.Add(obj307);
            obj303.Declarations.Add(obj308);
            obj303.Declarations.Add(obj309);
            obj303.Declarations.Add(obj310);
            obj303.Declarations.Add(obj311);
            obj303.Declarations.Add(obj312);
            obj303.Declarations.Add(obj313);
            obj303.Declarations.Add(obj314);
            obj303.Declarations.Add(obj315);
            obj303.Declarations.Add(obj316);
            obj303.Declarations.Add(obj317);
            obj303.Declarations.Add(obj318);
            obj303.Declarations.Add(obj319);
            obj303.Declarations.Add(obj320);
            obj303.Declarations.Add(obj321);
            obj303.Declarations.Add(obj322);
            obj303.Declarations.Add(obj323);
            obj303.Declarations.Add(obj324);
            obj303.Declarations.Add(obj325);
            obj303.Declarations.Add(obj326);
            obj303.Declarations.Add(obj327);
            obj303.Declarations.Add(obj328);
            obj303.Declarations.Add(obj329);
            obj303.Declarations.Add(obj330);
            obj303.Declarations.Add(obj331);
            obj303.Declarations.Add(obj332);
            obj303.Declarations.Add(obj333);
            obj303.Declarations.Add(obj334);
            obj303.Declarations.Add(obj335);
            obj303.Declarations.Add(obj336);
            obj303.Declarations.Add(obj337);
            obj303.Declarations.Add(obj338);
            obj303.Declarations.Add(obj339);
            obj303.Declarations.Add(obj340);
            obj303.Declarations.Add(obj341);
            obj303.Declarations.Add(obj342);
            obj303.Declarations.Add(obj343);
            obj303.Declarations.Add(obj344);
            obj303.Declarations.Add(obj345);
            obj303.Declarations.Add(obj346);
            obj303.Declarations.Add(obj347);
            obj303.Declarations.Add(obj348);
            obj303.Declarations.Add(obj349);
            obj303.Declarations.Add(obj350);
            obj303.Declarations.Add(obj351);
            obj303.Declarations.Add(obj352);
            obj303.Declarations.Add(obj353);
            obj303.Declarations.Add(obj354);
            obj303.Declarations.Add(obj355);
            obj303.Declarations.Add(obj356);
            obj303.Declarations.Add(obj357);
            obj303.Declarations.Add(obj358);
            obj303.Declarations.Add(obj359);
            obj303.Declarations.Add(obj360);
            obj303.Declarations.Add(obj361);
            obj303.Declarations.Add(obj362);
            obj303.Parent = obj54;
            obj304.MChildren.Add(obj363);
            obj304.Alternatives.Add(obj363);
            obj304.ReturnType = __MetaType.FromModelObject(obj9);
            obj304.Grammar = obj303;
            obj304.Name = "Main";
            obj304.Parent = obj303;
            obj305.MChildren.Add(obj390);
            obj305.MChildren.Add(obj391);
            obj305.Alternatives.Add(obj390);
            obj305.Alternatives.Add(obj391);
            obj305.ReturnType = __MetaType.FromModelObject();
            obj305.Grammar = obj303;
            obj305.Name = "Using";
            obj305.Parent = obj303;
            obj306.MChildren.Add(obj398);
            obj306.Alternatives.Add(obj398);
            obj306.ReturnType = __MetaType.FromModelObject(obj10);
            obj306.Grammar = obj303;
            obj306.Name = "LanguageDeclaration";
            obj306.Parent = obj303;
            obj307.MChildren.Add(obj431);
            obj307.Alternatives.Add(obj431);
            obj307.ReturnType = __MetaType.FromModelObject(obj11);
            obj307.Grammar = obj303;
            obj307.Name = "Grammar";
            obj307.Parent = obj303;
            obj308.MChildren.Add(obj438);
            obj308.MChildren.Add(obj439);
            obj308.Alternatives.Add(obj438);
            obj308.Alternatives.Add(obj439);
            obj308.ReturnType = __MetaType.FromModelObject(obj19);
            obj308.Grammar = obj303;
            obj308.Name = "GrammarRule";
            obj308.Parent = obj303;
            obj309.MChildren.Add(obj444);
            obj309.Alternatives.Add(obj444);
            obj309.ReturnType = __MetaType.FromModelObject(obj35);
            obj309.Grammar = obj303;
            obj309.Name = "Rule";
            obj309.Parent = obj303;
            obj310.MChildren.Add(obj473);
            obj310.Alternatives.Add(obj473);
            obj310.ReturnType = __MetaType.FromModelObject(obj36);
            obj310.Grammar = obj303;
            obj310.Name = "Alternative";
            obj310.Parent = obj303;
            obj311.MChildren.Add(obj505);
            obj311.Alternatives.Add(obj505);
            obj311.ReturnType = __MetaType.FromModelObject(obj38);
            obj311.Grammar = obj303;
            obj311.Name = "Element";
            obj311.Parent = obj303;
            obj312.MChildren.Add(obj517);
            obj312.MChildren.Add(obj518);
            obj312.MChildren.Add(obj519);
            obj312.MChildren.Add(obj520);
            obj312.Alternatives.Add(obj517);
            obj312.Alternatives.Add(obj518);
            obj312.Alternatives.Add(obj519);
            obj312.Alternatives.Add(obj520);
            obj312.ReturnType = __MetaType.FromModelObject(obj39);
            obj312.Grammar = obj303;
            obj312.Name = "ElementValue";
            obj312.Parent = obj303;
            obj313.MChildren.Add(obj529);
            obj313.Alternatives.Add(obj529);
            obj313.ReturnType = __MetaType.FromModelObject(obj44);
            obj313.Grammar = obj303;
            obj313.Name = "Block";
            obj313.Parent = obj303;
            obj314.MChildren.Add(obj547);
            obj314.Alternatives.Add(obj547);
            obj314.ReturnType = __MetaType.FromModelObject(obj36);
            obj314.Grammar = obj303;
            obj314.Name = "BlockAlternative";
            obj314.Parent = obj303;
            obj315.MChildren.Add(obj557);
            obj315.MChildren.Add(obj558);
            obj315.MChildren.Add(obj559);
            obj315.Alternatives.Add(obj557);
            obj315.Alternatives.Add(obj558);
            obj315.Alternatives.Add(obj559);
            obj315.ReturnType = __MetaType.FromModelObject(obj40);
            obj315.Grammar = obj303;
            obj315.Name = "RuleRef";
            obj315.Parent = obj303;
            obj316.MChildren.Add(obj598);
            obj316.Alternatives.Add(obj598);
            obj316.ReturnType = __MetaType.FromModelObject(obj41);
            obj316.Grammar = obj303;
            obj316.Name = "Eof1";
            obj316.Parent = obj303;
            obj317.MChildren.Add(obj601);
            obj317.Alternatives.Add(obj601);
            obj317.ReturnType = __MetaType.FromModelObject(obj42);
            obj317.Grammar = obj303;
            obj317.Name = "Fixed";
            obj317.Parent = obj303;
            obj318.MChildren.Add(obj608);
            obj318.MChildren.Add(obj609);
            obj318.Alternatives.Add(obj608);
            obj318.Alternatives.Add(obj609);
            obj318.ReturnType = __MetaType.FromModelObject(obj20);
            obj318.Grammar = obj303;
            obj318.Name = "LexerRule";
            obj318.Parent = obj303;
            obj319.MChildren.Add(obj614);
            obj319.Alternatives.Add(obj614);
            obj319.Grammar = obj303;
            obj319.Name = "Token";
            obj319.Parent = obj303;
            obj320.MChildren.Add(obj649);
            obj320.Alternatives.Add(obj649);
            obj320.ReturnType = __MetaType.FromModelObject(obj22);
            obj320.Grammar = obj303;
            obj320.Name = "Fragment";
            obj320.Parent = obj303;
            obj321.MChildren.Add(obj667);
            obj321.Alternatives.Add(obj667);
            obj321.ReturnType = __MetaType.FromModelObject(obj23);
            obj321.Grammar = obj303;
            obj321.Name = "LAlternative";
            obj321.Parent = obj303;
            obj322.MChildren.Add(obj670);
            obj322.Alternatives.Add(obj670);
            obj322.ReturnType = __MetaType.FromModelObject(obj24);
            obj322.Grammar = obj303;
            obj322.Name = "LElement";
            obj322.Parent = obj303;
            obj323.MChildren.Add(obj677);
            obj323.MChildren.Add(obj678);
            obj323.MChildren.Add(obj679);
            obj323.MChildren.Add(obj680);
            obj323.MChildren.Add(obj681);
            obj323.Alternatives.Add(obj677);
            obj323.Alternatives.Add(obj678);
            obj323.Alternatives.Add(obj679);
            obj323.Alternatives.Add(obj680);
            obj323.Alternatives.Add(obj681);
            obj323.ReturnType = __MetaType.FromModelObject(obj25);
            obj323.Grammar = obj303;
            obj323.Name = "LElementValue";
            obj323.Parent = obj303;
            obj324.MChildren.Add(obj692);
            obj324.Alternatives.Add(obj692);
            obj324.ReturnType = __MetaType.FromModelObject(obj26);
            obj324.Grammar = obj303;
            obj324.Name = "LReference";
            obj324.Parent = obj303;
            obj325.MChildren.Add(obj695);
            obj325.Alternatives.Add(obj695);
            obj325.ReturnType = __MetaType.FromModelObject(obj27);
            obj325.Grammar = obj303;
            obj325.Name = "LFixed";
            obj325.Parent = obj303;
            obj326.MChildren.Add(obj698);
            obj326.Alternatives.Add(obj698);
            obj326.ReturnType = __MetaType.FromModelObject(obj28);
            obj326.Grammar = obj303;
            obj326.Name = "LWildCard";
            obj326.Parent = obj303;
            obj327.MChildren.Add(obj701);
            obj327.Alternatives.Add(obj701);
            obj327.ReturnType = __MetaType.FromModelObject(obj29);
            obj327.Grammar = obj303;
            obj327.Name = "LRange";
            obj327.Parent = obj303;
            obj328.MChildren.Add(obj708);
            obj328.Alternatives.Add(obj708);
            obj328.ReturnType = __MetaType.FromModelObject(obj34);
            obj328.Grammar = obj303;
            obj328.Name = "LBlock";
            obj328.Parent = obj303;
            obj329.MChildren.Add(obj722);
            obj329.MChildren.Add(obj723);
            obj329.Alternatives.Add(obj722);
            obj329.Alternatives.Add(obj723);
            obj329.Grammar = obj303;
            obj329.Name = "Expression";
            obj329.Parent = obj303;
            obj330.MChildren.Add(obj728);
            obj330.MChildren.Add(obj729);
            obj330.Alternatives.Add(obj728);
            obj330.Alternatives.Add(obj729);
            obj330.Grammar = obj303;
            obj330.Name = "SingleExpression";
            obj330.Parent = obj303;
            obj331.MChildren.Add(obj757);
            obj331.Alternatives.Add(obj757);
            obj331.ReturnType = __MetaType.FromModelObject(obj47);
            obj331.Grammar = obj303;
            obj331.Name = "ArrayExpression";
            obj331.Parent = obj303;
            obj332.MChildren.Add(obj774);
            obj332.Alternatives.Add(obj774);
            obj332.ReturnType = __MetaType.FromModelObject(obj12);
            obj332.Grammar = obj303;
            obj332.Name = "ParserAnnotation";
            obj332.Parent = obj303;
            obj333.MChildren.Add(obj806);
            obj333.Alternatives.Add(obj806);
            obj333.ReturnType = __MetaType.FromModelObject(obj12);
            obj333.Grammar = obj303;
            obj333.Name = "LexerAnnotation";
            obj333.Parent = obj303;
            obj334.MChildren.Add(obj838);
            obj334.Alternatives.Add(obj838);
            obj334.Grammar = obj303;
            obj334.Name = "AnnotationArgument";
            obj334.Parent = obj303;
            obj335.MChildren.Add(obj849);
            obj335.MChildren.Add(obj850);
            obj335.MChildren.Add(obj851);
            obj335.MChildren.Add(obj852);
            obj335.Alternatives.Add(obj849);
            obj335.Alternatives.Add(obj850);
            obj335.Alternatives.Add(obj851);
            obj335.Alternatives.Add(obj852);
            obj335.ReturnType = __MetaType.FromModelObject(obj37);
            obj335.Grammar = obj303;
            obj335.Name = "Assignment";
            obj335.Parent = obj303;
            obj336.MChildren.Add(obj865);
            obj336.MChildren.Add(obj866);
            obj336.MChildren.Add(obj867);
            obj336.MChildren.Add(obj868);
            obj336.MChildren.Add(obj869);
            obj336.MChildren.Add(obj870);
            obj336.Alternatives.Add(obj865);
            obj336.Alternatives.Add(obj866);
            obj336.Alternatives.Add(obj867);
            obj336.Alternatives.Add(obj868);
            obj336.Alternatives.Add(obj869);
            obj336.Alternatives.Add(obj870);
            obj336.ReturnType = __MetaType.FromModelObject(obj18);
            obj336.Grammar = obj303;
            obj336.Name = "Multiplicity";
            obj336.Parent = obj303;
            obj337.MChildren.Add(obj889);
            obj337.MChildren.Add(obj890);
            obj337.Alternatives.Add(obj889);
            obj337.Alternatives.Add(obj890);
            obj337.ReturnType = typeof(__MetaType);
            obj337.Grammar = obj303;
            obj337.Name = "TypeReferenceIdentifier";
            obj337.Parent = obj303;
            obj338.MChildren.Add(obj895);
            obj338.MChildren.Add(obj896);
            obj338.Alternatives.Add(obj895);
            obj338.Alternatives.Add(obj896);
            obj338.ReturnType = typeof(__MetaType);
            obj338.Grammar = obj303;
            obj338.Name = "TypeReference";
            obj338.Parent = obj303;
            obj339.MChildren.Add(obj901);
            obj339.MChildren.Add(obj902);
            obj339.MChildren.Add(obj903);
            obj339.MChildren.Add(obj904);
            obj339.MChildren.Add(obj905);
            obj339.MChildren.Add(obj906);
            obj339.MChildren.Add(obj907);
            obj339.MChildren.Add(obj908);
            obj339.MChildren.Add(obj909);
            obj339.MChildren.Add(obj910);
            obj339.MChildren.Add(obj911);
            obj339.MChildren.Add(obj912);
            obj339.MChildren.Add(obj913);
            obj339.MChildren.Add(obj914);
            obj339.MChildren.Add(obj915);
            obj339.MChildren.Add(obj916);
            obj339.MChildren.Add(obj917);
            obj339.MChildren.Add(obj918);
            obj339.Alternatives.Add(obj901);
            obj339.Alternatives.Add(obj902);
            obj339.Alternatives.Add(obj903);
            obj339.Alternatives.Add(obj904);
            obj339.Alternatives.Add(obj905);
            obj339.Alternatives.Add(obj906);
            obj339.Alternatives.Add(obj907);
            obj339.Alternatives.Add(obj908);
            obj339.Alternatives.Add(obj909);
            obj339.Alternatives.Add(obj910);
            obj339.Alternatives.Add(obj911);
            obj339.Alternatives.Add(obj912);
            obj339.Alternatives.Add(obj913);
            obj339.Alternatives.Add(obj914);
            obj339.Alternatives.Add(obj915);
            obj339.Alternatives.Add(obj916);
            obj339.Alternatives.Add(obj917);
            obj339.Alternatives.Add(obj918);
            obj339.ReturnType = typeof(__MetaType);
            obj339.Grammar = obj303;
            obj339.Name = "PrimitiveType";
            obj339.Parent = obj303;
            obj340.MChildren.Add(obj955);
            obj340.MChildren.Add(obj956);
            obj340.Alternatives.Add(obj956);
            obj340.ReturnType = typeof(void);
            obj340.Grammar = obj303;
            obj340.Annotations.Add(obj955);
            obj340.Name = "Name";
            obj340.Parent = obj303;
            obj341.MChildren.Add(obj959);
            obj341.MChildren.Add(obj960);
            obj341.Alternatives.Add(obj960);
            obj341.ReturnType = typeof(void);
            obj341.Grammar = obj303;
            obj341.Annotations.Add(obj959);
            obj341.Name = "Qualifier";
            obj341.Parent = obj303;
            obj342.MChildren.Add(obj970);
            obj342.MChildren.Add(obj971);
            obj342.MChildren.Add(obj972);
            obj342.MChildren.Add(obj973);
            obj342.Alternatives.Add(obj972);
            obj342.Alternatives.Add(obj973);
            obj342.ReturnType = typeof(void);
            obj342.Grammar = obj303;
            obj342.Annotations.Add(obj970);
            obj342.Annotations.Add(obj971);
            obj342.Name = "Identifier";
            obj342.Parent = obj303;
            obj343.MChildren.Add(obj978);
            obj343.MChildren.Add(obj979);
            obj343.MChildren.Add(obj980);
            obj343.ReturnType = typeof(int);
            obj343.Alternatives.Add(obj979);
            obj343.Alternatives.Add(obj980);
            obj343.Grammar = obj303;
            obj343.Annotations.Add(obj978);
            obj343.Name = "TInteger";
            obj343.Parent = obj303;
            obj344.MChildren.Add(obj990);
            obj344.MChildren.Add(obj991);
            obj344.ReturnType = typeof(string);
            obj344.Alternatives.Add(obj991);
            obj344.Grammar = obj303;
            obj344.Annotations.Add(obj990);
            obj344.Name = "TDecimal";
            obj344.Parent = obj303;
            obj345.MChildren.Add(obj1012);
            obj345.MChildren.Add(obj1013);
            obj345.Alternatives.Add(obj1013);
            obj345.Grammar = obj303;
            obj345.Annotations.Add(obj1012);
            obj345.Name = "TIdentifier";
            obj345.Parent = obj303;
            obj346.MChildren.Add(obj1039);
            obj346.MChildren.Add(obj1040);
            obj346.Alternatives.Add(obj1040);
            obj346.Grammar = obj303;
            obj346.Annotations.Add(obj1039);
            obj346.Name = "TVerbatimIdentifier";
            obj346.Parent = obj303;
            obj347.MChildren.Add(obj1068);
            obj347.MChildren.Add(obj1069);
            obj347.Alternatives.Add(obj1069);
            obj347.Grammar = obj303;
            obj347.Annotations.Add(obj1068);
            obj347.Name = "TComma";
            obj347.Parent = obj303;
            obj348.MChildren.Add(obj1072);
            obj348.MChildren.Add(obj1073);
            obj348.MChildren.Add(obj1074);
            obj348.ReturnType = typeof(string);
            obj348.Alternatives.Add(obj1073);
            obj348.Alternatives.Add(obj1074);
            obj348.Grammar = obj303;
            obj348.Annotations.Add(obj1072);
            obj348.Name = "TString";
            obj348.Parent = obj303;
            obj349.MChildren.Add(obj1087);
            obj349.MChildren.Add(obj1088);
            obj349.MChildren.Add(obj1089);
            obj349.Alternatives.Add(obj1087);
            obj349.Alternatives.Add(obj1088);
            obj349.Alternatives.Add(obj1089);
            obj349.Grammar = obj303;
            obj349.Name = "DoubleQuoteTextCharacter";
            obj349.Parent = obj303;
            obj350.MChildren.Add(obj1096);
            obj350.Alternatives.Add(obj1096);
            obj350.Grammar = obj303;
            obj350.Name = "DoubleQuoteTextSimple";
            obj350.Parent = obj303;
            obj351.MChildren.Add(obj1120);
            obj351.MChildren.Add(obj1121);
            obj351.MChildren.Add(obj1122);
            obj351.Alternatives.Add(obj1120);
            obj351.Alternatives.Add(obj1121);
            obj351.Alternatives.Add(obj1122);
            obj351.Grammar = obj303;
            obj351.Name = "SingleQuoteTextCharacter";
            obj351.Parent = obj303;
            obj352.MChildren.Add(obj1129);
            obj352.Alternatives.Add(obj1129);
            obj352.Grammar = obj303;
            obj352.Name = "SingleQuoteTextSimple";
            obj352.Parent = obj303;
            obj353.MChildren.Add(obj1153);
            obj353.Alternatives.Add(obj1153);
            obj353.Grammar = obj303;
            obj353.Name = "CharacterEscapeSimple";
            obj353.Parent = obj303;
            obj354.MChildren.Add(obj1158);
            obj354.MChildren.Add(obj1159);
            obj354.MChildren.Add(obj1160);
            obj354.MChildren.Add(obj1161);
            obj354.MChildren.Add(obj1162);
            obj354.MChildren.Add(obj1163);
            obj354.MChildren.Add(obj1164);
            obj354.MChildren.Add(obj1165);
            obj354.MChildren.Add(obj1166);
            obj354.MChildren.Add(obj1167);
            obj354.MChildren.Add(obj1168);
            obj354.Alternatives.Add(obj1158);
            obj354.Alternatives.Add(obj1159);
            obj354.Alternatives.Add(obj1160);
            obj354.Alternatives.Add(obj1161);
            obj354.Alternatives.Add(obj1162);
            obj354.Alternatives.Add(obj1163);
            obj354.Alternatives.Add(obj1164);
            obj354.Alternatives.Add(obj1165);
            obj354.Alternatives.Add(obj1166);
            obj354.Alternatives.Add(obj1167);
            obj354.Alternatives.Add(obj1168);
            obj354.Grammar = obj303;
            obj354.Name = "CharacterEscapeSimpleCharacter";
            obj354.Parent = obj303;
            obj355.MChildren.Add(obj1191);
            obj355.MChildren.Add(obj1192);
            obj355.Alternatives.Add(obj1191);
            obj355.Alternatives.Add(obj1192);
            obj355.Grammar = obj303;
            obj355.Name = "CharacterEscapeUnicode";
            obj355.Parent = obj303;
            obj356.MChildren.Add(obj1221);
            obj356.Alternatives.Add(obj1221);
            obj356.Grammar = obj303;
            obj356.Name = "HexDigit";
            obj356.Parent = obj303;
            obj357.MChildren.Add(obj1233);
            obj357.MChildren.Add(obj1234);
            obj357.IsTrivia = true;
            obj357.Alternatives.Add(obj1234);
            obj357.Grammar = obj303;
            obj357.Annotations.Add(obj1233);
            obj357.Name = "TUtf8Bom";
            obj357.Parent = obj303;
            obj358.MChildren.Add(obj1241);
            obj358.MChildren.Add(obj1242);
            obj358.IsTrivia = true;
            obj358.Alternatives.Add(obj1242);
            obj358.Grammar = obj303;
            obj358.Annotations.Add(obj1241);
            obj358.Name = "TWhitespace";
            obj358.Parent = obj303;
            obj359.MChildren.Add(obj1251);
            obj359.MChildren.Add(obj1252);
            obj359.IsTrivia = true;
            obj359.Alternatives.Add(obj1252);
            obj359.Grammar = obj303;
            obj359.Annotations.Add(obj1251);
            obj359.Name = "TLineEnd";
            obj359.Parent = obj303;
            obj360.MChildren.Add(obj1264);
            obj360.MChildren.Add(obj1265);
            obj360.IsTrivia = true;
            obj360.Alternatives.Add(obj1265);
            obj360.Grammar = obj303;
            obj360.Annotations.Add(obj1264);
            obj360.Name = "TSingleLineComment";
            obj360.Parent = obj303;
            obj361.MChildren.Add(obj1276);
            obj361.MChildren.Add(obj1277);
            obj361.IsTrivia = true;
            obj361.Alternatives.Add(obj1277);
            obj361.Grammar = obj303;
            obj361.Annotations.Add(obj1276);
            obj361.Name = "TMultiLineComment";
            obj361.Parent = obj303;
            obj362.MChildren.Add(obj1284);
            obj362.IsTrivia = true;
            obj362.Alternatives.Add(obj1284);
            obj362.Grammar = obj303;
            obj362.Name = "TInvalidToken";
            obj362.Parent = obj303;
            obj363.MChildren.Add(obj364);
            obj363.MChildren.Add(obj365);
            obj363.MChildren.Add(obj366);
            obj363.MChildren.Add(obj367);
            obj363.MChildren.Add(obj368);
            obj363.MChildren.Add(obj369);
            obj363.Elements.Add(obj364);
            obj363.Elements.Add(obj365);
            obj363.Elements.Add(obj366);
            obj363.Elements.Add(obj367);
            obj363.Elements.Add(obj368);
            obj363.Elements.Add(obj369);
            obj363.ReturnType = __MetaType.FromModelObject(obj9);
            obj364.MChildren.Add(obj370);
            obj364.Value = obj370;
            obj365.MChildren.Add(obj371);
            obj365.Value = obj371;
            obj366.MChildren.Add(obj375);
            obj366.Value = obj375;
            obj367.MChildren.Add(obj376);
            obj367.Value = obj376;
            obj368.MChildren.Add(obj384);
            obj368.Value = obj384;
            obj369.MChildren.Add(obj389);
            obj369.Value = obj389;
            obj370.Text = "namespace";
            obj371.MChildren.Add(obj372);
            obj371.GrammarRule = obj341;
            obj371.Annotations.Add(obj372);
            obj372.MChildren.Add(obj373);
            obj372.Arguments.Add(obj373);
            obj372.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Binding.NameBinder);
            obj373.MChildren.Add(obj374);
            obj373.NamedParameter.Add(__MetaSymbol.FromValue("qualifierProperty"));
            obj373.Parameter = "qualifierProperty";
            obj373.ParameterType = typeof(global::MetaDslx.Modeling.ModelProperty);
            obj373.Value = obj374;
            obj374.Value = obj66;
            obj375.Text = ";";
            obj376.MChildren.Add(obj377);
            obj376.Multiplicity = ;
            obj376.Alternatives.Add(obj377);
            obj377.MChildren.Add(obj378);
            obj377.MChildren.Add(obj379);
            obj377.MChildren.Add(obj380);
            obj377.Elements.Add(obj378);
            obj377.Elements.Add(obj379);
            obj377.Elements.Add(obj380);
            obj377.ReturnType = default;
            obj378.MChildren.Add(obj381);
            obj378.Value = obj381;
            obj379.MChildren.Add(obj382);
            obj379.Value = obj382;
            obj380.MChildren.Add(obj383);
            obj380.Value = obj383;
            obj381.Text = "using";
            obj382.GrammarRule = obj305;
            obj383.Text = ";";
            obj384.MChildren.Add(obj385);
            obj384.MChildren.Add(obj386);
            obj384.Alternatives.Add(obj386);
            obj384.Annotations.Add(obj385);
            obj385.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Binding.ScopeBinder);
            obj386.MChildren.Add(obj387);
            obj386.Elements.Add(obj387);
            obj386.ReturnType = default;
            obj387.MChildren.Add(obj388);
            obj387.Assignment = ;
            obj387.Name = "declarations";
            obj387.Value = obj388;
            obj388.GrammarRule = obj306;
            obj390.MChildren.Add(obj392);
            obj390.MChildren.Add(obj393);
            obj390.Elements.Add(obj392);
            obj390.Elements.Add(obj393);
            obj390.ReturnType = __MetaType.FromModelObject();
            obj390.Name = "UsingMetaModel";
            obj391.MChildren.Add(obj396);
            obj391.Elements.Add(obj396);
            obj391.ReturnType = __MetaType.FromModelObject();
            obj392.MChildren.Add(obj394);
            obj392.Value = obj394;
            obj393.MChildren.Add(obj395);
            obj393.Assignment = ;
            obj393.Name = "metaModelSymbols";
            obj393.Value = obj395;
            obj394.Text = "metamodel";
            obj395.GrammarRule = obj341;
            obj395.ReferencedTypes.Add(typeof(global::MetaDslx.Modeling.MetaModel));
            obj395.ReferencedTypes.Add(typeof(global::MetaDslx.Languages.MetaModel.Model.MetaModel));
            obj396.MChildren.Add(obj397);
            obj396.Assignment = ;
            obj396.Name = "namespaces";
            obj396.Value = obj397;
            obj397.GrammarRule = obj341;
            obj397.ReferencedTypes.Add(__MetaType.FromModelObject());
            obj398.MChildren.Add(obj399);
            obj398.MChildren.Add(obj400);
            obj398.MChildren.Add(obj401);
            obj398.MChildren.Add(obj402);
            obj398.MChildren.Add(obj403);
            obj398.Elements.Add(obj399);
            obj398.Elements.Add(obj400);
            obj398.Elements.Add(obj401);
            obj398.Elements.Add(obj402);
            obj398.Elements.Add(obj403);
            obj398.ReturnType = __MetaType.FromModelObject(obj10);
            obj399.MChildren.Add(obj404);
            obj399.Value = obj404;
            obj400.MChildren.Add(obj405);
            obj400.Value = obj405;
            obj401.MChildren.Add(obj406);
            obj401.Value = obj406;
            obj402.MChildren.Add(obj429);
            obj402.Value = obj429;
            obj403.MChildren.Add(obj430);
            obj403.Assignment = ;
            obj403.Name = "grammar";
            obj403.Value = obj430;
            obj404.Text = "language";
            obj405.GrammarRule = obj340;
            obj406.MChildren.Add(obj407);
            obj406.Multiplicity = ;
            obj406.Alternatives.Add(obj407);
            obj407.MChildren.Add(obj408);
            obj407.MChildren.Add(obj409);
            obj407.MChildren.Add(obj410);
            obj407.Elements.Add(obj408);
            obj407.Elements.Add(obj409);
            obj407.Elements.Add(obj410);
            obj407.ReturnType = default;
            obj408.MChildren.Add(obj411);
            obj408.Value = obj411;
            obj409.MChildren.Add(obj412);
            obj409.Assignment = ;
            obj409.Name = "baseLanguages";
            obj409.Value = obj412;
            obj410.MChildren.Add(obj418);
            obj410.Value = obj418;
            obj411.Text = ":";
            obj412.MChildren.Add(obj413);
            obj412.GrammarRule = obj341;
            obj412.Annotations.Add(obj413);
            obj413.MChildren.Add(obj414);
            obj413.MChildren.Add(obj415);
            obj413.Arguments.Add(obj414);
            obj413.Arguments.Add(obj415);
            obj413.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Binding.UseBinder);
            obj414.MChildren.Add(obj416);
            obj414.NamedParameter.Add(__MetaSymbol.FromValue("types"));
            obj414.Parameter = "types";
            obj414.ParameterType = typeof(global::System.Collections.Immutable.ImmutableArray);
            obj414.Value = obj416;
            obj415.MChildren.Add(obj417);
            obj415.NamedParameter.Add(__MetaSymbol.FromValue("suffixes"));
            obj415.Parameter = "suffixes";
            obj415.ParameterType = typeof(global::System.Collections.Immutable.ImmutableArray);
            obj415.Value = obj417;
            obj416.Value = __MetaSymbol.FromValue("Language");
            obj417.Value = __MetaSymbol.FromValue("Language");
            obj418.MChildren.Add(obj419);
            obj418.Multiplicity = ;
            obj418.Alternatives.Add(obj419);
            obj419.MChildren.Add(obj420);
            obj419.MChildren.Add(obj421);
            obj419.Elements.Add(obj420);
            obj419.Elements.Add(obj421);
            obj419.ReturnType = default;
            obj420.MChildren.Add(obj422);
            obj420.Value = obj422;
            obj421.MChildren.Add(obj423);
            obj421.Assignment = ;
            obj421.Name = "baseLanguages";
            obj421.Value = obj423;
            obj422.Text = ",";
            obj423.MChildren.Add(obj424);
            obj423.GrammarRule = obj341;
            obj423.Annotations.Add(obj424);
            obj424.MChildren.Add(obj425);
            obj424.MChildren.Add(obj426);
            obj424.Arguments.Add(obj425);
            obj424.Arguments.Add(obj426);
            obj424.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Binding.UseBinder);
            obj425.MChildren.Add(obj427);
            obj425.NamedParameter.Add(__MetaSymbol.FromValue("types"));
            obj425.Parameter = "types";
            obj425.ParameterType = typeof(global::System.Collections.Immutable.ImmutableArray);
            obj425.Value = obj427;
            obj426.MChildren.Add(obj428);
            obj426.NamedParameter.Add(__MetaSymbol.FromValue("suffixes"));
            obj426.Parameter = "suffixes";
            obj426.ParameterType = typeof(global::System.Collections.Immutable.ImmutableArray);
            obj426.Value = obj428;
            obj427.Value = __MetaSymbol.FromValue("Language");
            obj428.Value = __MetaSymbol.FromValue("Language");
            obj429.Text = ";";
            obj430.GrammarRule = obj307;
            obj431.MChildren.Add(obj432);
            obj431.Elements.Add(obj432);
            obj431.ReturnType = __MetaType.FromModelObject(obj11);
            obj432.MChildren.Add(obj433);
            obj432.Value = obj433;
            obj433.MChildren.Add(obj434);
            obj433.MChildren.Add(obj435);
            obj433.Alternatives.Add(obj435);
            obj433.Annotations.Add(obj434);
            obj434.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Binding.ScopeBinder);
            obj435.MChildren.Add(obj436);
            obj435.Elements.Add(obj436);
            obj435.ReturnType = default;
            obj436.MChildren.Add(obj437);
            obj436.Assignment = ;
            obj436.Name = "grammarRules";
            obj436.Value = obj437;
            obj437.GrammarRule = obj308;
            obj437.Multiplicity = ;
            obj438.MChildren.Add(obj440);
            obj438.Elements.Add(obj440);
            obj439.MChildren.Add(obj442);
            obj439.Elements.Add(obj442);
            obj440.MChildren.Add(obj441);
            obj440.Value = obj441;
            obj441.GrammarRule = obj309;
            obj442.MChildren.Add(obj443);
            obj442.Value = obj443;
            obj443.GrammarRule = obj318;
            obj444.MChildren.Add(obj445);
            obj444.MChildren.Add(obj446);
            obj444.MChildren.Add(obj447);
            obj444.MChildren.Add(obj448);
            obj444.MChildren.Add(obj449);
            obj444.MChildren.Add(obj450);
            obj444.Elements.Add(obj445);
            obj444.Elements.Add(obj446);
            obj444.Elements.Add(obj447);
            obj444.Elements.Add(obj448);
            obj444.Elements.Add(obj449);
            obj444.Elements.Add(obj450);
            obj444.ReturnType = __MetaType.FromModelObject(obj35);
            obj445.MChildren.Add(obj451);
            obj445.Assignment = ;
            obj445.Name = "annotations";
            obj445.Value = obj451;
            obj446.MChildren.Add(obj452);
            obj446.Value = obj452;
            obj447.MChildren.Add(obj464);
            obj447.Value = obj464;
            obj448.MChildren.Add(obj465);
            obj448.Assignment = ;
            obj448.Name = "alternatives";
            obj448.Value = obj465;
            obj449.MChildren.Add(obj466);
            obj449.Value = obj466;
            obj450.MChildren.Add(obj472);
            obj450.Value = obj472;
            obj451.GrammarRule = obj332;
            obj451.Multiplicity = ;
            obj452.MChildren.Add(obj453);
            obj452.MChildren.Add(obj454);
            obj452.MChildren.Add(obj455);
            obj452.Alternatives.Add(obj454);
            obj452.Alternatives.Add(obj455);
            obj452.Annotations.Add(obj453);
            obj453.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Binding.NameBinder);
            obj454.MChildren.Add(obj456);
            obj454.Elements.Add(obj456);
            obj454.ReturnType = default;
            obj455.MChildren.Add(obj458);
            obj455.MChildren.Add(obj459);
            obj455.MChildren.Add(obj460);
            obj455.Elements.Add(obj458);
            obj455.Elements.Add(obj459);
            obj455.Elements.Add(obj460);
            obj455.ReturnType = default;
            obj456.MChildren.Add(obj457);
            obj456.Assignment = ;
            obj456.Name = "returnType";
            obj456.Value = obj457;
            obj457.GrammarRule = obj337;
            obj458.MChildren.Add(obj461);
            obj458.Value = obj461;
            obj459.MChildren.Add(obj462);
            obj459.Value = obj462;
            obj460.MChildren.Add(obj463);
            obj460.Assignment = ;
            obj460.Name = "returnType";
            obj460.Value = obj463;
            obj461.GrammarRule = obj342;
            obj462.Text = "returns";
            obj463.GrammarRule = obj338;
            obj464.Text = ":";
            obj465.GrammarRule = obj310;
            obj466.MChildren.Add(obj467);
            obj466.Multiplicity = ;
            obj466.Alternatives.Add(obj467);
            obj467.MChildren.Add(obj468);
            obj467.MChildren.Add(obj469);
            obj467.Elements.Add(obj468);
            obj467.Elements.Add(obj469);
            obj467.ReturnType = default;
            obj468.MChildren.Add(obj470);
            obj468.Value = obj470;
            obj469.MChildren.Add(obj471);
            obj469.Assignment = ;
            obj469.Name = "alternatives";
            obj469.Value = obj471;
            obj470.Text = "|";
            obj471.GrammarRule = obj310;
            obj472.Text = ";";
            obj473.MChildren.Add(obj474);
            obj473.MChildren.Add(obj475);
            obj473.MChildren.Add(obj476);
            obj473.Elements.Add(obj474);
            obj473.Elements.Add(obj475);
            obj473.Elements.Add(obj476);
            obj473.ReturnType = __MetaType.FromModelObject(obj36);
            obj474.MChildren.Add(obj477);
            obj474.Value = obj477;
            obj475.MChildren.Add(obj498);
            obj475.Assignment = ;
            obj475.Name = "elements";
            obj475.Value = obj498;
            obj476.MChildren.Add(obj499);
            obj476.Value = obj499;
            obj477.MChildren.Add(obj478);
            obj477.Multiplicity = ;
            obj477.Alternatives.Add(obj478);
            obj478.MChildren.Add(obj479);
            obj478.MChildren.Add(obj480);
            obj478.MChildren.Add(obj481);
            obj478.MChildren.Add(obj482);
            obj478.Elements.Add(obj479);
            obj478.Elements.Add(obj480);
            obj478.Elements.Add(obj481);
            obj478.Elements.Add(obj482);
            obj478.ReturnType = default;
            obj479.MChildren.Add(obj483);
            obj479.Assignment = ;
            obj479.Name = "annotations";
            obj479.Value = obj483;
            obj480.MChildren.Add(obj484);
            obj480.Value = obj484;
            obj481.MChildren.Add(obj485);
            obj481.Value = obj485;
            obj482.MChildren.Add(obj497);
            obj482.Value = obj497;
            obj483.GrammarRule = obj332;
            obj483.Multiplicity = ;
            obj484.Text = "alt";
            obj485.MChildren.Add(obj486);
            obj485.MChildren.Add(obj487);
            obj485.MChildren.Add(obj488);
            obj485.Alternatives.Add(obj487);
            obj485.Alternatives.Add(obj488);
            obj485.Annotations.Add(obj486);
            obj486.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Binding.NameBinder);
            obj487.MChildren.Add(obj489);
            obj487.Elements.Add(obj489);
            obj487.ReturnType = default;
            obj488.MChildren.Add(obj491);
            obj488.MChildren.Add(obj492);
            obj488.MChildren.Add(obj493);
            obj488.Elements.Add(obj491);
            obj488.Elements.Add(obj492);
            obj488.Elements.Add(obj493);
            obj488.ReturnType = default;
            obj489.MChildren.Add(obj490);
            obj489.Assignment = ;
            obj489.Name = "returnType";
            obj489.Value = obj490;
            obj490.GrammarRule = obj337;
            obj491.MChildren.Add(obj494);
            obj491.Value = obj494;
            obj492.MChildren.Add(obj495);
            obj492.Value = obj495;
            obj493.MChildren.Add(obj496);
            obj493.Assignment = ;
            obj493.Name = "returnType";
            obj493.Value = obj496;
            obj494.GrammarRule = obj342;
            obj495.Text = "returns";
            obj496.GrammarRule = obj338;
            obj497.Text = ":";
            obj498.GrammarRule = obj311;
            obj498.Multiplicity = ;
            obj499.MChildren.Add(obj500);
            obj499.Multiplicity = ;
            obj499.Alternatives.Add(obj500);
            obj500.MChildren.Add(obj501);
            obj500.MChildren.Add(obj502);
            obj500.Elements.Add(obj501);
            obj500.Elements.Add(obj502);
            obj500.ReturnType = default;
            obj501.MChildren.Add(obj503);
            obj501.Value = obj503;
            obj502.MChildren.Add(obj504);
            obj502.Assignment = ;
            obj502.Name = "returnValue";
            obj502.Value = obj504;
            obj503.Text = "=>";
            obj504.GrammarRule = obj329;
            obj505.MChildren.Add(obj506);
            obj505.MChildren.Add(obj507);
            obj505.Elements.Add(obj506);
            obj505.Elements.Add(obj507);
            obj505.ReturnType = __MetaType.FromModelObject(obj38);
            obj506.MChildren.Add(obj508);
            obj506.Value = obj508;
            obj507.MChildren.Add(obj516);
            obj507.Assignment = ;
            obj507.Name = "value";
            obj507.Value = obj516;
            obj508.MChildren.Add(obj509);
            obj508.Multiplicity = ;
            obj508.Alternatives.Add(obj509);
            obj509.MChildren.Add(obj510);
            obj509.MChildren.Add(obj511);
            obj509.MChildren.Add(obj512);
            obj509.Elements.Add(obj510);
            obj509.Elements.Add(obj511);
            obj509.Elements.Add(obj512);
            obj509.ReturnType = default;
            obj510.MChildren.Add(obj513);
            obj510.Assignment = ;
            obj510.Name = "annotations";
            obj510.Value = obj513;
            obj511.MChildren.Add(obj514);
            obj511.Value = obj514;
            obj512.MChildren.Add(obj515);
            obj512.Assignment = ;
            obj512.Name = "assignment";
            obj512.Value = obj515;
            obj513.GrammarRule = obj332;
            obj513.Multiplicity = ;
            obj514.GrammarRule = obj340;
            obj515.GrammarRule = obj335;
            obj516.GrammarRule = obj312;
            obj517.MChildren.Add(obj521);
            obj517.Elements.Add(obj521);
            obj518.MChildren.Add(obj523);
            obj518.Elements.Add(obj523);
            obj519.MChildren.Add(obj525);
            obj519.Elements.Add(obj525);
            obj520.MChildren.Add(obj527);
            obj520.Elements.Add(obj527);
            obj521.MChildren.Add(obj522);
            obj521.Value = obj522;
            obj522.GrammarRule = obj313;
            obj523.MChildren.Add(obj524);
            obj523.Value = obj524;
            obj524.GrammarRule = obj316;
            obj525.MChildren.Add(obj526);
            obj525.Value = obj526;
            obj526.GrammarRule = obj317;
            obj527.MChildren.Add(obj528);
            obj527.Value = obj528;
            obj528.GrammarRule = obj315;
            obj529.MChildren.Add(obj530);
            obj529.MChildren.Add(obj531);
            obj529.MChildren.Add(obj532);
            obj529.MChildren.Add(obj533);
            obj529.MChildren.Add(obj534);
            obj529.MChildren.Add(obj535);
            obj529.Elements.Add(obj530);
            obj529.Elements.Add(obj531);
            obj529.Elements.Add(obj532);
            obj529.Elements.Add(obj533);
            obj529.Elements.Add(obj534);
            obj529.Elements.Add(obj535);
            obj529.ReturnType = __MetaType.FromModelObject(obj44);
            obj530.MChildren.Add(obj536);
            obj530.Assignment = ;
            obj530.Name = "annotations";
            obj530.Value = obj536;
            obj531.MChildren.Add(obj537);
            obj531.Value = obj537;
            obj532.MChildren.Add(obj538);
            obj532.Assignment = ;
            obj532.Name = "alternatives";
            obj532.Value = obj538;
            obj533.MChildren.Add(obj539);
            obj533.Value = obj539;
            obj534.MChildren.Add(obj545);
            obj534.Value = obj545;
            obj535.MChildren.Add(obj546);
            obj535.Assignment = ;
            obj535.Name = "multiplicity";
            obj535.Value = obj546;
            obj536.GrammarRule = obj332;
            obj536.Multiplicity = ;
            obj537.Text = "(";
            obj538.GrammarRule = obj314;
            obj539.MChildren.Add(obj540);
            obj539.Multiplicity = ;
            obj539.Alternatives.Add(obj540);
            obj540.MChildren.Add(obj541);
            obj540.MChildren.Add(obj542);
            obj540.Elements.Add(obj541);
            obj540.Elements.Add(obj542);
            obj540.ReturnType = default;
            obj541.MChildren.Add(obj543);
            obj541.Value = obj543;
            obj542.MChildren.Add(obj544);
            obj542.Assignment = ;
            obj542.Name = "alternatives";
            obj542.Value = obj544;
            obj543.Text = "|";
            obj544.GrammarRule = obj314;
            obj545.Text = ")";
            obj546.GrammarRule = obj336;
            obj546.Multiplicity = ;
            obj547.MChildren.Add(obj548);
            obj547.MChildren.Add(obj549);
            obj547.Elements.Add(obj548);
            obj547.Elements.Add(obj549);
            obj547.ReturnType = __MetaType.FromModelObject(obj36);
            obj548.MChildren.Add(obj550);
            obj548.Assignment = ;
            obj548.Name = "elements";
            obj548.Value = obj550;
            obj549.MChildren.Add(obj551);
            obj549.Value = obj551;
            obj550.GrammarRule = obj311;
            obj550.Multiplicity = ;
            obj551.MChildren.Add(obj552);
            obj551.Multiplicity = ;
            obj551.Alternatives.Add(obj552);
            obj552.MChildren.Add(obj553);
            obj552.MChildren.Add(obj554);
            obj552.Elements.Add(obj553);
            obj552.Elements.Add(obj554);
            obj552.ReturnType = default;
            obj553.MChildren.Add(obj555);
            obj553.Value = obj555;
            obj554.MChildren.Add(obj556);
            obj554.Assignment = ;
            obj554.Name = "returnValue";
            obj554.Value = obj556;
            obj555.Text = "=>";
            obj556.GrammarRule = obj329;
            obj557.MChildren.Add(obj560);
            obj557.MChildren.Add(obj561);
            obj557.MChildren.Add(obj562);
            obj557.Elements.Add(obj560);
            obj557.Elements.Add(obj561);
            obj557.Elements.Add(obj562);
            obj557.ReturnType = __MetaType.FromModelObject(obj40);
            obj558.MChildren.Add(obj566);
            obj558.MChildren.Add(obj567);
            obj558.MChildren.Add(obj568);
            obj558.MChildren.Add(obj569);
            obj558.Elements.Add(obj566);
            obj558.Elements.Add(obj567);
            obj558.Elements.Add(obj568);
            obj558.Elements.Add(obj569);
            obj558.ReturnType = __MetaType.FromModelObject(obj40);
            obj559.MChildren.Add(obj574);
            obj559.MChildren.Add(obj575);
            obj559.MChildren.Add(obj576);
            obj559.MChildren.Add(obj577);
            obj559.MChildren.Add(obj578);
            obj559.MChildren.Add(obj579);
            obj559.MChildren.Add(obj580);
            obj559.Elements.Add(obj574);
            obj559.Elements.Add(obj575);
            obj559.Elements.Add(obj576);
            obj559.Elements.Add(obj577);
            obj559.Elements.Add(obj578);
            obj559.Elements.Add(obj579);
            obj559.Elements.Add(obj580);
            obj559.ReturnType = __MetaType.FromModelObject(obj40);
            obj560.MChildren.Add(obj563);
            obj560.Assignment = ;
            obj560.Name = "annotations";
            obj560.Value = obj563;
            obj561.MChildren.Add(obj564);
            obj561.Assignment = ;
            obj561.Name = "grammarRule";
            obj561.Value = obj564;
            obj562.MChildren.Add(obj565);
            obj562.Assignment = ;
            obj562.Name = "multiplicity";
            obj562.Value = obj565;
            obj563.GrammarRule = obj332;
            obj563.Multiplicity = ;
            obj564.ReferencedTypes.Add(__MetaType.FromModelObject(obj19));
            obj565.GrammarRule = obj336;
            obj565.Multiplicity = ;
            obj566.MChildren.Add(obj570);
            obj566.Assignment = ;
            obj566.Name = "annotations";
            obj566.Value = obj570;
            obj567.MChildren.Add(obj571);
            obj567.Value = obj571;
            obj568.MChildren.Add(obj572);
            obj568.Assignment = ;
            obj568.Name = "referencedTypes";
            obj568.Value = obj572;
            obj569.MChildren.Add(obj573);
            obj569.Assignment = ;
            obj569.Name = "multiplicity";
            obj569.Value = obj573;
            obj570.GrammarRule = obj332;
            obj570.Multiplicity = ;
            obj571.Text = "#";
            obj572.GrammarRule = obj338;
            obj573.GrammarRule = obj336;
            obj573.Multiplicity = ;
            obj574.MChildren.Add(obj581);
            obj574.Assignment = ;
            obj574.Name = "annotations";
            obj574.Value = obj581;
            obj575.MChildren.Add(obj582);
            obj575.Value = obj582;
            obj576.MChildren.Add(obj583);
            obj576.Assignment = ;
            obj576.Name = "referencedTypes";
            obj576.Value = obj583;
            obj577.MChildren.Add(obj584);
            obj577.Value = obj584;
            obj578.MChildren.Add(obj590);
            obj578.Value = obj590;
            obj579.MChildren.Add(obj596);
            obj579.Value = obj596;
            obj580.MChildren.Add(obj597);
            obj580.Assignment = ;
            obj580.Name = "multiplicity";
            obj580.Value = obj597;
            obj581.GrammarRule = obj332;
            obj581.Multiplicity = ;
            obj582.Text = "#{";
            obj583.GrammarRule = obj338;
            obj584.MChildren.Add(obj585);
            obj584.Multiplicity = ;
            obj584.Alternatives.Add(obj585);
            obj585.MChildren.Add(obj586);
            obj585.MChildren.Add(obj587);
            obj585.Elements.Add(obj586);
            obj585.Elements.Add(obj587);
            obj585.ReturnType = default;
            obj586.MChildren.Add(obj588);
            obj586.Value = obj588;
            obj587.MChildren.Add(obj589);
            obj587.Assignment = ;
            obj587.Name = "referencedTypes";
            obj587.Value = obj589;
            obj588.Text = ",";
            obj589.GrammarRule = obj338;
            obj590.MChildren.Add(obj591);
            obj590.Multiplicity = ;
            obj590.Alternatives.Add(obj591);
            obj591.MChildren.Add(obj592);
            obj591.MChildren.Add(obj593);
            obj591.Elements.Add(obj592);
            obj591.Elements.Add(obj593);
            obj591.ReturnType = default;
            obj592.MChildren.Add(obj594);
            obj592.Value = obj594;
            obj593.MChildren.Add(obj595);
            obj593.Assignment = ;
            obj593.Name = "grammarRule";
            obj593.Value = obj595;
            obj594.Text = "|";
            obj595.ReferencedTypes.Add(__MetaType.FromModelObject(obj19));
            obj596.Text = "}";
            obj597.GrammarRule = obj336;
            obj597.Multiplicity = ;
            obj598.MChildren.Add(obj599);
            obj598.Elements.Add(obj599);
            obj598.ReturnType = __MetaType.FromModelObject(obj41);
            obj599.MChildren.Add(obj600);
            obj599.Value = obj600;
            obj600.Text = "eof";
            obj601.MChildren.Add(obj602);
            obj601.MChildren.Add(obj603);
            obj601.MChildren.Add(obj604);
            obj601.Elements.Add(obj602);
            obj601.Elements.Add(obj603);
            obj601.Elements.Add(obj604);
            obj601.ReturnType = __MetaType.FromModelObject(obj42);
            obj602.MChildren.Add(obj605);
            obj602.Assignment = ;
            obj602.Name = "annotations";
            obj602.Value = obj605;
            obj603.MChildren.Add(obj606);
            obj603.Assignment = ;
            obj603.Name = "text";
            obj603.Value = obj606;
            obj604.MChildren.Add(obj607);
            obj604.Assignment = ;
            obj604.Name = "multiplicity";
            obj604.Value = obj607;
            obj605.GrammarRule = obj332;
            obj605.Multiplicity = ;
            obj606.GrammarRule = obj348;
            obj607.GrammarRule = obj336;
            obj607.Multiplicity = ;
            obj608.MChildren.Add(obj610);
            obj608.Elements.Add(obj610);
            obj609.MChildren.Add(obj612);
            obj609.Elements.Add(obj612);
            obj610.MChildren.Add(obj611);
            obj610.Value = obj611;
            obj611.GrammarRule = obj319;
            obj612.MChildren.Add(obj613);
            obj612.Value = obj613;
            obj613.GrammarRule = obj320;
            obj614.MChildren.Add(obj615);
            obj614.MChildren.Add(obj616);
            obj614.MChildren.Add(obj617);
            obj614.MChildren.Add(obj618);
            obj614.MChildren.Add(obj619);
            obj614.MChildren.Add(obj620);
            obj614.Elements.Add(obj615);
            obj614.Elements.Add(obj616);
            obj614.Elements.Add(obj617);
            obj614.Elements.Add(obj618);
            obj614.Elements.Add(obj619);
            obj614.Elements.Add(obj620);
            obj614.ReturnType = default;
            obj615.MChildren.Add(obj621);
            obj615.Assignment = ;
            obj615.Name = "annotations";
            obj615.Value = obj621;
            obj616.MChildren.Add(obj622);
            obj616.Value = obj622;
            obj617.MChildren.Add(obj640);
            obj617.Value = obj640;
            obj618.MChildren.Add(obj641);
            obj618.Assignment = ;
            obj618.Name = "alternatives";
            obj618.Value = obj641;
            obj619.MChildren.Add(obj642);
            obj619.Value = obj642;
            obj620.MChildren.Add(obj648);
            obj620.Value = obj648;
            obj621.GrammarRule = obj333;
            obj621.Multiplicity = ;
            obj622.MChildren.Add(obj623);
            obj622.MChildren.Add(obj624);
            obj622.Alternatives.Add(obj623);
            obj622.Alternatives.Add(obj624);
            obj623.MChildren.Add(obj625);
            obj623.MChildren.Add(obj626);
            obj623.MChildren.Add(obj627);
            obj623.Elements.Add(obj625);
            obj623.Elements.Add(obj626);
            obj623.Elements.Add(obj627);
            obj623.ReturnType = default;
            obj624.MChildren.Add(obj636);
            obj624.MChildren.Add(obj637);
            obj624.Elements.Add(obj636);
            obj624.Elements.Add(obj637);
            obj624.ReturnType = default;
            obj625.MChildren.Add(obj628);
            obj625.Value = obj628;
            obj626.MChildren.Add(obj629);
            obj626.Value = obj629;
            obj627.MChildren.Add(obj630);
            obj627.Value = obj630;
            obj628.Text = "token";
            obj629.GrammarRule = obj340;
            obj630.MChildren.Add(obj631);
            obj630.Multiplicity = ;
            obj630.Alternatives.Add(obj631);
            obj631.MChildren.Add(obj632);
            obj631.MChildren.Add(obj633);
            obj631.Elements.Add(obj632);
            obj631.Elements.Add(obj633);
            obj631.ReturnType = default;
            obj632.MChildren.Add(obj634);
            obj632.Value = obj634;
            obj633.MChildren.Add(obj635);
            obj633.Assignment = ;
            obj633.Name = "returnType";
            obj633.Value = obj635;
            obj634.Text = "returns";
            obj635.GrammarRule = obj338;
            obj636.MChildren.Add(obj638);
            obj636.Assignment = ;
            obj636.Name = "isTrivia";
            obj636.Value = obj638;
            obj637.MChildren.Add(obj639);
            obj637.Value = obj639;
            obj638.Text = "hidden";
            obj639.GrammarRule = obj340;
            obj640.Text = ":";
            obj641.GrammarRule = obj321;
            obj642.MChildren.Add(obj643);
            obj642.Multiplicity = ;
            obj642.Alternatives.Add(obj643);
            obj643.MChildren.Add(obj644);
            obj643.MChildren.Add(obj645);
            obj643.Elements.Add(obj644);
            obj643.Elements.Add(obj645);
            obj643.ReturnType = default;
            obj644.MChildren.Add(obj646);
            obj644.Value = obj646;
            obj645.MChildren.Add(obj647);
            obj645.Assignment = ;
            obj645.Name = "alternatives";
            obj645.Value = obj647;
            obj646.Text = "|";
            obj647.GrammarRule = obj321;
            obj648.Text = ";";
            obj649.MChildren.Add(obj650);
            obj649.MChildren.Add(obj651);
            obj649.MChildren.Add(obj652);
            obj649.MChildren.Add(obj653);
            obj649.MChildren.Add(obj654);
            obj649.MChildren.Add(obj655);
            obj649.Elements.Add(obj650);
            obj649.Elements.Add(obj651);
            obj649.Elements.Add(obj652);
            obj649.Elements.Add(obj653);
            obj649.Elements.Add(obj654);
            obj649.Elements.Add(obj655);
            obj649.ReturnType = __MetaType.FromModelObject(obj22);
            obj650.MChildren.Add(obj656);
            obj650.Value = obj656;
            obj651.MChildren.Add(obj657);
            obj651.Value = obj657;
            obj652.MChildren.Add(obj658);
            obj652.Value = obj658;
            obj653.MChildren.Add(obj659);
            obj653.Assignment = ;
            obj653.Name = "alternatives";
            obj653.Value = obj659;
            obj654.MChildren.Add(obj660);
            obj654.Value = obj660;
            obj655.MChildren.Add(obj666);
            obj655.Value = obj666;
            obj656.Text = "fragment";
            obj657.GrammarRule = obj340;
            obj658.Text = ":";
            obj659.GrammarRule = obj321;
            obj660.MChildren.Add(obj661);
            obj660.Multiplicity = ;
            obj660.Alternatives.Add(obj661);
            obj661.MChildren.Add(obj662);
            obj661.MChildren.Add(obj663);
            obj661.Elements.Add(obj662);
            obj661.Elements.Add(obj663);
            obj661.ReturnType = default;
            obj662.MChildren.Add(obj664);
            obj662.Value = obj664;
            obj663.MChildren.Add(obj665);
            obj663.Assignment = ;
            obj663.Name = "alternatives";
            obj663.Value = obj665;
            obj664.Text = "|";
            obj665.GrammarRule = obj321;
            obj666.Text = ";";
            obj667.MChildren.Add(obj668);
            obj667.Elements.Add(obj668);
            obj667.ReturnType = __MetaType.FromModelObject(obj23);
            obj668.MChildren.Add(obj669);
            obj668.Assignment = ;
            obj668.Name = "elements";
            obj668.Value = obj669;
            obj669.GrammarRule = obj322;
            obj669.Multiplicity = ;
            obj670.MChildren.Add(obj671);
            obj670.MChildren.Add(obj672);
            obj670.MChildren.Add(obj673);
            obj670.Elements.Add(obj671);
            obj670.Elements.Add(obj672);
            obj670.Elements.Add(obj673);
            obj670.ReturnType = __MetaType.FromModelObject(obj24);
            obj671.MChildren.Add(obj674);
            obj671.Assignment = ;
            obj671.Name = "isNegated";
            obj671.Value = obj674;
            obj672.MChildren.Add(obj675);
            obj672.Assignment = ;
            obj672.Name = "value";
            obj672.Value = obj675;
            obj673.MChildren.Add(obj676);
            obj673.Assignment = ;
            obj673.Name = "multiplicity";
            obj673.Value = obj676;
            obj674.Text = "~";
            obj674.Multiplicity = ;
            obj675.GrammarRule = obj323;
            obj676.GrammarRule = obj336;
            obj676.Multiplicity = ;
            obj677.MChildren.Add(obj682);
            obj677.Elements.Add(obj682);
            obj678.MChildren.Add(obj684);
            obj678.Elements.Add(obj684);
            obj679.MChildren.Add(obj686);
            obj679.Elements.Add(obj686);
            obj680.MChildren.Add(obj688);
            obj680.Elements.Add(obj688);
            obj681.MChildren.Add(obj690);
            obj681.Elements.Add(obj690);
            obj682.MChildren.Add(obj683);
            obj682.Value = obj683;
            obj683.GrammarRule = obj328;
            obj684.MChildren.Add(obj685);
            obj684.Value = obj685;
            obj685.GrammarRule = obj325;
            obj686.MChildren.Add(obj687);
            obj686.Value = obj687;
            obj687.GrammarRule = obj326;
            obj688.MChildren.Add(obj689);
            obj688.Value = obj689;
            obj689.GrammarRule = obj327;
            obj690.MChildren.Add(obj691);
            obj690.Value = obj691;
            obj691.GrammarRule = obj324;
            obj692.MChildren.Add(obj693);
            obj692.Elements.Add(obj693);
            obj692.ReturnType = __MetaType.FromModelObject(obj26);
            obj693.MChildren.Add(obj694);
            obj693.Assignment = ;
            obj693.Name = "rule";
            obj693.Value = obj694;
            obj694.ReferencedTypes.Add(__MetaType.FromModelObject(obj20));
            obj695.MChildren.Add(obj696);
            obj695.Elements.Add(obj696);
            obj695.ReturnType = __MetaType.FromModelObject(obj27);
            obj696.MChildren.Add(obj697);
            obj696.Assignment = ;
            obj696.Name = "text";
            obj696.Value = obj697;
            obj697.GrammarRule = obj348;
            obj698.MChildren.Add(obj699);
            obj698.Elements.Add(obj699);
            obj698.ReturnType = __MetaType.FromModelObject(obj28);
            obj699.MChildren.Add(obj700);
            obj699.Value = obj700;
            obj700.Text = ".";
            obj701.MChildren.Add(obj702);
            obj701.MChildren.Add(obj703);
            obj701.MChildren.Add(obj704);
            obj701.Elements.Add(obj702);
            obj701.Elements.Add(obj703);
            obj701.Elements.Add(obj704);
            obj701.ReturnType = __MetaType.FromModelObject(obj29);
            obj702.MChildren.Add(obj705);
            obj702.Assignment = ;
            obj702.Name = "startChar";
            obj702.Value = obj705;
            obj703.MChildren.Add(obj706);
            obj703.Value = obj706;
            obj704.MChildren.Add(obj707);
            obj704.Assignment = ;
            obj704.Name = "endChar";
            obj704.Value = obj707;
            obj705.GrammarRule = obj348;
            obj706.Text = "..";
            obj707.GrammarRule = obj348;
            obj708.MChildren.Add(obj709);
            obj708.MChildren.Add(obj710);
            obj708.MChildren.Add(obj711);
            obj708.MChildren.Add(obj712);
            obj708.Elements.Add(obj709);
            obj708.Elements.Add(obj710);
            obj708.Elements.Add(obj711);
            obj708.Elements.Add(obj712);
            obj708.ReturnType = __MetaType.FromModelObject(obj34);
            obj709.MChildren.Add(obj713);
            obj709.Value = obj713;
            obj710.MChildren.Add(obj714);
            obj710.Assignment = ;
            obj710.Name = "alternatives";
            obj710.Value = obj714;
            obj711.MChildren.Add(obj715);
            obj711.Value = obj715;
            obj712.MChildren.Add(obj721);
            obj712.Value = obj721;
            obj713.Text = "(";
            obj714.GrammarRule = obj321;
            obj715.MChildren.Add(obj716);
            obj715.Multiplicity = ;
            obj715.Alternatives.Add(obj716);
            obj716.MChildren.Add(obj717);
            obj716.MChildren.Add(obj718);
            obj716.Elements.Add(obj717);
            obj716.Elements.Add(obj718);
            obj716.ReturnType = default;
            obj717.MChildren.Add(obj719);
            obj717.Value = obj719;
            obj718.MChildren.Add(obj720);
            obj718.Assignment = ;
            obj718.Name = "alternatives";
            obj718.Value = obj720;
            obj719.Text = "|";
            obj720.GrammarRule = obj321;
            obj721.Text = ")";
            obj722.MChildren.Add(obj724);
            obj722.Elements.Add(obj724);
            obj723.MChildren.Add(obj726);
            obj723.Elements.Add(obj726);
            obj724.MChildren.Add(obj725);
            obj724.Value = obj725;
            obj725.GrammarRule = obj330;
            obj726.MChildren.Add(obj727);
            obj726.Value = obj727;
            obj727.GrammarRule = obj331;
            obj728.MChildren.Add(obj730);
            obj728.Elements.Add(obj730);
            obj728.ReturnType = default;
            obj729.MChildren.Add(obj754);
            obj729.Elements.Add(obj754);
            obj729.ReturnType = default;
            obj730.MChildren.Add(obj731);
            obj730.Assignment = ;
            obj730.Name = "value";
            obj730.Value = obj731;
            obj731.MChildren.Add(obj732);
            obj731.MChildren.Add(obj733);
            obj731.MChildren.Add(obj734);
            obj731.MChildren.Add(obj735);
            obj731.MChildren.Add(obj736);
            obj731.MChildren.Add(obj737);
            obj731.MChildren.Add(obj738);
            obj731.MChildren.Add(obj739);
            obj731.Alternatives.Add(obj733);
            obj731.Alternatives.Add(obj734);
            obj731.Alternatives.Add(obj735);
            obj731.Alternatives.Add(obj736);
            obj731.Alternatives.Add(obj737);
            obj731.Alternatives.Add(obj738);
            obj731.Alternatives.Add(obj739);
            obj731.Annotations.Add(obj732);
            obj732.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Binding.ValueBinder);
            obj733.MChildren.Add(obj740);
            obj733.Elements.Add(obj740);
            obj733.ReturnType = default;
            obj734.MChildren.Add(obj742);
            obj734.Elements.Add(obj742);
            obj734.ReturnType = default;
            obj735.MChildren.Add(obj744);
            obj735.Elements.Add(obj744);
            obj735.ReturnType = default;
            obj736.MChildren.Add(obj746);
            obj736.Elements.Add(obj746);
            obj736.ReturnType = default;
            obj737.MChildren.Add(obj748);
            obj737.Elements.Add(obj748);
            obj737.ReturnType = default;
            obj738.MChildren.Add(obj750);
            obj738.Elements.Add(obj750);
            obj738.ReturnType = default;
            obj739.MChildren.Add(obj752);
            obj739.Elements.Add(obj752);
            obj740.MChildren.Add(obj741);
            obj740.Value = obj741;
            obj741.Text = "null";
            obj742.MChildren.Add(obj743);
            obj742.Value = obj743;
            obj743.Text = "true";
            obj744.MChildren.Add(obj745);
            obj744.Value = obj745;
            obj745.Text = "false";
            obj746.MChildren.Add(obj747);
            obj746.Value = obj747;
            obj747.GrammarRule = obj348;
            obj748.MChildren.Add(obj749);
            obj748.Value = obj749;
            obj749.GrammarRule = obj343;
            obj750.MChildren.Add(obj751);
            obj750.Value = obj751;
            obj751.GrammarRule = obj344;
            obj752.MChildren.Add(obj753);
            obj752.Value = obj753;
            obj753.GrammarRule = obj339;
            obj754.MChildren.Add(obj755);
            obj754.Assignment = ;
            obj754.Name = "value";
            obj754.Value = obj755;
            obj755.MChildren.Add(obj756);
            obj755.GrammarRule = obj341;
            obj755.Annotations.Add(obj756);
            obj756.AttributeClass = typeof(global::MetaDslx.Bootstrap.MetaCompiler3.Symbols.ExpressionValueBinder);
            obj757.MChildren.Add(obj758);
            obj757.MChildren.Add(obj759);
            obj757.MChildren.Add(obj760);
            obj757.Elements.Add(obj758);
            obj757.Elements.Add(obj759);
            obj757.Elements.Add(obj760);
            obj757.ReturnType = __MetaType.FromModelObject(obj47);
            obj758.MChildren.Add(obj761);
            obj758.Value = obj761;
            obj759.MChildren.Add(obj762);
            obj759.Value = obj762;
            obj760.MChildren.Add(obj773);
            obj760.Value = obj773;
            obj761.Text = "{";
            obj762.MChildren.Add(obj763);
            obj762.Multiplicity = ;
            obj762.Alternatives.Add(obj763);
            obj763.MChildren.Add(obj764);
            obj763.MChildren.Add(obj765);
            obj763.Elements.Add(obj764);
            obj763.Elements.Add(obj765);
            obj763.ReturnType = default;
            obj764.MChildren.Add(obj766);
            obj764.Assignment = ;
            obj764.Name = "items";
            obj764.Value = obj766;
            obj765.MChildren.Add(obj767);
            obj765.Value = obj767;
            obj766.GrammarRule = obj330;
            obj767.MChildren.Add(obj768);
            obj767.Multiplicity = ;
            obj767.Alternatives.Add(obj768);
            obj768.MChildren.Add(obj769);
            obj768.MChildren.Add(obj770);
            obj768.Elements.Add(obj769);
            obj768.Elements.Add(obj770);
            obj768.ReturnType = default;
            obj769.MChildren.Add(obj771);
            obj769.Value = obj771;
            obj770.MChildren.Add(obj772);
            obj770.Assignment = ;
            obj770.Name = "items";
            obj770.Value = obj772;
            obj771.Text = ",";
            obj772.GrammarRule = obj330;
            obj773.Text = "}";
            obj774.MChildren.Add(obj775);
            obj774.MChildren.Add(obj776);
            obj774.MChildren.Add(obj777);
            obj774.MChildren.Add(obj778);
            obj774.Elements.Add(obj775);
            obj774.Elements.Add(obj776);
            obj774.Elements.Add(obj777);
            obj774.Elements.Add(obj778);
            obj774.ReturnType = __MetaType.FromModelObject(obj12);
            obj775.MChildren.Add(obj779);
            obj775.Value = obj779;
            obj776.MChildren.Add(obj780);
            obj776.Assignment = ;
            obj776.Name = "attributeClass";
            obj776.Value = obj780;
            obj777.MChildren.Add(obj790);
            obj777.Value = obj790;
            obj778.MChildren.Add(obj805);
            obj778.Value = obj805;
            obj779.Text = "[";
            obj780.MChildren.Add(obj781);
            obj780.GrammarRule = obj341;
            obj780.Annotations.Add(obj781);
            obj781.MChildren.Add(obj782);
            obj781.MChildren.Add(obj783);
            obj781.Arguments.Add(obj782);
            obj781.Arguments.Add(obj783);
            obj781.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Binding.UseBinder);
            obj782.MChildren.Add(obj784);
            obj782.NamedParameter.Add(__MetaSymbol.FromValue("types"));
            obj782.Parameter = "types";
            obj782.ParameterType = typeof(global::System.Collections.Immutable.ImmutableArray);
            obj782.Value = obj784;
            obj783.MChildren.Add(obj787);
            obj783.NamedParameter.Add(__MetaSymbol.FromValue("suffixes"));
            obj783.Parameter = "suffixes";
            obj783.ParameterType = typeof(global::System.Collections.Immutable.ImmutableArray);
            obj783.Value = obj787;
            obj784.MChildren.Add(obj785);
            obj784.MChildren.Add(obj786);
            obj784.Items.Add(obj785);
            obj784.Items.Add(obj786);
            obj785.Value = __MetaSymbol.FromValue("Binder");
            obj786.Value = __MetaSymbol.FromValue("Annotation");
            obj787.MChildren.Add(obj788);
            obj787.MChildren.Add(obj789);
            obj787.Items.Add(obj788);
            obj787.Items.Add(obj789);
            obj788.Value = __MetaSymbol.FromValue("Binder");
            obj789.Value = __MetaSymbol.FromValue("Annotation");
            obj790.MChildren.Add(obj791);
            obj790.Multiplicity = ;
            obj790.Alternatives.Add(obj791);
            obj791.MChildren.Add(obj792);
            obj791.MChildren.Add(obj793);
            obj791.MChildren.Add(obj794);
            obj791.MChildren.Add(obj795);
            obj791.Elements.Add(obj792);
            obj791.Elements.Add(obj793);
            obj791.Elements.Add(obj794);
            obj791.Elements.Add(obj795);
            obj791.ReturnType = default;
            obj792.MChildren.Add(obj796);
            obj792.Value = obj796;
            obj793.MChildren.Add(obj797);
            obj793.Assignment = ;
            obj793.Name = "arguments";
            obj793.Value = obj797;
            obj794.MChildren.Add(obj798);
            obj794.Value = obj798;
            obj795.MChildren.Add(obj804);
            obj795.Value = obj804;
            obj796.Text = "(";
            obj797.GrammarRule = obj334;
            obj798.MChildren.Add(obj799);
            obj798.Multiplicity = ;
            obj798.Alternatives.Add(obj799);
            obj799.MChildren.Add(obj800);
            obj799.MChildren.Add(obj801);
            obj799.Elements.Add(obj800);
            obj799.Elements.Add(obj801);
            obj799.ReturnType = default;
            obj800.MChildren.Add(obj802);
            obj800.Value = obj802;
            obj801.MChildren.Add(obj803);
            obj801.Assignment = ;
            obj801.Name = "arguments";
            obj801.Value = obj803;
            obj802.Text = ",";
            obj803.GrammarRule = obj334;
            obj804.Text = ")";
            obj805.Text = "]";
            obj806.MChildren.Add(obj807);
            obj806.MChildren.Add(obj808);
            obj806.MChildren.Add(obj809);
            obj806.MChildren.Add(obj810);
            obj806.Elements.Add(obj807);
            obj806.Elements.Add(obj808);
            obj806.Elements.Add(obj809);
            obj806.Elements.Add(obj810);
            obj806.ReturnType = __MetaType.FromModelObject(obj12);
            obj807.MChildren.Add(obj811);
            obj807.Value = obj811;
            obj808.MChildren.Add(obj812);
            obj808.Assignment = ;
            obj808.Name = "attributeClass";
            obj808.Value = obj812;
            obj809.MChildren.Add(obj822);
            obj809.Value = obj822;
            obj810.MChildren.Add(obj837);
            obj810.Value = obj837;
            obj811.Text = "[";
            obj812.MChildren.Add(obj813);
            obj812.GrammarRule = obj341;
            obj812.Annotations.Add(obj813);
            obj813.MChildren.Add(obj814);
            obj813.MChildren.Add(obj815);
            obj813.Arguments.Add(obj814);
            obj813.Arguments.Add(obj815);
            obj813.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Binding.UseBinder);
            obj814.MChildren.Add(obj816);
            obj814.NamedParameter.Add(__MetaSymbol.FromValue("types"));
            obj814.Parameter = "types";
            obj814.ParameterType = typeof(global::System.Collections.Immutable.ImmutableArray);
            obj814.Value = obj816;
            obj815.MChildren.Add(obj819);
            obj815.NamedParameter.Add(__MetaSymbol.FromValue("suffixes"));
            obj815.Parameter = "suffixes";
            obj815.ParameterType = typeof(global::System.Collections.Immutable.ImmutableArray);
            obj815.Value = obj819;
            obj816.MChildren.Add(obj817);
            obj816.MChildren.Add(obj818);
            obj816.Items.Add(obj817);
            obj816.Items.Add(obj818);
            obj817.Value = __MetaSymbol.FromValue("TokenKind");
            obj818.Value = __MetaSymbol.FromValue("Annotation");
            obj819.MChildren.Add(obj820);
            obj819.MChildren.Add(obj821);
            obj819.Items.Add(obj820);
            obj819.Items.Add(obj821);
            obj820.Value = __MetaSymbol.FromValue("TokenKind");
            obj821.Value = __MetaSymbol.FromValue("Annotation");
            obj822.MChildren.Add(obj823);
            obj822.Multiplicity = ;
            obj822.Alternatives.Add(obj823);
            obj823.MChildren.Add(obj824);
            obj823.MChildren.Add(obj825);
            obj823.MChildren.Add(obj826);
            obj823.MChildren.Add(obj827);
            obj823.Elements.Add(obj824);
            obj823.Elements.Add(obj825);
            obj823.Elements.Add(obj826);
            obj823.Elements.Add(obj827);
            obj823.ReturnType = default;
            obj824.MChildren.Add(obj828);
            obj824.Value = obj828;
            obj825.MChildren.Add(obj829);
            obj825.Assignment = ;
            obj825.Name = "arguments";
            obj825.Value = obj829;
            obj826.MChildren.Add(obj830);
            obj826.Value = obj830;
            obj827.MChildren.Add(obj836);
            obj827.Value = obj836;
            obj828.Text = "(";
            obj829.GrammarRule = obj334;
            obj830.MChildren.Add(obj831);
            obj830.Multiplicity = ;
            obj830.Alternatives.Add(obj831);
            obj831.MChildren.Add(obj832);
            obj831.MChildren.Add(obj833);
            obj831.Elements.Add(obj832);
            obj831.Elements.Add(obj833);
            obj831.ReturnType = default;
            obj832.MChildren.Add(obj834);
            obj832.Value = obj834;
            obj833.MChildren.Add(obj835);
            obj833.Assignment = ;
            obj833.Name = "arguments";
            obj833.Value = obj835;
            obj834.Text = ",";
            obj835.GrammarRule = obj334;
            obj836.Text = ")";
            obj837.Text = "]";
            obj838.MChildren.Add(obj839);
            obj838.MChildren.Add(obj840);
            obj838.Elements.Add(obj839);
            obj838.Elements.Add(obj840);
            obj838.ReturnType = default;
            obj839.MChildren.Add(obj841);
            obj839.Value = obj841;
            obj840.MChildren.Add(obj848);
            obj840.Assignment = ;
            obj840.Name = "value";
            obj840.Value = obj848;
            obj841.MChildren.Add(obj842);
            obj841.Multiplicity = ;
            obj841.Alternatives.Add(obj842);
            obj842.MChildren.Add(obj843);
            obj842.MChildren.Add(obj844);
            obj842.Elements.Add(obj843);
            obj842.Elements.Add(obj844);
            obj842.ReturnType = default;
            obj843.MChildren.Add(obj845);
            obj843.Assignment = ;
            obj843.Name = "namedParameter";
            obj843.Value = obj845;
            obj844.MChildren.Add(obj847);
            obj844.Value = obj847;
            obj845.MChildren.Add(obj846);
            obj845.GrammarRule = obj342;
            obj845.Annotations.Add(obj846);
            obj846.AttributeClass = typeof(global::MetaDslx.Bootstrap.MetaCompiler3.Symbols.AnnotationArgumentBinder);
            obj847.Text = ":";
            obj848.GrammarRule = obj329;
            obj849.MChildren.Add(obj853);
            obj849.MChildren.Add(obj854);
            obj849.Elements.Add(obj853);
            obj849.ReturnType = __MetaType.FromModelObject(obj37);
            obj849.ReturnValue = obj854;
            obj850.MChildren.Add(obj856);
            obj850.MChildren.Add(obj857);
            obj850.Elements.Add(obj856);
            obj850.ReturnType = __MetaType.FromModelObject(obj37);
            obj850.ReturnValue = obj857;
            obj851.MChildren.Add(obj859);
            obj851.MChildren.Add(obj860);
            obj851.Elements.Add(obj859);
            obj851.ReturnType = __MetaType.FromModelObject(obj37);
            obj851.ReturnValue = obj860;
            obj852.MChildren.Add(obj862);
            obj852.MChildren.Add(obj863);
            obj852.Elements.Add(obj862);
            obj852.ReturnType = __MetaType.FromModelObject(obj37);
            obj852.ReturnValue = obj863;
            obj853.MChildren.Add(obj855);
            obj853.Value = obj855;
            obj855.Text = "=";
            obj856.MChildren.Add(obj858);
            obj856.Value = obj858;
            obj858.Text = "?=";
            obj859.MChildren.Add(obj861);
            obj859.Value = obj861;
            obj861.Text = "!=";
            obj862.MChildren.Add(obj864);
            obj862.Value = obj864;
            obj864.Text = "+=";
            obj865.MChildren.Add(obj871);
            obj865.MChildren.Add(obj872);
            obj865.Elements.Add(obj871);
            obj865.ReturnType = __MetaType.FromModelObject(obj18);
            obj865.ReturnValue = obj872;
            obj866.MChildren.Add(obj874);
            obj866.MChildren.Add(obj875);
            obj866.Elements.Add(obj874);
            obj866.ReturnType = __MetaType.FromModelObject(obj18);
            obj866.ReturnValue = obj875;
            obj867.MChildren.Add(obj877);
            obj867.MChildren.Add(obj878);
            obj867.Elements.Add(obj877);
            obj867.ReturnType = __MetaType.FromModelObject(obj18);
            obj867.ReturnValue = obj878;
            obj868.MChildren.Add(obj880);
            obj868.MChildren.Add(obj881);
            obj868.Elements.Add(obj880);
            obj868.ReturnType = __MetaType.FromModelObject(obj18);
            obj868.ReturnValue = obj881;
            obj869.MChildren.Add(obj883);
            obj869.MChildren.Add(obj884);
            obj869.Elements.Add(obj883);
            obj869.ReturnType = __MetaType.FromModelObject(obj18);
            obj869.ReturnValue = obj884;
            obj870.MChildren.Add(obj886);
            obj870.MChildren.Add(obj887);
            obj870.Elements.Add(obj886);
            obj870.ReturnType = __MetaType.FromModelObject(obj18);
            obj870.ReturnValue = obj887;
            obj871.MChildren.Add(obj873);
            obj871.Value = obj873;
            obj873.Text = "?";
            obj874.MChildren.Add(obj876);
            obj874.Value = obj876;
            obj876.Text = "*";
            obj877.MChildren.Add(obj879);
            obj877.Value = obj879;
            obj879.Text = "+";
            obj880.MChildren.Add(obj882);
            obj880.Value = obj882;
            obj882.Text = "??";
            obj883.MChildren.Add(obj885);
            obj883.Value = obj885;
            obj885.Text = "*?";
            obj886.MChildren.Add(obj888);
            obj886.Value = obj888;
            obj888.Text = "+?";
            obj889.MChildren.Add(obj891);
            obj889.Elements.Add(obj891);
            obj890.MChildren.Add(obj893);
            obj890.Elements.Add(obj893);
            obj890.ReturnType = typeof(__MetaType);
            obj891.MChildren.Add(obj892);
            obj891.Value = obj892;
            obj892.GrammarRule = obj339;
            obj893.MChildren.Add(obj894);
            obj893.Value = obj894;
            obj894.ReferencedTypes.Add(typeof(__MetaType));
            obj895.MChildren.Add(obj897);
            obj895.Elements.Add(obj897);
            obj896.MChildren.Add(obj899);
            obj896.Elements.Add(obj899);
            obj896.ReturnType = typeof(__MetaType);
            obj897.MChildren.Add(obj898);
            obj897.Value = obj898;
            obj898.GrammarRule = obj339;
            obj899.MChildren.Add(obj900);
            obj899.Value = obj900;
            obj900.GrammarRule = obj341;
            obj900.ReferencedTypes.Add(typeof(__MetaType));
            obj901.MChildren.Add(obj919);
            obj901.Elements.Add(obj919);
            obj901.ReturnType = typeof(__MetaType);
            obj902.MChildren.Add(obj921);
            obj902.Elements.Add(obj921);
            obj902.ReturnType = typeof(__MetaType);
            obj903.MChildren.Add(obj923);
            obj903.Elements.Add(obj923);
            obj903.ReturnType = typeof(__MetaType);
            obj904.MChildren.Add(obj925);
            obj904.Elements.Add(obj925);
            obj904.ReturnType = typeof(__MetaType);
            obj905.MChildren.Add(obj927);
            obj905.Elements.Add(obj927);
            obj905.ReturnType = typeof(__MetaType);
            obj906.MChildren.Add(obj929);
            obj906.Elements.Add(obj929);
            obj906.ReturnType = typeof(__MetaType);
            obj907.MChildren.Add(obj931);
            obj907.Elements.Add(obj931);
            obj907.ReturnType = typeof(__MetaType);
            obj908.MChildren.Add(obj933);
            obj908.Elements.Add(obj933);
            obj908.ReturnType = typeof(__MetaType);
            obj909.MChildren.Add(obj935);
            obj909.Elements.Add(obj935);
            obj909.ReturnType = typeof(__MetaType);
            obj910.MChildren.Add(obj937);
            obj910.Elements.Add(obj937);
            obj910.ReturnType = typeof(__MetaType);
            obj911.MChildren.Add(obj939);
            obj911.Elements.Add(obj939);
            obj911.ReturnType = typeof(__MetaType);
            obj912.MChildren.Add(obj941);
            obj912.Elements.Add(obj941);
            obj912.ReturnType = typeof(__MetaType);
            obj913.MChildren.Add(obj943);
            obj913.Elements.Add(obj943);
            obj913.ReturnType = typeof(__MetaType);
            obj914.MChildren.Add(obj945);
            obj914.Elements.Add(obj945);
            obj914.ReturnType = typeof(__MetaType);
            obj915.MChildren.Add(obj947);
            obj915.Elements.Add(obj947);
            obj915.ReturnType = typeof(__MetaType);
            obj916.MChildren.Add(obj949);
            obj916.Elements.Add(obj949);
            obj916.ReturnType = typeof(__MetaType);
            obj917.MChildren.Add(obj951);
            obj917.Elements.Add(obj951);
            obj917.ReturnType = typeof(__MetaType);
            obj918.MChildren.Add(obj953);
            obj918.Elements.Add(obj953);
            obj918.ReturnType = typeof(__MetaType);
            obj919.MChildren.Add(obj920);
            obj919.Value = obj920;
            obj920.Text = "object";
            obj921.MChildren.Add(obj922);
            obj921.Value = obj922;
            obj922.Text = "bool";
            obj923.MChildren.Add(obj924);
            obj923.Value = obj924;
            obj924.Text = "char";
            obj925.MChildren.Add(obj926);
            obj925.Value = obj926;
            obj926.Text = "string";
            obj927.MChildren.Add(obj928);
            obj927.Value = obj928;
            obj928.Text = "byte";
            obj929.MChildren.Add(obj930);
            obj929.Value = obj930;
            obj930.Text = "sbyte";
            obj931.MChildren.Add(obj932);
            obj931.Value = obj932;
            obj932.Text = "short";
            obj933.MChildren.Add(obj934);
            obj933.Value = obj934;
            obj934.Text = "ushort";
            obj935.MChildren.Add(obj936);
            obj935.Value = obj936;
            obj936.Text = "int";
            obj937.MChildren.Add(obj938);
            obj937.Value = obj938;
            obj938.Text = "uint";
            obj939.MChildren.Add(obj940);
            obj939.Value = obj940;
            obj940.Text = "long";
            obj941.MChildren.Add(obj942);
            obj941.Value = obj942;
            obj942.Text = "ulong";
            obj943.MChildren.Add(obj944);
            obj943.Value = obj944;
            obj944.Text = "float";
            obj945.MChildren.Add(obj946);
            obj945.Value = obj946;
            obj946.Text = "double";
            obj947.MChildren.Add(obj948);
            obj947.Value = obj948;
            obj948.Text = "decimal";
            obj949.MChildren.Add(obj950);
            obj949.Value = obj950;
            obj950.Text = "type";
            obj951.MChildren.Add(obj952);
            obj951.Value = obj952;
            obj952.Text = "symbol";
            obj953.MChildren.Add(obj954);
            obj953.Value = obj954;
            obj954.Text = "void";
            obj955.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Binding.NameBinder);
            obj956.MChildren.Add(obj957);
            obj956.Elements.Add(obj957);
            obj956.ReturnType = typeof(void);
            obj957.MChildren.Add(obj958);
            obj957.Value = obj958;
            obj958.GrammarRule = obj342;
            obj959.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Binding.QualifierBinder);
            obj960.MChildren.Add(obj961);
            obj960.MChildren.Add(obj962);
            obj960.Elements.Add(obj961);
            obj960.Elements.Add(obj962);
            obj960.ReturnType = typeof(void);
            obj961.MChildren.Add(obj963);
            obj961.Value = obj963;
            obj962.MChildren.Add(obj964);
            obj962.Value = obj964;
            obj963.GrammarRule = obj342;
            obj964.MChildren.Add(obj965);
            obj964.Multiplicity = ;
            obj964.Alternatives.Add(obj965);
            obj965.MChildren.Add(obj966);
            obj965.MChildren.Add(obj967);
            obj965.Elements.Add(obj966);
            obj965.Elements.Add(obj967);
            obj965.ReturnType = default;
            obj966.MChildren.Add(obj968);
            obj966.Value = obj968;
            obj967.MChildren.Add(obj969);
            obj967.Value = obj969;
            obj968.Text = ".";
            obj969.GrammarRule = obj342;
            obj970.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Syntax.DefaultReferenceAnnotation);
            obj971.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Binding.IdentifierBinder);
            obj972.MChildren.Add(obj974);
            obj972.Elements.Add(obj974);
            obj972.ReturnType = typeof(void);
            obj973.MChildren.Add(obj976);
            obj973.Elements.Add(obj976);
            obj973.ReturnType = typeof(void);
            obj974.MChildren.Add(obj975);
            obj974.Value = obj975;
            obj975.GrammarRule = obj345;
            obj976.MChildren.Add(obj977);
            obj976.Value = obj977;
            obj977.GrammarRule = obj346;
            obj978.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Syntax.NumberTokenKind);
            obj979.MChildren.Add(obj981);
            obj979.Elements.Add(obj981);
            obj980.MChildren.Add(obj983);
            obj980.MChildren.Add(obj984);
            obj980.Elements.Add(obj983);
            obj980.Elements.Add(obj984);
            obj981.MChildren.Add(obj982);
            obj981.Value = obj982;
            obj982.Text = "0";
            obj983.MChildren.Add(obj985);
            obj983.Value = obj985;
            obj984.MChildren.Add(obj986);
            obj984.Multiplicity = ;
            obj984.Value = obj986;
            obj985.EndChar = "9";
            obj985.StartChar = "1";
            obj986.MChildren.Add(obj987);
            obj986.Alternatives.Add(obj987);
            obj987.MChildren.Add(obj988);
            obj987.Elements.Add(obj988);
            obj988.MChildren.Add(obj989);
            obj988.Value = obj989;
            obj989.EndChar = "9";
            obj989.StartChar = "0";
            obj990.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Syntax.NumberTokenKind);
            obj991.MChildren.Add(obj992);
            obj991.MChildren.Add(obj993);
            obj991.MChildren.Add(obj994);
            obj991.Elements.Add(obj992);
            obj991.Elements.Add(obj993);
            obj991.Elements.Add(obj994);
            obj992.MChildren.Add(obj995);
            obj992.Value = obj995;
            obj993.MChildren.Add(obj1007);
            obj993.Value = obj1007;
            obj994.MChildren.Add(obj1008);
            obj994.Multiplicity = ;
            obj994.Value = obj1008;
            obj995.MChildren.Add(obj996);
            obj995.MChildren.Add(obj997);
            obj995.Alternatives.Add(obj996);
            obj995.Alternatives.Add(obj997);
            obj996.MChildren.Add(obj998);
            obj996.Elements.Add(obj998);
            obj997.MChildren.Add(obj1000);
            obj997.MChildren.Add(obj1001);
            obj997.Elements.Add(obj1000);
            obj997.Elements.Add(obj1001);
            obj998.MChildren.Add(obj999);
            obj998.Value = obj999;
            obj999.Text = "0";
            obj1000.MChildren.Add(obj1002);
            obj1000.Value = obj1002;
            obj1001.MChildren.Add(obj1003);
            obj1001.Multiplicity = ;
            obj1001.Value = obj1003;
            obj1002.EndChar = "9";
            obj1002.StartChar = "1";
            obj1003.MChildren.Add(obj1004);
            obj1003.Alternatives.Add(obj1004);
            obj1004.MChildren.Add(obj1005);
            obj1004.Elements.Add(obj1005);
            obj1005.MChildren.Add(obj1006);
            obj1005.Value = obj1006;
            obj1006.EndChar = "9";
            obj1006.StartChar = "0";
            obj1007.Text = ".";
            obj1008.MChildren.Add(obj1009);
            obj1008.Alternatives.Add(obj1009);
            obj1009.MChildren.Add(obj1010);
            obj1009.Elements.Add(obj1010);
            obj1010.MChildren.Add(obj1011);
            obj1010.Value = obj1011;
            obj1011.EndChar = "9";
            obj1011.StartChar = "0";
            obj1012.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Syntax.DefaultIdentifierTokenKind);
            obj1013.MChildren.Add(obj1014);
            obj1013.MChildren.Add(obj1015);
            obj1013.Elements.Add(obj1014);
            obj1013.Elements.Add(obj1015);
            obj1014.MChildren.Add(obj1016);
            obj1014.Multiplicity = ;
            obj1014.Value = obj1016;
            obj1015.MChildren.Add(obj1026);
            obj1015.Multiplicity = ;
            obj1015.Value = obj1026;
            obj1016.MChildren.Add(obj1017);
            obj1016.MChildren.Add(obj1018);
            obj1016.MChildren.Add(obj1019);
            obj1016.Alternatives.Add(obj1017);
            obj1016.Alternatives.Add(obj1018);
            obj1016.Alternatives.Add(obj1019);
            obj1017.MChildren.Add(obj1020);
            obj1017.Elements.Add(obj1020);
            obj1018.MChildren.Add(obj1022);
            obj1018.Elements.Add(obj1022);
            obj1019.MChildren.Add(obj1024);
            obj1019.Elements.Add(obj1024);
            obj1020.MChildren.Add(obj1021);
            obj1020.Value = obj1021;
            obj1021.Text = "_";
            obj1022.MChildren.Add(obj1023);
            obj1022.Value = obj1023;
            obj1023.EndChar = "z";
            obj1023.StartChar = "a";
            obj1024.MChildren.Add(obj1025);
            obj1024.Value = obj1025;
            obj1025.EndChar = "Z";
            obj1025.StartChar = "A";
            obj1026.MChildren.Add(obj1027);
            obj1026.MChildren.Add(obj1028);
            obj1026.MChildren.Add(obj1029);
            obj1026.MChildren.Add(obj1030);
            obj1026.Alternatives.Add(obj1027);
            obj1026.Alternatives.Add(obj1028);
            obj1026.Alternatives.Add(obj1029);
            obj1026.Alternatives.Add(obj1030);
            obj1027.MChildren.Add(obj1031);
            obj1027.Elements.Add(obj1031);
            obj1028.MChildren.Add(obj1033);
            obj1028.Elements.Add(obj1033);
            obj1029.MChildren.Add(obj1035);
            obj1029.Elements.Add(obj1035);
            obj1030.MChildren.Add(obj1037);
            obj1030.Elements.Add(obj1037);
            obj1031.MChildren.Add(obj1032);
            obj1031.Value = obj1032;
            obj1032.Text = "_";
            obj1033.MChildren.Add(obj1034);
            obj1033.Value = obj1034;
            obj1034.EndChar = "z";
            obj1034.StartChar = "a";
            obj1035.MChildren.Add(obj1036);
            obj1035.Value = obj1036;
            obj1036.EndChar = "Z";
            obj1036.StartChar = "A";
            obj1037.MChildren.Add(obj1038);
            obj1037.Value = obj1038;
            obj1038.EndChar = "9";
            obj1038.StartChar = "0";
            obj1039.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Syntax.IdentifierTokenKind);
            obj1040.MChildren.Add(obj1041);
            obj1040.MChildren.Add(obj1042);
            obj1040.MChildren.Add(obj1043);
            obj1040.Elements.Add(obj1041);
            obj1040.Elements.Add(obj1042);
            obj1040.Elements.Add(obj1043);
            obj1041.MChildren.Add(obj1044);
            obj1041.Value = obj1044;
            obj1042.MChildren.Add(obj1045);
            obj1042.Multiplicity = ;
            obj1042.Value = obj1045;
            obj1043.MChildren.Add(obj1055);
            obj1043.Multiplicity = ;
            obj1043.Value = obj1055;
            obj1044.Text = "@";
            obj1045.MChildren.Add(obj1046);
            obj1045.MChildren.Add(obj1047);
            obj1045.MChildren.Add(obj1048);
            obj1045.Alternatives.Add(obj1046);
            obj1045.Alternatives.Add(obj1047);
            obj1045.Alternatives.Add(obj1048);
            obj1046.MChildren.Add(obj1049);
            obj1046.Elements.Add(obj1049);
            obj1047.MChildren.Add(obj1051);
            obj1047.Elements.Add(obj1051);
            obj1048.MChildren.Add(obj1053);
            obj1048.Elements.Add(obj1053);
            obj1049.MChildren.Add(obj1050);
            obj1049.Value = obj1050;
            obj1050.Text = "_";
            obj1051.MChildren.Add(obj1052);
            obj1051.Value = obj1052;
            obj1052.EndChar = "z";
            obj1052.StartChar = "a";
            obj1053.MChildren.Add(obj1054);
            obj1053.Value = obj1054;
            obj1054.EndChar = "Z";
            obj1054.StartChar = "A";
            obj1055.MChildren.Add(obj1056);
            obj1055.MChildren.Add(obj1057);
            obj1055.MChildren.Add(obj1058);
            obj1055.MChildren.Add(obj1059);
            obj1055.Alternatives.Add(obj1056);
            obj1055.Alternatives.Add(obj1057);
            obj1055.Alternatives.Add(obj1058);
            obj1055.Alternatives.Add(obj1059);
            obj1056.MChildren.Add(obj1060);
            obj1056.Elements.Add(obj1060);
            obj1057.MChildren.Add(obj1062);
            obj1057.Elements.Add(obj1062);
            obj1058.MChildren.Add(obj1064);
            obj1058.Elements.Add(obj1064);
            obj1059.MChildren.Add(obj1066);
            obj1059.Elements.Add(obj1066);
            obj1060.MChildren.Add(obj1061);
            obj1060.Value = obj1061;
            obj1061.Text = "_";
            obj1062.MChildren.Add(obj1063);
            obj1062.Value = obj1063;
            obj1063.EndChar = "z";
            obj1063.StartChar = "a";
            obj1064.MChildren.Add(obj1065);
            obj1064.Value = obj1065;
            obj1065.EndChar = "Z";
            obj1065.StartChar = "A";
            obj1066.MChildren.Add(obj1067);
            obj1066.Value = obj1067;
            obj1067.EndChar = "9";
            obj1067.StartChar = "0";
            obj1068.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Syntax.DefaultSeparatorTokenKind);
            obj1069.MChildren.Add(obj1070);
            obj1069.Elements.Add(obj1070);
            obj1070.MChildren.Add(obj1071);
            obj1070.Value = obj1071;
            obj1071.Text = ",";
            obj1072.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Syntax.StringTokenKind);
            obj1073.MChildren.Add(obj1075);
            obj1073.MChildren.Add(obj1076);
            obj1073.MChildren.Add(obj1077);
            obj1073.Elements.Add(obj1075);
            obj1073.Elements.Add(obj1076);
            obj1073.Elements.Add(obj1077);
            obj1074.MChildren.Add(obj1081);
            obj1074.MChildren.Add(obj1082);
            obj1074.MChildren.Add(obj1083);
            obj1074.Elements.Add(obj1081);
            obj1074.Elements.Add(obj1082);
            obj1074.Elements.Add(obj1083);
            obj1075.MChildren.Add(obj1078);
            obj1075.Value = obj1078;
            obj1076.MChildren.Add(obj1079);
            obj1076.Multiplicity = ;
            obj1076.Value = obj1079;
            obj1077.MChildren.Add(obj1080);
            obj1077.Value = obj1080;
            obj1078.Text = "\"";
            obj1079.Rule = obj349;
            obj1080.Text = "\"";
            obj1081.MChildren.Add(obj1084);
            obj1081.Value = obj1084;
            obj1082.MChildren.Add(obj1085);
            obj1082.Multiplicity = ;
            obj1082.Value = obj1085;
            obj1083.MChildren.Add(obj1086);
            obj1083.Value = obj1086;
            obj1084.Text = "'";
            obj1085.Rule = obj351;
            obj1086.Text = "'";
            obj1087.MChildren.Add(obj1090);
            obj1087.Elements.Add(obj1090);
            obj1088.MChildren.Add(obj1092);
            obj1088.Elements.Add(obj1092);
            obj1089.MChildren.Add(obj1094);
            obj1089.Elements.Add(obj1094);
            obj1090.MChildren.Add(obj1091);
            obj1090.Value = obj1091;
            obj1091.Rule = obj350;
            obj1092.MChildren.Add(obj1093);
            obj1092.Value = obj1093;
            obj1093.Rule = obj353;
            obj1094.MChildren.Add(obj1095);
            obj1094.Value = obj1095;
            obj1095.Rule = obj355;
            obj1096.MChildren.Add(obj1097);
            obj1096.Elements.Add(obj1097);
            obj1097.MChildren.Add(obj1098);
            obj1097.IsNegated = true;
            obj1097.Value = obj1098;
            obj1098.MChildren.Add(obj1099);
            obj1098.MChildren.Add(obj1100);
            obj1098.MChildren.Add(obj1101);
            obj1098.MChildren.Add(obj1102);
            obj1098.MChildren.Add(obj1103);
            obj1098.MChildren.Add(obj1104);
            obj1098.MChildren.Add(obj1105);
            obj1098.Alternatives.Add(obj1099);
            obj1098.Alternatives.Add(obj1100);
            obj1098.Alternatives.Add(obj1101);
            obj1098.Alternatives.Add(obj1102);
            obj1098.Alternatives.Add(obj1103);
            obj1098.Alternatives.Add(obj1104);
            obj1098.Alternatives.Add(obj1105);
            obj1099.MChildren.Add(obj1106);
            obj1099.Elements.Add(obj1106);
            obj1100.MChildren.Add(obj1108);
            obj1100.Elements.Add(obj1108);
            obj1101.MChildren.Add(obj1110);
            obj1101.Elements.Add(obj1110);
            obj1102.MChildren.Add(obj1112);
            obj1102.Elements.Add(obj1112);
            obj1103.MChildren.Add(obj1114);
            obj1103.Elements.Add(obj1114);
            obj1104.MChildren.Add(obj1116);
            obj1104.Elements.Add(obj1116);
            obj1105.MChildren.Add(obj1118);
            obj1105.Elements.Add(obj1118);
            obj1106.MChildren.Add(obj1107);
            obj1106.Value = obj1107;
            obj1107.Text = "\"";
            obj1108.MChildren.Add(obj1109);
            obj1108.Value = obj1109;
            obj1109.Text = "\\";
            obj1110.MChildren.Add(obj1111);
            obj1110.Value = obj1111;
            obj1111.Text = "\n";
            obj1112.MChildren.Add(obj1113);
            obj1112.Value = obj1113;
            obj1113.Text = "\r";
            obj1114.MChildren.Add(obj1115);
            obj1114.Value = obj1115;
            obj1115.Text = "\u0085";
            obj1116.MChildren.Add(obj1117);
            obj1116.Value = obj1117;
            obj1117.Text = "\u2028";
            obj1118.MChildren.Add(obj1119);
            obj1118.Value = obj1119;
            obj1119.Text = "\u2029";
            obj1120.MChildren.Add(obj1123);
            obj1120.Elements.Add(obj1123);
            obj1121.MChildren.Add(obj1125);
            obj1121.Elements.Add(obj1125);
            obj1122.MChildren.Add(obj1127);
            obj1122.Elements.Add(obj1127);
            obj1123.MChildren.Add(obj1124);
            obj1123.Value = obj1124;
            obj1124.Rule = obj352;
            obj1125.MChildren.Add(obj1126);
            obj1125.Value = obj1126;
            obj1126.Rule = obj353;
            obj1127.MChildren.Add(obj1128);
            obj1127.Value = obj1128;
            obj1128.Rule = obj355;
            obj1129.MChildren.Add(obj1130);
            obj1129.Elements.Add(obj1130);
            obj1130.MChildren.Add(obj1131);
            obj1130.IsNegated = true;
            obj1130.Value = obj1131;
            obj1131.MChildren.Add(obj1132);
            obj1131.MChildren.Add(obj1133);
            obj1131.MChildren.Add(obj1134);
            obj1131.MChildren.Add(obj1135);
            obj1131.MChildren.Add(obj1136);
            obj1131.MChildren.Add(obj1137);
            obj1131.MChildren.Add(obj1138);
            obj1131.Alternatives.Add(obj1132);
            obj1131.Alternatives.Add(obj1133);
            obj1131.Alternatives.Add(obj1134);
            obj1131.Alternatives.Add(obj1135);
            obj1131.Alternatives.Add(obj1136);
            obj1131.Alternatives.Add(obj1137);
            obj1131.Alternatives.Add(obj1138);
            obj1132.MChildren.Add(obj1139);
            obj1132.Elements.Add(obj1139);
            obj1133.MChildren.Add(obj1141);
            obj1133.Elements.Add(obj1141);
            obj1134.MChildren.Add(obj1143);
            obj1134.Elements.Add(obj1143);
            obj1135.MChildren.Add(obj1145);
            obj1135.Elements.Add(obj1145);
            obj1136.MChildren.Add(obj1147);
            obj1136.Elements.Add(obj1147);
            obj1137.MChildren.Add(obj1149);
            obj1137.Elements.Add(obj1149);
            obj1138.MChildren.Add(obj1151);
            obj1138.Elements.Add(obj1151);
            obj1139.MChildren.Add(obj1140);
            obj1139.Value = obj1140;
            obj1140.Text = "'";
            obj1141.MChildren.Add(obj1142);
            obj1141.Value = obj1142;
            obj1142.Text = "\\";
            obj1143.MChildren.Add(obj1144);
            obj1143.Value = obj1144;
            obj1144.Text = "\n";
            obj1145.MChildren.Add(obj1146);
            obj1145.Value = obj1146;
            obj1146.Text = "\r";
            obj1147.MChildren.Add(obj1148);
            obj1147.Value = obj1148;
            obj1148.Text = "\u0085";
            obj1149.MChildren.Add(obj1150);
            obj1149.Value = obj1150;
            obj1150.Text = "\u2028";
            obj1151.MChildren.Add(obj1152);
            obj1151.Value = obj1152;
            obj1152.Text = "\u2029";
            obj1153.MChildren.Add(obj1154);
            obj1153.MChildren.Add(obj1155);
            obj1153.Elements.Add(obj1154);
            obj1153.Elements.Add(obj1155);
            obj1154.MChildren.Add(obj1156);
            obj1154.Value = obj1156;
            obj1155.MChildren.Add(obj1157);
            obj1155.Value = obj1157;
            obj1156.Text = "\\";
            obj1157.Rule = obj354;
            obj1158.MChildren.Add(obj1169);
            obj1158.Elements.Add(obj1169);
            obj1159.MChildren.Add(obj1171);
            obj1159.Elements.Add(obj1171);
            obj1160.MChildren.Add(obj1173);
            obj1160.Elements.Add(obj1173);
            obj1161.MChildren.Add(obj1175);
            obj1161.Elements.Add(obj1175);
            obj1162.MChildren.Add(obj1177);
            obj1162.Elements.Add(obj1177);
            obj1163.MChildren.Add(obj1179);
            obj1163.Elements.Add(obj1179);
            obj1164.MChildren.Add(obj1181);
            obj1164.Elements.Add(obj1181);
            obj1165.MChildren.Add(obj1183);
            obj1165.Elements.Add(obj1183);
            obj1166.MChildren.Add(obj1185);
            obj1166.Elements.Add(obj1185);
            obj1167.MChildren.Add(obj1187);
            obj1167.Elements.Add(obj1187);
            obj1168.MChildren.Add(obj1189);
            obj1168.Elements.Add(obj1189);
            obj1169.MChildren.Add(obj1170);
            obj1169.Value = obj1170;
            obj1170.Text = "'";
            obj1171.MChildren.Add(obj1172);
            obj1171.Value = obj1172;
            obj1172.Text = "\"";
            obj1173.MChildren.Add(obj1174);
            obj1173.Value = obj1174;
            obj1174.Text = "\\";
            obj1175.MChildren.Add(obj1176);
            obj1175.Value = obj1176;
            obj1176.Text = "0";
            obj1177.MChildren.Add(obj1178);
            obj1177.Value = obj1178;
            obj1178.Text = "a";
            obj1179.MChildren.Add(obj1180);
            obj1179.Value = obj1180;
            obj1180.Text = "b";
            obj1181.MChildren.Add(obj1182);
            obj1181.Value = obj1182;
            obj1182.Text = "f";
            obj1183.MChildren.Add(obj1184);
            obj1183.Value = obj1184;
            obj1184.Text = "n";
            obj1185.MChildren.Add(obj1186);
            obj1185.Value = obj1186;
            obj1186.Text = "r";
            obj1187.MChildren.Add(obj1188);
            obj1187.Value = obj1188;
            obj1188.Text = "t";
            obj1189.MChildren.Add(obj1190);
            obj1189.Value = obj1190;
            obj1190.Text = "v";
            obj1191.MChildren.Add(obj1193);
            obj1191.MChildren.Add(obj1194);
            obj1191.MChildren.Add(obj1195);
            obj1191.MChildren.Add(obj1196);
            obj1191.MChildren.Add(obj1197);
            obj1191.Elements.Add(obj1193);
            obj1191.Elements.Add(obj1194);
            obj1191.Elements.Add(obj1195);
            obj1191.Elements.Add(obj1196);
            obj1191.Elements.Add(obj1197);
            obj1192.MChildren.Add(obj1203);
            obj1192.MChildren.Add(obj1204);
            obj1192.MChildren.Add(obj1205);
            obj1192.MChildren.Add(obj1206);
            obj1192.MChildren.Add(obj1207);
            obj1192.MChildren.Add(obj1208);
            obj1192.MChildren.Add(obj1209);
            obj1192.MChildren.Add(obj1210);
            obj1192.MChildren.Add(obj1211);
            obj1192.Elements.Add(obj1203);
            obj1192.Elements.Add(obj1204);
            obj1192.Elements.Add(obj1205);
            obj1192.Elements.Add(obj1206);
            obj1192.Elements.Add(obj1207);
            obj1192.Elements.Add(obj1208);
            obj1192.Elements.Add(obj1209);
            obj1192.Elements.Add(obj1210);
            obj1192.Elements.Add(obj1211);
            obj1193.MChildren.Add(obj1198);
            obj1193.Value = obj1198;
            obj1194.MChildren.Add(obj1199);
            obj1194.Value = obj1199;
            obj1195.MChildren.Add(obj1200);
            obj1195.Value = obj1200;
            obj1196.MChildren.Add(obj1201);
            obj1196.Value = obj1201;
            obj1197.MChildren.Add(obj1202);
            obj1197.Value = obj1202;
            obj1198.Text = "\\u";
            obj1199.Rule = obj356;
            obj1200.Rule = obj356;
            obj1201.Rule = obj356;
            obj1202.Rule = obj356;
            obj1203.MChildren.Add(obj1212);
            obj1203.Value = obj1212;
            obj1204.MChildren.Add(obj1213);
            obj1204.Value = obj1213;
            obj1205.MChildren.Add(obj1214);
            obj1205.Value = obj1214;
            obj1206.MChildren.Add(obj1215);
            obj1206.Value = obj1215;
            obj1207.MChildren.Add(obj1216);
            obj1207.Value = obj1216;
            obj1208.MChildren.Add(obj1217);
            obj1208.Value = obj1217;
            obj1209.MChildren.Add(obj1218);
            obj1209.Value = obj1218;
            obj1210.MChildren.Add(obj1219);
            obj1210.Value = obj1219;
            obj1211.MChildren.Add(obj1220);
            obj1211.Value = obj1220;
            obj1212.Text = "\\U";
            obj1213.Rule = obj356;
            obj1214.Rule = obj356;
            obj1215.Rule = obj356;
            obj1216.Rule = obj356;
            obj1217.Rule = obj356;
            obj1218.Rule = obj356;
            obj1219.Rule = obj356;
            obj1220.Rule = obj356;
            obj1221.MChildren.Add(obj1222);
            obj1221.Elements.Add(obj1222);
            obj1222.MChildren.Add(obj1223);
            obj1222.Value = obj1223;
            obj1223.MChildren.Add(obj1224);
            obj1223.MChildren.Add(obj1225);
            obj1223.MChildren.Add(obj1226);
            obj1223.Alternatives.Add(obj1224);
            obj1223.Alternatives.Add(obj1225);
            obj1223.Alternatives.Add(obj1226);
            obj1224.MChildren.Add(obj1227);
            obj1224.Elements.Add(obj1227);
            obj1225.MChildren.Add(obj1229);
            obj1225.Elements.Add(obj1229);
            obj1226.MChildren.Add(obj1231);
            obj1226.Elements.Add(obj1231);
            obj1227.MChildren.Add(obj1228);
            obj1227.Value = obj1228;
            obj1228.EndChar = "9";
            obj1228.StartChar = "0";
            obj1229.MChildren.Add(obj1230);
            obj1229.Value = obj1230;
            obj1230.EndChar = "f";
            obj1230.StartChar = "a";
            obj1231.MChildren.Add(obj1232);
            obj1231.Value = obj1232;
            obj1232.EndChar = "F";
            obj1232.StartChar = "A";
            obj1233.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Syntax.WhitespaceTokenKind);
            obj1234.MChildren.Add(obj1235);
            obj1234.MChildren.Add(obj1236);
            obj1234.MChildren.Add(obj1237);
            obj1234.Elements.Add(obj1235);
            obj1234.Elements.Add(obj1236);
            obj1234.Elements.Add(obj1237);
            obj1235.MChildren.Add(obj1238);
            obj1235.Value = obj1238;
            obj1236.MChildren.Add(obj1239);
            obj1236.Value = obj1239;
            obj1237.MChildren.Add(obj1240);
            obj1237.Value = obj1240;
            obj1238.Text = "\u00ef";
            obj1239.Text = "\u00bb";
            obj1240.Text = "\u00bf";
            obj1241.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Syntax.DefaultWhitespaceTokenKind);
            obj1242.MChildren.Add(obj1243);
            obj1242.Elements.Add(obj1243);
            obj1243.MChildren.Add(obj1244);
            obj1243.Multiplicity = ;
            obj1243.Value = obj1244;
            obj1244.MChildren.Add(obj1245);
            obj1244.MChildren.Add(obj1246);
            obj1244.Alternatives.Add(obj1245);
            obj1244.Alternatives.Add(obj1246);
            obj1245.MChildren.Add(obj1247);
            obj1245.Elements.Add(obj1247);
            obj1246.MChildren.Add(obj1249);
            obj1246.Elements.Add(obj1249);
            obj1247.MChildren.Add(obj1248);
            obj1247.Value = obj1248;
            obj1248.Text = "\t";
            obj1249.MChildren.Add(obj1250);
            obj1249.Value = obj1250;
            obj1250.Text = " ";
            obj1251.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Syntax.DefaultEndOfLineTokenKind);
            obj1252.MChildren.Add(obj1253);
            obj1252.Elements.Add(obj1253);
            obj1253.MChildren.Add(obj1254);
            obj1253.Value = obj1254;
            obj1254.MChildren.Add(obj1255);
            obj1254.MChildren.Add(obj1256);
            obj1254.MChildren.Add(obj1257);
            obj1254.Alternatives.Add(obj1255);
            obj1254.Alternatives.Add(obj1256);
            obj1254.Alternatives.Add(obj1257);
            obj1255.MChildren.Add(obj1258);
            obj1255.Elements.Add(obj1258);
            obj1256.MChildren.Add(obj1260);
            obj1256.Elements.Add(obj1260);
            obj1257.MChildren.Add(obj1262);
            obj1257.Elements.Add(obj1262);
            obj1258.MChildren.Add(obj1259);
            obj1258.Value = obj1259;
            obj1259.Text = "\r\n";
            obj1260.MChildren.Add(obj1261);
            obj1260.Value = obj1261;
            obj1261.Text = "\r";
            obj1262.MChildren.Add(obj1263);
            obj1262.Value = obj1263;
            obj1263.Text = "\n";
            obj1264.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Syntax.SingleLineCommentTokenKind);
            obj1265.MChildren.Add(obj1266);
            obj1265.MChildren.Add(obj1267);
            obj1265.Elements.Add(obj1266);
            obj1265.Elements.Add(obj1267);
            obj1266.MChildren.Add(obj1268);
            obj1266.Value = obj1268;
            obj1267.MChildren.Add(obj1269);
            obj1267.IsNegated = true;
            obj1267.Multiplicity = ;
            obj1267.Value = obj1269;
            obj1268.Text = "//";
            obj1269.MChildren.Add(obj1270);
            obj1269.MChildren.Add(obj1271);
            obj1269.Alternatives.Add(obj1270);
            obj1269.Alternatives.Add(obj1271);
            obj1270.MChildren.Add(obj1272);
            obj1270.Elements.Add(obj1272);
            obj1271.MChildren.Add(obj1274);
            obj1271.Elements.Add(obj1274);
            obj1272.MChildren.Add(obj1273);
            obj1272.Value = obj1273;
            obj1273.Text = "\r";
            obj1274.MChildren.Add(obj1275);
            obj1274.Value = obj1275;
            obj1275.Text = "\n";
            obj1276.AttributeClass = typeof(global::MetaDslx.CodeAnalysis.Syntax.MultiLineCommentTokenKind);
            obj1277.MChildren.Add(obj1278);
            obj1277.MChildren.Add(obj1279);
            obj1277.MChildren.Add(obj1280);
            obj1277.Elements.Add(obj1278);
            obj1277.Elements.Add(obj1279);
            obj1277.Elements.Add(obj1280);
            obj1278.MChildren.Add(obj1281);
            obj1278.Value = obj1281;
            obj1279.MChildren.Add(obj1282);
            obj1279.Multiplicity = ;
            obj1279.Value = obj1282;
            obj1280.MChildren.Add(obj1283);
            obj1280.Value = obj1283;
            obj1281.Text = "/*";
            obj1283.Text = "*/";
            obj1284.MChildren.Add(obj1285);
            obj1284.Elements.Add(obj1285);
            obj1285.MChildren.Add(obj1286);
            obj1285.Value = obj1286;
            obj1287.MChildren.Add(obj1292);
            obj1287.Type = obj1292;
            obj1287.Name = "Arguments";
            obj1287.Parent = obj55;
            obj1288.MChildren.Add(obj1293);
            obj1288.IsDerived = true;
            obj1288.Type = obj1293;
            obj1288.Name = "Constructors";
            obj1288.Parent = obj55;
            obj1289.MChildren.Add(obj1294);
            obj1289.IsDerived = true;
            obj1289.Type = obj1294;
            obj1289.Name = "Parameters";
            obj1289.Parent = obj55;
            obj1290.MChildren.Add(obj1295);
            obj1290.IsDerived = true;
            obj1290.Type = obj1295;
            obj1290.Name = "SelectedConstructor";
            obj1290.Parent = obj55;
            obj1291.MChildren.Add(obj1296);
            obj1291.IsDerived = true;
            obj1291.Phase = obj1290;
            obj1291.Type = obj1296;
            obj1291.Name = "SelectedParameters";
            obj1291.Parent = obj55;
            obj1292.Dimensions = 1;
            obj1292.Type = typeof(global::AnnotationArgument);
            obj1293.Dimensions = 1;
            obj1293.Type = typeof(global::Declaration);
            obj1294.Dimensions = 2;
            obj1294.Type = typeof(global::Declaration);
            obj1295.Dimensions = 0;
            obj1295.Type = typeof(global::Declaration);
            obj1296.Dimensions = 1;
            obj1296.Type = typeof(global::Declaration);
            obj1297.MChildren.Add(obj1303);
            obj1297.IsDerived = true;
            obj1297.Type = obj1303;
            obj1297.Name = "AnnotationSymbol";
            obj1297.Parent = obj56;
            obj1298.MChildren.Add(obj1304);
            obj1298.IsDerived = true;
            obj1298.Type = obj1304;
            obj1298.Name = "IsNamedArgument";
            obj1298.Parent = obj56;
            obj1299.MChildren.Add(obj1305);
            obj1299.Type = obj1305;
            obj1299.Name = "NamedParameter";
            obj1299.Parent = obj56;
            obj1300.MChildren.Add(obj1306);
            obj1300.IsDerived = true;
            obj1300.Type = obj1306;
            obj1300.Name = "Parameter";
            obj1300.Parent = obj56;
            obj1301.MChildren.Add(obj1307);
            obj1301.IsDerived = true;
            obj1301.Phase = obj1300;
            obj1301.Type = obj1307;
            obj1301.Name = "ParameterType";
            obj1301.Parent = obj56;
            obj1302.MChildren.Add(obj1308);
            obj1302.Type = obj1308;
            obj1302.Name = "Value";
            obj1302.Parent = obj56;
            obj1303.Dimensions = 0;
            obj1303.IsNullable = true;
            obj1303.Type = typeof(global::Annotation);
            obj1304.Dimensions = 0;
            obj1304.Type = typeof(bool);
            obj1305.Dimensions = 1;
            obj1305.Type = typeof(global::MetaSymbol);
            obj1306.Dimensions = 0;
            obj1306.Type = typeof(global::Declaration);
            obj1307.Dimensions = 0;
            obj1307.Type = typeof(global::MetaType);
            obj1308.Dimensions = 0;
            obj1308.Type = typeof(global::Expression);
            obj1309.MChildren.Add(obj1314);
            obj1309.IsDerived = true;
            obj1309.Type = obj1314;
            obj1309.Name = "ContainingPAlternativeSymbol";
            obj1309.Parent = obj57;
            obj1310.MChildren.Add(obj1315);
            obj1310.IsDerived = true;
            obj1310.Type = obj1315;
            obj1310.Name = "ContainingAnnotationArgumentSymbol";
            obj1310.Parent = obj57;
            obj1311.MChildren.Add(obj1316);
            obj1311.IsDerived = true;
            obj1311.Type = obj1316;
            obj1311.Name = "ExpectedType";
            obj1311.Parent = obj57;
            obj1312.MChildren.Add(obj1317);
            obj1312.IsDerived = true;
            obj1312.Type = obj1317;
            obj1312.Name = "Value";
            obj1312.Parent = obj57;
            obj1313.MChildren.Add(obj1318);
            obj1313.IsDerived = true;
            obj1313.Phase = obj1312;
            obj1313.Type = obj1318;
            obj1313.Name = "Values";
            obj1313.Parent = obj57;
            obj1314.Dimensions = 0;
            obj1314.IsNullable = true;
            obj1314.Type = typeof(global::PAlternative);
            obj1315.Dimensions = 0;
            obj1315.IsNullable = true;
            obj1315.Type = typeof(global::AnnotationArgument);
            obj1316.Dimensions = 0;
            obj1316.Type = typeof(global::MetaType);
            obj1317.Dimensions = 0;
            obj1317.Type = typeof(global::MetaSymbol);
            obj1318.Dimensions = 1;
            obj1318.Type = typeof(global::MetaSymbol);
            obj1319.MChildren.Add(obj1326);
            obj1319.IsDerived = true;
            obj1319.Type = obj1326;
            obj1319.Name = "ContainingParserRuleSymbol";
            obj1319.Parent = obj58;
            obj1320.MChildren.Add(obj1327);
            obj1320.IsDerived = true;
            obj1320.Type = obj1327;
            obj1320.Name = "ContainingPBlockSymbol";
            obj1320.Parent = obj58;
            obj1321.MChildren.Add(obj1328);
            obj1321.Type = obj1328;
            obj1321.Name = "Elements";
            obj1321.Parent = obj58;
            obj1322.MChildren.Add(obj1329);
            obj1322.Type = obj1329;
            obj1322.Name = "ReturnValue";
            obj1322.Parent = obj58;
            obj1323.MChildren.Add(obj1330);
            obj1323.IsDerived = true;
            obj1323.Type = obj1330;
            obj1323.Name = "ReturnType";
            obj1323.Parent = obj58;
            obj1324.MChildren.Add(obj1331);
            obj1324.IsDerived = true;
            obj1324.Type = obj1331;
            obj1324.Name = "ExpectedType";
            obj1324.Parent = obj58;
            obj1325.MChildren.Add(obj1332);
            obj1325.IsDerived = true;
            obj1325.Type = obj1332;
            obj1325.Name = "AllSimpleElements";
            obj1325.Parent = obj58;
            obj1326.Dimensions = 0;
            obj1326.IsNullable = true;
            obj1326.Type = typeof(global::ParserRule);
            obj1327.Dimensions = 0;
            obj1327.IsNullable = true;
            obj1327.Type = typeof(global::PBlock);
            obj1328.Dimensions = 1;
            obj1328.Type = typeof(global::PElement);
            obj1329.Dimensions = 0;
            obj1329.IsNullable = true;
            obj1329.Type = typeof(global::Expression);
            obj1330.Dimensions = 0;
            obj1330.Type = typeof(global::MetaType);
            obj1331.Dimensions = 0;
            obj1331.Type = typeof(global::MetaType);
            obj1332.Dimensions = 1;
            obj1332.Type = typeof(global::PElement);
            obj1333.MChildren.Add(obj1335);
            obj1333.Type = obj1335;
            obj1333.Name = "ReturnType";
            obj1333.Parent = obj59;
            obj1334.MChildren.Add(obj1336);
            obj1334.Type = obj1336;
            obj1334.Name = "Alternatives";
            obj1334.Parent = obj59;
            obj1335.Dimensions = 0;
            obj1335.Type = typeof(global::MetaType);
            obj1336.Dimensions = 1;
            obj1336.Type = typeof(global::PAlternative);
            obj1337.MChildren.Add(obj1339);
            obj1337.IsDerived = true;
            obj1337.Type = obj1339;
            obj1337.Name = "ExpectedType";
            obj1337.Parent = obj60;
            obj1338.MChildren.Add(obj1340);
            obj1338.Type = obj1340;
            obj1338.Name = "Alternatives";
            obj1338.Parent = obj60;
            obj1339.Dimensions = 0;
            obj1339.Type = typeof(global::MetaType);
            obj1340.Dimensions = 1;
            obj1340.Type = typeof(global::PAlternative);
            obj1341.MChildren.Add(obj1347);
            obj1341.IsDerived = true;
            obj1341.Type = obj1347;
            obj1341.Name = "IsNamedElement";
            obj1341.Parent = obj61;
            obj1342.MChildren.Add(obj1348);
            obj1342.IsDerived = true;
            obj1342.Type = obj1348;
            obj1342.Name = "ContainingPAlternativeSymbol";
            obj1342.Parent = obj61;
            obj1343.MChildren.Add(obj1349);
            obj1343.Type = obj1349;
            obj1343.Name = "Value";
            obj1343.Parent = obj61;
            obj1344.MChildren.Add(obj1350);
            obj1344.Type = obj1350;
            obj1344.Name = "Assignment";
            obj1344.Parent = obj61;
            obj1345.MChildren.Add(obj1351);
            obj1345.IsDerived = true;
            obj1345.Type = obj1351;
            obj1345.Name = "ExpectedType";
            obj1345.Parent = obj61;
            obj1346.MChildren.Add(obj1352);
            obj1346.IsDerived = true;
            obj1346.Phase = obj1345;
            obj1346.Type = obj1352;
            obj1346.Name = "ExpectedKind";
            obj1346.Parent = obj61;
            obj1347.Dimensions = 0;
            obj1347.Type = typeof(bool);
            obj1348.Dimensions = 0;
            obj1348.IsNullable = true;
            obj1348.Type = typeof(global::PAlternative);
            obj1349.Dimensions = 0;
            obj1349.Type = typeof(global::MetaSymbol);
            obj1350.Dimensions = 0;
            obj1350.Type = __MetaType.FromModelObject(obj37);
            obj1351.Dimensions = 0;
            obj1351.Type = typeof(global::MetaType);
            obj1352.Dimensions = 0;
            obj1352.Type = typeof(global::MetaDslx.Bootstrap.MetaCompiler3.Model.ExpectedTypeKind);
            obj1353.MChildren.Add(obj1355);
            obj1353.Type = obj1355;
            obj1353.Name = "Rule";
            obj1353.Parent = obj62;
            obj1354.MChildren.Add(obj1356);
            obj1354.Type = obj1356;
            obj1354.Name = "ReferencedTypes";
            obj1354.Parent = obj62;
            obj1355.Dimensions = 0;
            obj1355.Type = typeof(global::MetaSymbol);
            obj1356.Dimensions = 1;
            obj1356.Type = typeof(global::MetaType);
            obj1357.MChildren.Add(obj1359);
            obj1357.Type = obj1359;
            obj1357.Name = "ReturnType";
            obj1357.Parent = obj63;
            obj1358.MChildren.Add(obj1360);
            obj1358.IsDerived = true;
            obj1358.Type = obj1360;
            obj1358.Name = "ExpectedType";
            obj1358.Parent = obj63;
            obj1359.Dimensions = 0;
            obj1359.Type = typeof(global::MetaType);
            obj1360.Dimensions = 0;
            obj1360.Type = typeof(global::MetaType);
            _model.IsSealed = true;
        }
    
        public override string MName => nameof(Compiler);
        public override string MNamespace => "MetaDslx.Bootstrap.MetaCompiler3.Model";
        public override __ModelVersion MVersion => default;
        public override string MUri => "MetaDslx.Bootstrap.MetaCompiler3.Model.Compiler";
        public override string MPrefix => "c";
        public override __Model MModel => _model;
    
        public override global::System.Collections.Immutable.ImmutableDictionary<__MetaType, __ModelEnumInfo> MEnumInfosByType => _enumInfosByType;
        public override global::System.Collections.Immutable.ImmutableDictionary<string, __ModelEnumInfo> MEnumInfosByName => _enumInfosByName;
        public override global::System.Collections.Immutable.ImmutableDictionary<__MetaType, __ModelClassInfo> MClassInfosByType => _classInfosByType;
        public override global::System.Collections.Immutable.ImmutableDictionary<string, __ModelClassInfo> MClassInfosByName => _classInfosByName;
    
        public override global::System.Collections.Immutable.ImmutableArray<__MetaType> MEnumTypes => _enumTypes;
        public override global::System.Collections.Immutable.ImmutableArray<__ModelEnumInfo> MEnumInfos => _enumInfos;
        public override global::System.Collections.Immutable.ImmutableArray<__MetaType> MClassTypes => _classTypes;
        public override global::System.Collections.Immutable.ImmutableArray<__ModelClassInfo> MClassInfos => _classInfos;
    
    
    
        public static __ModelEnumInfo AssignmentInfo => __Impl.__Assignment_Info.Instance;
        public static __ModelEnumInfo MultiplicityInfo => __Impl.__Multiplicity_Info.Instance;
        public static __ModelClassInfo AnnotationInfo => __Impl.Annotation_Impl.__Info.Instance;
        public static __ModelProperty Annotation_AttributeClass => _Annotation_AttributeClass;
        public static __ModelProperty Annotation_Arguments => _Annotation_Arguments;
        public static __ModelClassInfo AnnotationArgumentInfo => __Impl.AnnotationArgument_Impl.__Info.Instance;
        public static __ModelProperty AnnotationArgument_NamedParameter => _AnnotationArgument_NamedParameter;
        public static __ModelProperty AnnotationArgument_Parameter => _AnnotationArgument_Parameter;
        public static __ModelProperty AnnotationArgument_ParameterType => _AnnotationArgument_ParameterType;
        public static __ModelProperty AnnotationArgument_Value => _AnnotationArgument_Value;
        public static __ModelClassInfo ArrayExpressionInfo => __Impl.ArrayExpression_Impl.__Info.Instance;
        public static __ModelProperty ArrayExpression_Items => _ArrayExpression_Items;
        public static __ModelClassInfo BinderInfo => __Impl.Binder_Impl.__Info.Instance;
        public static __ModelProperty Binder_TypeName => _Binder_TypeName;
        public static __ModelProperty Binder_Arguments => _Binder_Arguments;
        public static __ModelProperty Binder_IsNegated => _Binder_IsNegated;
        public static __ModelProperty Binder_ConstructorArguments => _Binder_ConstructorArguments;
        public static __ModelClassInfo BinderArgumentInfo => __Impl.BinderArgument_Impl.__Info.Instance;
        public static __ModelProperty BinderArgument_Name => _BinderArgument_Name;
        public static __ModelProperty BinderArgument_TypeName => _BinderArgument_TypeName;
        public static __ModelProperty BinderArgument_IsArray => _BinderArgument_IsArray;
        public static __ModelProperty BinderArgument_Values => _BinderArgument_Values;
        public static __ModelClassInfo CSharpElementInfo => __Impl.CSharpElement_Impl.__Info.Instance;
        public static __ModelProperty CSharpElement_Annotations => _CSharpElement_Annotations;
        public static __ModelProperty CSharpElement_CSharpName => _CSharpElement_CSharpName;
        public static __ModelProperty CSharpElement_AntlrName => _CSharpElement_AntlrName;
        public static __ModelProperty CSharpElement_Binders => _CSharpElement_Binders;
        public static __ModelProperty CSharpElement_ContainsBinders => _CSharpElement_ContainsBinders;
        public static __ModelClassInfo DeclarationInfo => __Impl.Declaration_Impl.__Info.Instance;
        public static __ModelProperty Declaration_Name => _Declaration_Name;
        public static __ModelProperty Declaration_Parent => _Declaration_Parent;
        public static __ModelProperty Declaration_Declarations => _Declaration_Declarations;
        public static __ModelProperty Declaration_FullName => _Declaration_FullName;
        public static __ModelClassInfo AlternativeInfo => __Impl.Alternative_Impl.__Info.Instance;
        public static __ModelProperty Alternative_ReturnType => _Alternative_ReturnType;
        public static __ModelProperty Alternative_ReturnValue => _Alternative_ReturnValue;
        public static __ModelProperty Alternative_Elements => _Alternative_Elements;
        public static __ModelProperty Alternative_GreenName => _Alternative_GreenName;
        public static __ModelProperty Alternative_GreenConstructorParameters => _Alternative_GreenConstructorParameters;
        public static __ModelProperty Alternative_GreenConstructorArguments => _Alternative_GreenConstructorArguments;
        public static __ModelProperty Alternative_GreenUpdateParameters => _Alternative_GreenUpdateParameters;
        public static __ModelProperty Alternative_GreenUpdateArguments => _Alternative_GreenUpdateArguments;
        public static __ModelProperty Alternative_RedName => _Alternative_RedName;
        public static __ModelProperty Alternative_RedUpdateParameters => _Alternative_RedUpdateParameters;
        public static __ModelProperty Alternative_RedUpdateArguments => _Alternative_RedUpdateArguments;
        public static __ModelProperty Alternative_RedOptionalUpdateParameters => _Alternative_RedOptionalUpdateParameters;
        public static __ModelProperty Alternative_RedToGreenArgumentList => _Alternative_RedToGreenArgumentList;
        public static __ModelProperty Alternative_RedToGreenOptionalArgumentList => _Alternative_RedToGreenOptionalArgumentList;
        public static __ModelProperty Alternative_HasRedToGreenOptionalArguments => _Alternative_HasRedToGreenOptionalArguments;
        public static __ModelClassInfo ElementValueInfo => __Impl.ElementValue_Impl.__Info.Instance;
        public static __ModelProperty ElementValue_Multiplicity => _ElementValue_Multiplicity;
        public static __ModelProperty ElementValue_GreenType => _ElementValue_GreenType;
        public static __ModelProperty ElementValue_GreenSyntaxCondition => _ElementValue_GreenSyntaxCondition;
        public static __ModelProperty ElementValue_RedType => _ElementValue_RedType;
        public static __ModelClassInfo BlockInfo => __Impl.Block_Impl.__Info.Instance;
        public static __ModelProperty Block_GreenType => _Block_GreenType;
        public static __ModelProperty Block_GreenSyntaxCondition => _Block_GreenSyntaxCondition;
        public static __ModelProperty Block_RedType => _Block_RedType;
        public static __ModelClassInfo ElementInfo => __Impl.Element_Impl.__Info.Instance;
        public static __ModelProperty Element_Name => _Element_Name;
        public static __ModelProperty Element_Assignment => _Element_Assignment;
        public static __ModelProperty Element_Value => _Element_Value;
        public static __ModelProperty Element_IsToken => _Element_IsToken;
        public static __ModelProperty Element_IsList => _Element_IsList;
        public static __ModelProperty Element_FieldName => _Element_FieldName;
        public static __ModelProperty Element_ParameterName => _Element_ParameterName;
        public static __ModelProperty Element_PropertyName => _Element_PropertyName;
        public static __ModelProperty Element_GreenFieldType => _Element_GreenFieldType;
        public static __ModelProperty Element_GreenParameterValue => _Element_GreenParameterValue;
        public static __ModelProperty Element_GreenPropertyType => _Element_GreenPropertyType;
        public static __ModelProperty Element_GreenPropertyValue => _Element_GreenPropertyValue;
        public static __ModelProperty Element_GreenSyntaxNullCondition => _Element_GreenSyntaxNullCondition;
        public static __ModelProperty Element_GreenSyntaxCondition => _Element_GreenSyntaxCondition;
        public static __ModelProperty Element_IsOptionalUpdateParameter => _Element_IsOptionalUpdateParameter;
        public static __ModelProperty Element_RedFieldType => _Element_RedFieldType;
        public static __ModelProperty Element_RedParameterValue => _Element_RedParameterValue;
        public static __ModelProperty Element_RedPropertyType => _Element_RedPropertyType;
        public static __ModelProperty Element_RedPropertyValue => _Element_RedPropertyValue;
        public static __ModelProperty Element_RedToGreenArgument => _Element_RedToGreenArgument;
        public static __ModelProperty Element_RedToGreenOptionalArgument => _Element_RedToGreenOptionalArgument;
        public static __ModelProperty Element_RedSyntaxNullCondition => _Element_RedSyntaxNullCondition;
        public static __ModelProperty Element_RedSyntaxCondition => _Element_RedSyntaxCondition;
        public static __ModelProperty Element_VisitCall => _Element_VisitCall;
        public static __ModelClassInfo EofInfo => __Impl.Eof_Impl.__Info.Instance;
        public static __ModelProperty Eof_GreenType => _Eof_GreenType;
        public static __ModelProperty Eof_GreenSyntaxCondition => _Eof_GreenSyntaxCondition;
        public static __ModelProperty Eof_RedType => _Eof_RedType;
        public static __ModelClassInfo ExpressionInfo => __Impl.Expression_Impl.__Info.Instance;
        public static __ModelProperty Expression_Value => _Expression_Value;
        public static __ModelClassInfo FixedInfo => __Impl.Fixed_Impl.__Info.Instance;
        public static __ModelProperty Fixed_Text => _Fixed_Text;
        public static __ModelClassInfo GrammarRuleInfo => __Impl.GrammarRule_Impl.__Info.Instance;
        public static __ModelProperty GrammarRule_Language => _GrammarRule_Language;
        public static __ModelProperty GrammarRule_Grammar => _GrammarRule_Grammar;
        public static __ModelClassInfo LanguageInfo => __Impl.Language_Impl.__Info.Instance;
        public static __ModelProperty Language_Namespace => _Language_Namespace;
        public static __ModelProperty Language_BaseLanguages => _Language_BaseLanguages;
        public static __ModelProperty Language_Grammar => _Language_Grammar;
        public static __ModelClassInfo LexerRuleInfo => __Impl.LexerRule_Impl.__Info.Instance;
        public static __ModelProperty LexerRule_Alternatives => _LexerRule_Alternatives;
        public static __ModelProperty LexerRule_IsFixed => _LexerRule_IsFixed;
        public static __ModelProperty LexerRule_FixedText => _LexerRule_FixedText;
        public static __ModelClassInfo FragmentInfo => __Impl.Fragment_Impl.__Info.Instance;
        public static __ModelClassInfo GrammarInfo => __Impl.Grammar_Impl.__Info.Instance;
        public static __ModelProperty Grammar_Language => _Grammar_Language;
        public static __ModelProperty Grammar_GrammarRules => _Grammar_GrammarRules;
        public static __ModelProperty Grammar_TokenKinds => _Grammar_TokenKinds;
        public static __ModelProperty Grammar_Tokens => _Grammar_Tokens;
        public static __ModelProperty Grammar_Rules => _Grammar_Rules;
        public static __ModelProperty Grammar_Blocks => _Grammar_Blocks;
        public static __ModelProperty Grammar_DefaultWhitespace => _Grammar_DefaultWhitespace;
        public static __ModelProperty Grammar_DefaultEndOfLine => _Grammar_DefaultEndOfLine;
        public static __ModelProperty Grammar_DefaultSeparator => _Grammar_DefaultSeparator;
        public static __ModelProperty Grammar_DefaultIdentifier => _Grammar_DefaultIdentifier;
        public static __ModelProperty Grammar_MainRule => _Grammar_MainRule;
        public static __ModelClassInfo LAlternativeInfo => __Impl.LAlternative_Impl.__Info.Instance;
        public static __ModelProperty LAlternative_IsFixed => _LAlternative_IsFixed;
        public static __ModelProperty LAlternative_FixedText => _LAlternative_FixedText;
        public static __ModelProperty LAlternative_Elements => _LAlternative_Elements;
        public static __ModelClassInfo LElementInfo => __Impl.LElement_Impl.__Info.Instance;
        public static __ModelProperty LElement_IsFixed => _LElement_IsFixed;
        public static __ModelProperty LElement_FixedText => _LElement_FixedText;
        public static __ModelProperty LElement_IsNegated => _LElement_IsNegated;
        public static __ModelProperty LElement_Value => _LElement_Value;
        public static __ModelProperty LElement_Multiplicity => _LElement_Multiplicity;
        public static __ModelClassInfo LElementValueInfo => __Impl.LElementValue_Impl.__Info.Instance;
        public static __ModelProperty LElementValue_IsFixed => _LElementValue_IsFixed;
        public static __ModelProperty LElementValue_FixedText => _LElementValue_FixedText;
        public static __ModelClassInfo LBlockInfo => __Impl.LBlock_Impl.__Info.Instance;
        public static __ModelProperty LBlock_IsFixed => _LBlock_IsFixed;
        public static __ModelProperty LBlock_FixedText => _LBlock_FixedText;
        public static __ModelProperty LBlock_Alternatives => _LBlock_Alternatives;
        public static __ModelClassInfo LFixedInfo => __Impl.LFixed_Impl.__Info.Instance;
        public static __ModelProperty LFixed_IsFixed => _LFixed_IsFixed;
        public static __ModelProperty LFixed_FixedText => _LFixed_FixedText;
        public static __ModelProperty LFixed_Text => _LFixed_Text;
        public static __ModelClassInfo LRangeInfo => __Impl.LRange_Impl.__Info.Instance;
        public static __ModelProperty LRange_IsFixed => _LRange_IsFixed;
        public static __ModelProperty LRange_FixedText => _LRange_FixedText;
        public static __ModelProperty LRange_StartChar => _LRange_StartChar;
        public static __ModelProperty LRange_EndChar => _LRange_EndChar;
        public static __ModelClassInfo LReferenceInfo => __Impl.LReference_Impl.__Info.Instance;
        public static __ModelProperty LReference_IsFixed => _LReference_IsFixed;
        public static __ModelProperty LReference_FixedText => _LReference_FixedText;
        public static __ModelProperty LReference_Rule => _LReference_Rule;
        public static __ModelClassInfo LSetInfo => __Impl.LSet_Impl.__Info.Instance;
        public static __ModelProperty LSet_IsFixed => _LSet_IsFixed;
        public static __ModelProperty LSet_FixedText => _LSet_FixedText;
        public static __ModelProperty LSet_Items => _LSet_Items;
        public static __ModelClassInfo LSetItemInfo => __Impl.LSetItem_Impl.__Info.Instance;
        public static __ModelProperty LSetItem_IsFixed => _LSetItem_IsFixed;
        public static __ModelProperty LSetItem_FixedText => _LSetItem_FixedText;
        public static __ModelClassInfo LSetCharInfo => __Impl.LSetChar_Impl.__Info.Instance;
        public static __ModelProperty LSetChar_IsFixed => _LSetChar_IsFixed;
        public static __ModelProperty LSetChar_FixedText => _LSetChar_FixedText;
        public static __ModelProperty LSetChar_Char => _LSetChar_Char;
        public static __ModelClassInfo LSetRangeInfo => __Impl.LSetRange_Impl.__Info.Instance;
        public static __ModelProperty LSetRange_IsFixed => _LSetRange_IsFixed;
        public static __ModelProperty LSetRange_FixedText => _LSetRange_FixedText;
        public static __ModelProperty LSetRange_StartChar => _LSetRange_StartChar;
        public static __ModelProperty LSetRange_EndChar => _LSetRange_EndChar;
        public static __ModelClassInfo LWildCardInfo => __Impl.LWildCard_Impl.__Info.Instance;
        public static __ModelProperty LWildCard_IsFixed => _LWildCard_IsFixed;
        public static __ModelProperty LWildCard_FixedText => _LWildCard_FixedText;
        public static __ModelClassInfo NamespaceInfo => __Impl.Namespace_Impl.__Info.Instance;
        public static __ModelClassInfo RuleInfo => __Impl.Rule_Impl.__Info.Instance;
        public static __ModelProperty Rule_ReturnType => _Rule_ReturnType;
        public static __ModelProperty Rule_Alternatives => _Rule_Alternatives;
        public static __ModelProperty Rule_BaseRule => _Rule_BaseRule;
        public static __ModelProperty Rule_GreenName => _Rule_GreenName;
        public static __ModelProperty Rule_RedName => _Rule_RedName;
        public static __ModelClassInfo RuleRefInfo => __Impl.RuleRef_Impl.__Info.Instance;
        public static __ModelProperty RuleRef_GrammarRule => _RuleRef_GrammarRule;
        public static __ModelProperty RuleRef_ReferencedTypes => _RuleRef_ReferencedTypes;
        public static __ModelProperty RuleRef_Token => _RuleRef_Token;
        public static __ModelProperty RuleRef_Rule => _RuleRef_Rule;
        public static __ModelProperty RuleRef_GreenType => _RuleRef_GreenType;
        public static __ModelProperty RuleRef_GreenSyntaxCondition => _RuleRef_GreenSyntaxCondition;
        public static __ModelProperty RuleRef_RedType => _RuleRef_RedType;
        public static __ModelClassInfo SeparatedListInfo => __Impl.SeparatedList_Impl.__Info.Instance;
        public static __ModelProperty SeparatedList_SeparatorFirst => _SeparatedList_SeparatorFirst;
        public static __ModelProperty SeparatedList_RepeatedSeparatorFirst => _SeparatedList_RepeatedSeparatorFirst;
        public static __ModelProperty SeparatedList_FirstItems => _SeparatedList_FirstItems;
        public static __ModelProperty SeparatedList_FirstSeparators => _SeparatedList_FirstSeparators;
        public static __ModelProperty SeparatedList_RepeatedBlock => _SeparatedList_RepeatedBlock;
        public static __ModelProperty SeparatedList_RepeatedItem => _SeparatedList_RepeatedItem;
        public static __ModelProperty SeparatedList_RepeatedSeparator => _SeparatedList_RepeatedSeparator;
        public static __ModelProperty SeparatedList_LastItems => _SeparatedList_LastItems;
        public static __ModelProperty SeparatedList_LastSeparators => _SeparatedList_LastSeparators;
        public static __ModelProperty SeparatedList_GreenType => _SeparatedList_GreenType;
        public static __ModelProperty SeparatedList_GreenSyntaxCondition => _SeparatedList_GreenSyntaxCondition;
        public static __ModelProperty SeparatedList_RedType => _SeparatedList_RedType;
        public static __ModelClassInfo TokenInfo => __Impl.Token_Impl.__Info.Instance;
        public static __ModelProperty Token_ReturnType => _Token_ReturnType;
        public static __ModelProperty Token_IsTrivia => _Token_IsTrivia;
        public static __ModelProperty Token_TokenKind => _Token_TokenKind;
        public static __ModelClassInfo TokenAltsInfo => __Impl.TokenAlts_Impl.__Info.Instance;
        public static __ModelProperty TokenAlts_Tokens => _TokenAlts_Tokens;
        public static __ModelProperty TokenAlts_GreenType => _TokenAlts_GreenType;
        public static __ModelProperty TokenAlts_GreenSyntaxCondition => _TokenAlts_GreenSyntaxCondition;
        public static __ModelProperty TokenAlts_RedType => _TokenAlts_RedType;
        public static __ModelClassInfo TokenKindInfo => __Impl.TokenKind_Impl.__Info.Instance;
        public static __ModelProperty TokenKind_Name => _TokenKind_Name;
        public static __ModelProperty TokenKind_TypeName => _TokenKind_TypeName;
    }
}
