//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MetaLexer.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.Languages.MetaModel.Compiler {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public partial class MetaLexer : global::MetaDslx.CodeAnalysis.Parsers.Antlr.AntlrLexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LR_TComma=1, LR_TUtf8Bom=2, LR_KNamespace=3, LR_TSemicolon=4, LR_KUsing=5, 
		LR_KMetamodel=6, LR_KConst=7, LR_KEnum=8, LR_TLBrace=9, LR_TRBrace=10, 
		LR_KAbstract=11, LR_KClass=12, LR_TLParen=13, LR_TRParen=14, LR_TLBracket=15, 
		LR_TRBracket=16, LR_TQuestion=17, LR_KObject=18, LR_KBool=19, LR_KChar=20, 
		LR_KString=21, LR_KByte=22, LR_KSbyte=23, LR_KShort=24, LR_KUshort=25, 
		LR_KInt=26, LR_KUint=27, LR_KLong=28, LR_KUlong=29, LR_KFloat=30, LR_KDouble=31, 
		LR_KDecimal=32, LR_KType=33, LR_KSymbol=34, LR_KVoid=35, LR_TDollar=36, 
		LR_TColon=37, LR_KContains=38, LR_KDerived=39, LR_KOpposite=40, LR_KSubsets=41, 
		LR_KRedefines=42, LR_TDot=43, LR_TInteger=44, LR_TDecimal=45, LR_TIdentifier=46, 
		LR_TVerbatimIdentifier=47, LR_TString=48, LR_TWhitespace=49, LR_TLineEnd=50, 
		LR_TSingleLineComment=51, LR_TMultiLineComment=52, LR_TInvalidToken=53;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LR_TComma", "LR_TUtf8Bom", "LR_KNamespace", "LR_TSemicolon", "LR_KUsing", 
		"LR_KMetamodel", "LR_KConst", "LR_KEnum", "LR_TLBrace", "LR_TRBrace", 
		"LR_KAbstract", "LR_KClass", "LR_TLParen", "LR_TRParen", "LR_TLBracket", 
		"LR_TRBracket", "LR_TQuestion", "LR_KObject", "LR_KBool", "LR_KChar", 
		"LR_KString", "LR_KByte", "LR_KSbyte", "LR_KShort", "LR_KUshort", "LR_KInt", 
		"LR_KUint", "LR_KLong", "LR_KUlong", "LR_KFloat", "LR_KDouble", "LR_KDecimal", 
		"LR_KType", "LR_KSymbol", "LR_KVoid", "LR_TDollar", "LR_TColon", "LR_KContains", 
		"LR_KDerived", "LR_KOpposite", "LR_KSubsets", "LR_KRedefines", "LR_TDot", 
		"LR_TInteger", "LR_TDecimal", "LR_TIdentifier", "LR_TVerbatimIdentifier", 
		"LR_TString", "LR_TWhitespace", "LR_TLineEnd", "LR_TSingleLineComment", 
		"LR_TMultiLineComment", "LR_TInvalidToken", "FR_DoubleQuoteTextCharacter", 
		"FR_DoubleQuoteTextSimple", "FR_SingleQuoteTextCharacter", "FR_SingleQuoteTextSimple", 
		"FR_CharacterEscapeSimple", "FR_CharacterEscapeSimpleCharacter", "FR_CharacterEscapeUnicode", 
		"FR_HexDigit"
	};


	public MetaLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public MetaLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "','", null, "'namespace'", "';'", "'using'", "'metamodel'", "'const'", 
		"'enum'", "'{'", "'}'", "'abstract'", "'class'", "'('", "')'", "'['", 
		"']'", "'?'", "'object'", "'bool'", "'char'", "'string'", "'byte'", "'sbyte'", 
		"'short'", "'ushort'", "'int'", "'uint'", "'long'", "'ulong'", "'float'", 
		"'double'", "'decimal'", "'type'", "'symbol'", "'void'", "'$'", "':'", 
		"'contains'", "'derived'", "'opposite'", "'subsets'", "'redefines'", "'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LR_TComma", "LR_TUtf8Bom", "LR_KNamespace", "LR_TSemicolon", "LR_KUsing", 
		"LR_KMetamodel", "LR_KConst", "LR_KEnum", "LR_TLBrace", "LR_TRBrace", 
		"LR_KAbstract", "LR_KClass", "LR_TLParen", "LR_TRParen", "LR_TLBracket", 
		"LR_TRBracket", "LR_TQuestion", "LR_KObject", "LR_KBool", "LR_KChar", 
		"LR_KString", "LR_KByte", "LR_KSbyte", "LR_KShort", "LR_KUshort", "LR_KInt", 
		"LR_KUint", "LR_KLong", "LR_KUlong", "LR_KFloat", "LR_KDouble", "LR_KDecimal", 
		"LR_KType", "LR_KSymbol", "LR_KVoid", "LR_TDollar", "LR_TColon", "LR_KContains", 
		"LR_KDerived", "LR_KOpposite", "LR_KSubsets", "LR_KRedefines", "LR_TDot", 
		"LR_TInteger", "LR_TDecimal", "LR_TIdentifier", "LR_TVerbatimIdentifier", 
		"LR_TString", "LR_TWhitespace", "LR_TLineEnd", "LR_TSingleLineComment", 
		"LR_TMultiLineComment", "LR_TInvalidToken"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MetaLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static MetaLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,53,508,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,1,0,1,0,1,1,1,1,1,1,1,1,1,
		1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,
		1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,
		6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,
		10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,
		14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,
		18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,
		20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,
		23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,
		25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,
		28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,
		30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,
		32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,
		35,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,
		38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,
		39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,
		41,1,41,1,41,1,41,1,41,1,42,1,42,1,43,1,43,1,43,5,43,359,8,43,10,43,12,
		43,362,9,43,3,43,364,8,43,1,44,1,44,1,44,5,44,369,8,44,10,44,12,44,372,
		9,44,3,44,374,8,44,1,44,1,44,4,44,378,8,44,11,44,12,44,379,1,45,4,45,383,
		8,45,11,45,12,45,384,1,45,5,45,388,8,45,10,45,12,45,391,9,45,1,46,1,46,
		4,46,395,8,46,11,46,12,46,396,1,46,5,46,400,8,46,10,46,12,46,403,9,46,
		1,47,1,47,5,47,407,8,47,10,47,12,47,410,9,47,1,47,1,47,1,47,5,47,415,8,
		47,10,47,12,47,418,9,47,1,47,3,47,421,8,47,1,48,4,48,424,8,48,11,48,12,
		48,425,1,48,1,48,1,49,1,49,1,49,3,49,433,8,49,1,49,1,49,1,50,1,50,1,50,
		1,50,5,50,441,8,50,10,50,12,50,444,9,50,1,50,1,50,1,51,1,51,1,51,1,51,
		5,51,452,8,51,10,51,12,51,455,9,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,
		1,52,1,52,1,53,1,53,1,53,3,53,469,8,53,1,54,1,54,1,55,1,55,1,55,3,55,476,
		8,55,1,56,1,56,1,57,1,57,1,57,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,
		1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,
		3,59,505,8,59,1,60,1,60,1,453,0,61,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
		17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
		41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,
		65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,
		89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,0,109,0,111,
		0,113,0,115,0,117,0,119,0,121,0,1,0,8,3,0,65,90,95,95,97,122,4,0,48,57,
		65,90,95,95,97,122,2,0,9,9,32,32,2,0,10,10,13,13,6,0,10,10,13,13,34,34,
		92,92,133,133,8232,8233,6,0,10,10,13,13,39,39,92,92,133,133,8232,8233,
		10,0,34,34,39,39,48,48,92,92,97,98,102,102,110,110,114,114,116,116,118,
		118,3,0,48,57,65,70,97,102,520,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
		1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
		0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
		1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
		0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
		1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
		0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
		1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,
		0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
		1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,
		0,0,0,1,123,1,0,0,0,3,125,1,0,0,0,5,131,1,0,0,0,7,141,1,0,0,0,9,143,1,
		0,0,0,11,149,1,0,0,0,13,159,1,0,0,0,15,165,1,0,0,0,17,170,1,0,0,0,19,172,
		1,0,0,0,21,174,1,0,0,0,23,183,1,0,0,0,25,189,1,0,0,0,27,191,1,0,0,0,29,
		193,1,0,0,0,31,195,1,0,0,0,33,197,1,0,0,0,35,199,1,0,0,0,37,206,1,0,0,
		0,39,211,1,0,0,0,41,216,1,0,0,0,43,223,1,0,0,0,45,228,1,0,0,0,47,234,1,
		0,0,0,49,240,1,0,0,0,51,247,1,0,0,0,53,251,1,0,0,0,55,256,1,0,0,0,57,261,
		1,0,0,0,59,267,1,0,0,0,61,273,1,0,0,0,63,280,1,0,0,0,65,288,1,0,0,0,67,
		293,1,0,0,0,69,300,1,0,0,0,71,305,1,0,0,0,73,307,1,0,0,0,75,309,1,0,0,
		0,77,318,1,0,0,0,79,326,1,0,0,0,81,335,1,0,0,0,83,343,1,0,0,0,85,353,1,
		0,0,0,87,363,1,0,0,0,89,373,1,0,0,0,91,382,1,0,0,0,93,392,1,0,0,0,95,420,
		1,0,0,0,97,423,1,0,0,0,99,432,1,0,0,0,101,436,1,0,0,0,103,447,1,0,0,0,
		105,461,1,0,0,0,107,468,1,0,0,0,109,470,1,0,0,0,111,475,1,0,0,0,113,477,
		1,0,0,0,115,479,1,0,0,0,117,482,1,0,0,0,119,504,1,0,0,0,121,506,1,0,0,
		0,123,124,5,44,0,0,124,2,1,0,0,0,125,126,5,239,0,0,126,127,5,187,0,0,127,
		128,5,191,0,0,128,129,1,0,0,0,129,130,6,1,0,0,130,4,1,0,0,0,131,132,5,
		110,0,0,132,133,5,97,0,0,133,134,5,109,0,0,134,135,5,101,0,0,135,136,5,
		115,0,0,136,137,5,112,0,0,137,138,5,97,0,0,138,139,5,99,0,0,139,140,5,
		101,0,0,140,6,1,0,0,0,141,142,5,59,0,0,142,8,1,0,0,0,143,144,5,117,0,0,
		144,145,5,115,0,0,145,146,5,105,0,0,146,147,5,110,0,0,147,148,5,103,0,
		0,148,10,1,0,0,0,149,150,5,109,0,0,150,151,5,101,0,0,151,152,5,116,0,0,
		152,153,5,97,0,0,153,154,5,109,0,0,154,155,5,111,0,0,155,156,5,100,0,0,
		156,157,5,101,0,0,157,158,5,108,0,0,158,12,1,0,0,0,159,160,5,99,0,0,160,
		161,5,111,0,0,161,162,5,110,0,0,162,163,5,115,0,0,163,164,5,116,0,0,164,
		14,1,0,0,0,165,166,5,101,0,0,166,167,5,110,0,0,167,168,5,117,0,0,168,169,
		5,109,0,0,169,16,1,0,0,0,170,171,5,123,0,0,171,18,1,0,0,0,172,173,5,125,
		0,0,173,20,1,0,0,0,174,175,5,97,0,0,175,176,5,98,0,0,176,177,5,115,0,0,
		177,178,5,116,0,0,178,179,5,114,0,0,179,180,5,97,0,0,180,181,5,99,0,0,
		181,182,5,116,0,0,182,22,1,0,0,0,183,184,5,99,0,0,184,185,5,108,0,0,185,
		186,5,97,0,0,186,187,5,115,0,0,187,188,5,115,0,0,188,24,1,0,0,0,189,190,
		5,40,0,0,190,26,1,0,0,0,191,192,5,41,0,0,192,28,1,0,0,0,193,194,5,91,0,
		0,194,30,1,0,0,0,195,196,5,93,0,0,196,32,1,0,0,0,197,198,5,63,0,0,198,
		34,1,0,0,0,199,200,5,111,0,0,200,201,5,98,0,0,201,202,5,106,0,0,202,203,
		5,101,0,0,203,204,5,99,0,0,204,205,5,116,0,0,205,36,1,0,0,0,206,207,5,
		98,0,0,207,208,5,111,0,0,208,209,5,111,0,0,209,210,5,108,0,0,210,38,1,
		0,0,0,211,212,5,99,0,0,212,213,5,104,0,0,213,214,5,97,0,0,214,215,5,114,
		0,0,215,40,1,0,0,0,216,217,5,115,0,0,217,218,5,116,0,0,218,219,5,114,0,
		0,219,220,5,105,0,0,220,221,5,110,0,0,221,222,5,103,0,0,222,42,1,0,0,0,
		223,224,5,98,0,0,224,225,5,121,0,0,225,226,5,116,0,0,226,227,5,101,0,0,
		227,44,1,0,0,0,228,229,5,115,0,0,229,230,5,98,0,0,230,231,5,121,0,0,231,
		232,5,116,0,0,232,233,5,101,0,0,233,46,1,0,0,0,234,235,5,115,0,0,235,236,
		5,104,0,0,236,237,5,111,0,0,237,238,5,114,0,0,238,239,5,116,0,0,239,48,
		1,0,0,0,240,241,5,117,0,0,241,242,5,115,0,0,242,243,5,104,0,0,243,244,
		5,111,0,0,244,245,5,114,0,0,245,246,5,116,0,0,246,50,1,0,0,0,247,248,5,
		105,0,0,248,249,5,110,0,0,249,250,5,116,0,0,250,52,1,0,0,0,251,252,5,117,
		0,0,252,253,5,105,0,0,253,254,5,110,0,0,254,255,5,116,0,0,255,54,1,0,0,
		0,256,257,5,108,0,0,257,258,5,111,0,0,258,259,5,110,0,0,259,260,5,103,
		0,0,260,56,1,0,0,0,261,262,5,117,0,0,262,263,5,108,0,0,263,264,5,111,0,
		0,264,265,5,110,0,0,265,266,5,103,0,0,266,58,1,0,0,0,267,268,5,102,0,0,
		268,269,5,108,0,0,269,270,5,111,0,0,270,271,5,97,0,0,271,272,5,116,0,0,
		272,60,1,0,0,0,273,274,5,100,0,0,274,275,5,111,0,0,275,276,5,117,0,0,276,
		277,5,98,0,0,277,278,5,108,0,0,278,279,5,101,0,0,279,62,1,0,0,0,280,281,
		5,100,0,0,281,282,5,101,0,0,282,283,5,99,0,0,283,284,5,105,0,0,284,285,
		5,109,0,0,285,286,5,97,0,0,286,287,5,108,0,0,287,64,1,0,0,0,288,289,5,
		116,0,0,289,290,5,121,0,0,290,291,5,112,0,0,291,292,5,101,0,0,292,66,1,
		0,0,0,293,294,5,115,0,0,294,295,5,121,0,0,295,296,5,109,0,0,296,297,5,
		98,0,0,297,298,5,111,0,0,298,299,5,108,0,0,299,68,1,0,0,0,300,301,5,118,
		0,0,301,302,5,111,0,0,302,303,5,105,0,0,303,304,5,100,0,0,304,70,1,0,0,
		0,305,306,5,36,0,0,306,72,1,0,0,0,307,308,5,58,0,0,308,74,1,0,0,0,309,
		310,5,99,0,0,310,311,5,111,0,0,311,312,5,110,0,0,312,313,5,116,0,0,313,
		314,5,97,0,0,314,315,5,105,0,0,315,316,5,110,0,0,316,317,5,115,0,0,317,
		76,1,0,0,0,318,319,5,100,0,0,319,320,5,101,0,0,320,321,5,114,0,0,321,322,
		5,105,0,0,322,323,5,118,0,0,323,324,5,101,0,0,324,325,5,100,0,0,325,78,
		1,0,0,0,326,327,5,111,0,0,327,328,5,112,0,0,328,329,5,112,0,0,329,330,
		5,111,0,0,330,331,5,115,0,0,331,332,5,105,0,0,332,333,5,116,0,0,333,334,
		5,101,0,0,334,80,1,0,0,0,335,336,5,115,0,0,336,337,5,117,0,0,337,338,5,
		98,0,0,338,339,5,115,0,0,339,340,5,101,0,0,340,341,5,116,0,0,341,342,5,
		115,0,0,342,82,1,0,0,0,343,344,5,114,0,0,344,345,5,101,0,0,345,346,5,100,
		0,0,346,347,5,101,0,0,347,348,5,102,0,0,348,349,5,105,0,0,349,350,5,110,
		0,0,350,351,5,101,0,0,351,352,5,115,0,0,352,84,1,0,0,0,353,354,5,46,0,
		0,354,86,1,0,0,0,355,364,5,48,0,0,356,360,2,49,57,0,357,359,2,48,57,0,
		358,357,1,0,0,0,359,362,1,0,0,0,360,358,1,0,0,0,360,361,1,0,0,0,361,364,
		1,0,0,0,362,360,1,0,0,0,363,355,1,0,0,0,363,356,1,0,0,0,364,88,1,0,0,0,
		365,374,5,48,0,0,366,370,2,49,57,0,367,369,2,48,57,0,368,367,1,0,0,0,369,
		372,1,0,0,0,370,368,1,0,0,0,370,371,1,0,0,0,371,374,1,0,0,0,372,370,1,
		0,0,0,373,365,1,0,0,0,373,366,1,0,0,0,374,375,1,0,0,0,375,377,5,46,0,0,
		376,378,2,48,57,0,377,376,1,0,0,0,378,379,1,0,0,0,379,377,1,0,0,0,379,
		380,1,0,0,0,380,90,1,0,0,0,381,383,7,0,0,0,382,381,1,0,0,0,383,384,1,0,
		0,0,384,382,1,0,0,0,384,385,1,0,0,0,385,389,1,0,0,0,386,388,7,1,0,0,387,
		386,1,0,0,0,388,391,1,0,0,0,389,387,1,0,0,0,389,390,1,0,0,0,390,92,1,0,
		0,0,391,389,1,0,0,0,392,394,5,64,0,0,393,395,7,0,0,0,394,393,1,0,0,0,395,
		396,1,0,0,0,396,394,1,0,0,0,396,397,1,0,0,0,397,401,1,0,0,0,398,400,7,
		1,0,0,399,398,1,0,0,0,400,403,1,0,0,0,401,399,1,0,0,0,401,402,1,0,0,0,
		402,94,1,0,0,0,403,401,1,0,0,0,404,408,5,34,0,0,405,407,3,107,53,0,406,
		405,1,0,0,0,407,410,1,0,0,0,408,406,1,0,0,0,408,409,1,0,0,0,409,411,1,
		0,0,0,410,408,1,0,0,0,411,421,5,34,0,0,412,416,5,39,0,0,413,415,3,111,
		55,0,414,413,1,0,0,0,415,418,1,0,0,0,416,414,1,0,0,0,416,417,1,0,0,0,417,
		419,1,0,0,0,418,416,1,0,0,0,419,421,5,39,0,0,420,404,1,0,0,0,420,412,1,
		0,0,0,421,96,1,0,0,0,422,424,7,2,0,0,423,422,1,0,0,0,424,425,1,0,0,0,425,
		423,1,0,0,0,425,426,1,0,0,0,426,427,1,0,0,0,427,428,6,48,0,0,428,98,1,
		0,0,0,429,430,5,13,0,0,430,433,5,10,0,0,431,433,7,3,0,0,432,429,1,0,0,
		0,432,431,1,0,0,0,433,434,1,0,0,0,434,435,6,49,0,0,435,100,1,0,0,0,436,
		437,5,47,0,0,437,438,5,47,0,0,438,442,1,0,0,0,439,441,8,3,0,0,440,439,
		1,0,0,0,441,444,1,0,0,0,442,440,1,0,0,0,442,443,1,0,0,0,443,445,1,0,0,
		0,444,442,1,0,0,0,445,446,6,50,0,0,446,102,1,0,0,0,447,448,5,47,0,0,448,
		449,5,42,0,0,449,453,1,0,0,0,450,452,9,0,0,0,451,450,1,0,0,0,452,455,1,
		0,0,0,453,454,1,0,0,0,453,451,1,0,0,0,454,456,1,0,0,0,455,453,1,0,0,0,
		456,457,5,42,0,0,457,458,5,47,0,0,458,459,1,0,0,0,459,460,6,51,0,0,460,
		104,1,0,0,0,461,462,9,0,0,0,462,463,1,0,0,0,463,464,6,52,0,0,464,106,1,
		0,0,0,465,469,3,109,54,0,466,469,3,115,57,0,467,469,3,119,59,0,468,465,
		1,0,0,0,468,466,1,0,0,0,468,467,1,0,0,0,469,108,1,0,0,0,470,471,8,4,0,
		0,471,110,1,0,0,0,472,476,3,113,56,0,473,476,3,115,57,0,474,476,3,119,
		59,0,475,472,1,0,0,0,475,473,1,0,0,0,475,474,1,0,0,0,476,112,1,0,0,0,477,
		478,8,5,0,0,478,114,1,0,0,0,479,480,5,92,0,0,480,481,3,117,58,0,481,116,
		1,0,0,0,482,483,7,6,0,0,483,118,1,0,0,0,484,485,5,92,0,0,485,486,5,117,
		0,0,486,487,1,0,0,0,487,488,3,121,60,0,488,489,3,121,60,0,489,490,3,121,
		60,0,490,491,3,121,60,0,491,505,1,0,0,0,492,493,5,92,0,0,493,494,5,85,
		0,0,494,495,1,0,0,0,495,496,3,121,60,0,496,497,3,121,60,0,497,498,3,121,
		60,0,498,499,3,121,60,0,499,500,3,121,60,0,500,501,3,121,60,0,501,502,
		3,121,60,0,502,503,3,121,60,0,503,505,1,0,0,0,504,484,1,0,0,0,504,492,
		1,0,0,0,505,120,1,0,0,0,506,507,7,7,0,0,507,122,1,0,0,0,20,0,360,363,370,
		373,379,384,389,396,401,408,416,420,425,432,442,453,468,475,504,1,0,1,
		0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace MetaDslx.Languages.MetaModel.Compiler
