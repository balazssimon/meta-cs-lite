//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MetaLexer.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MetaDslx.Languages.MetaModel.Compiler {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public partial class MetaLexer : global::MetaDslx.CodeAnalysis.Parsers.Antlr.AntlrLexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LR_TComma=1, LR_TUtf8Bom=2, LR_KNamespace=3, LR_TSemicolon=4, LR_KUsing=5, 
		LR_KMetamodel=6, LR_KConst=7, LR_KEnum=8, LR_KAbstract=9, LR_KClass=10, 
		LR_TLParen=11, LR_TRParen=12, LR_TLBracket=13, LR_TRBracket=14, LR_TQuestion=15, 
		LR_KObject=16, LR_KBool=17, LR_KChar=18, LR_KString=19, LR_KByte=20, LR_KSbyte=21, 
		LR_KShort=22, LR_KUshort=23, LR_KInt=24, LR_KUint=25, LR_KLong=26, LR_KUlong=27, 
		LR_KFloat=28, LR_KDouble=29, LR_KDecimal=30, LR_KType=31, LR_KSymbol=32, 
		LR_KVoid=33, LR_KUri=34, LR_TLBrace=35, LR_TRBrace=36, LR_TDollar=37, 
		LR_TColon=38, LR_KContains=39, LR_KDerived=40, LR_KOpposite=41, LR_KSubsets=42, 
		LR_KRedefines=43, LR_TDot=44, LR_TInteger=45, LR_TDecimal=46, LR_TIdentifier=47, 
		LR_TVerbatimIdentifier=48, LR_TString=49, LR_TWhitespace=50, LR_TLineEnd=51, 
		LR_TSingleLineComment=52, LR_TMultiLineComment=53, LR_TInvalidToken=54;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LR_TComma", "LR_TUtf8Bom", "LR_KNamespace", "LR_TSemicolon", "LR_KUsing", 
		"LR_KMetamodel", "LR_KConst", "LR_KEnum", "LR_KAbstract", "LR_KClass", 
		"LR_TLParen", "LR_TRParen", "LR_TLBracket", "LR_TRBracket", "LR_TQuestion", 
		"LR_KObject", "LR_KBool", "LR_KChar", "LR_KString", "LR_KByte", "LR_KSbyte", 
		"LR_KShort", "LR_KUshort", "LR_KInt", "LR_KUint", "LR_KLong", "LR_KUlong", 
		"LR_KFloat", "LR_KDouble", "LR_KDecimal", "LR_KType", "LR_KSymbol", "LR_KVoid", 
		"LR_KUri", "LR_TLBrace", "LR_TRBrace", "LR_TDollar", "LR_TColon", "LR_KContains", 
		"LR_KDerived", "LR_KOpposite", "LR_KSubsets", "LR_KRedefines", "LR_TDot", 
		"LR_TInteger", "LR_TDecimal", "LR_TIdentifier", "LR_TVerbatimIdentifier", 
		"LR_TString", "LR_TWhitespace", "LR_TLineEnd", "LR_TSingleLineComment", 
		"LR_TMultiLineComment", "LR_TInvalidToken", "FR_DoubleQuoteTextCharacter", 
		"FR_DoubleQuoteTextSimple", "FR_SingleQuoteTextCharacter", "FR_SingleQuoteTextSimple", 
		"FR_CharacterEscapeSimple", "FR_CharacterEscapeSimpleCharacter", "FR_CharacterEscapeUnicode", 
		"FR_HexDigit"
	};


	public MetaLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public MetaLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "','", null, "'namespace'", "';'", "'using'", "'metamodel'", "'const'", 
		"'enum'", "'abstract'", "'class'", "'('", "')'", "'['", "']'", "'?'", 
		"'object'", "'bool'", "'char'", "'string'", "'byte'", "'sbyte'", "'short'", 
		"'ushort'", "'int'", "'uint'", "'long'", "'ulong'", "'float'", "'double'", 
		"'decimal'", "'type'", "'symbol'", "'void'", "'uri'", "'{'", "'}'", "'$'", 
		"':'", "'contains'", "'derived'", "'opposite'", "'subsets'", "'redefines'", 
		"'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LR_TComma", "LR_TUtf8Bom", "LR_KNamespace", "LR_TSemicolon", "LR_KUsing", 
		"LR_KMetamodel", "LR_KConst", "LR_KEnum", "LR_KAbstract", "LR_KClass", 
		"LR_TLParen", "LR_TRParen", "LR_TLBracket", "LR_TRBracket", "LR_TQuestion", 
		"LR_KObject", "LR_KBool", "LR_KChar", "LR_KString", "LR_KByte", "LR_KSbyte", 
		"LR_KShort", "LR_KUshort", "LR_KInt", "LR_KUint", "LR_KLong", "LR_KUlong", 
		"LR_KFloat", "LR_KDouble", "LR_KDecimal", "LR_KType", "LR_KSymbol", "LR_KVoid", 
		"LR_KUri", "LR_TLBrace", "LR_TRBrace", "LR_TDollar", "LR_TColon", "LR_KContains", 
		"LR_KDerived", "LR_KOpposite", "LR_KSubsets", "LR_KRedefines", "LR_TDot", 
		"LR_TInteger", "LR_TDecimal", "LR_TIdentifier", "LR_TVerbatimIdentifier", 
		"LR_TString", "LR_TWhitespace", "LR_TLineEnd", "LR_TSingleLineComment", 
		"LR_TMultiLineComment", "LR_TInvalidToken"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MetaLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static MetaLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,54,514,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,1,0,1,0,1,1,1,1,
		1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,
		4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,
		1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
		9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,
		1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,
		1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,
		1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,
		1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,
		1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,
		1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,
		1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,
		1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,34,1,34,
		1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
		1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,
		1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,
		1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,44,1,44,1,44,5,44,
		365,8,44,10,44,12,44,368,9,44,3,44,370,8,44,1,45,1,45,1,45,5,45,375,8,
		45,10,45,12,45,378,9,45,3,45,380,8,45,1,45,1,45,4,45,384,8,45,11,45,12,
		45,385,1,46,4,46,389,8,46,11,46,12,46,390,1,46,5,46,394,8,46,10,46,12,
		46,397,9,46,1,47,1,47,4,47,401,8,47,11,47,12,47,402,1,47,5,47,406,8,47,
		10,47,12,47,409,9,47,1,48,1,48,5,48,413,8,48,10,48,12,48,416,9,48,1,48,
		1,48,1,48,5,48,421,8,48,10,48,12,48,424,9,48,1,48,3,48,427,8,48,1,49,4,
		49,430,8,49,11,49,12,49,431,1,49,1,49,1,50,1,50,1,50,3,50,439,8,50,1,50,
		1,50,1,51,1,51,1,51,1,51,5,51,447,8,51,10,51,12,51,450,9,51,1,51,1,51,
		1,52,1,52,1,52,1,52,5,52,458,8,52,10,52,12,52,461,9,52,1,52,1,52,1,52,
		1,52,1,52,1,53,1,53,1,53,1,53,1,54,1,54,1,54,3,54,475,8,54,1,55,1,55,1,
		56,1,56,1,56,3,56,482,8,56,1,57,1,57,1,58,1,58,1,58,1,59,1,59,1,60,1,60,
		1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,
		1,60,1,60,1,60,1,60,3,60,511,8,60,1,61,1,61,1,459,0,62,1,1,3,2,5,3,7,4,
		9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
		35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
		59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,
		83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,
		53,107,54,109,0,111,0,113,0,115,0,117,0,119,0,121,0,123,0,1,0,8,3,0,65,
		90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,9,9,32,32,2,0,10,10,13,
		13,6,0,10,10,13,13,34,34,92,92,133,133,8232,8233,6,0,10,10,13,13,39,39,
		92,92,133,133,8232,8233,10,0,34,34,39,39,48,48,92,92,97,98,102,102,110,
		110,114,114,116,116,118,118,3,0,48,57,65,70,97,102,526,0,1,1,0,0,0,0,3,
		1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,
		0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
		1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,
		0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,
		1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,
		0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
		1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,
		0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,
		1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,
		0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,1,125,1,0,0,0,3,127,1,0,
		0,0,5,133,1,0,0,0,7,143,1,0,0,0,9,145,1,0,0,0,11,151,1,0,0,0,13,161,1,
		0,0,0,15,167,1,0,0,0,17,172,1,0,0,0,19,181,1,0,0,0,21,187,1,0,0,0,23,189,
		1,0,0,0,25,191,1,0,0,0,27,193,1,0,0,0,29,195,1,0,0,0,31,197,1,0,0,0,33,
		204,1,0,0,0,35,209,1,0,0,0,37,214,1,0,0,0,39,221,1,0,0,0,41,226,1,0,0,
		0,43,232,1,0,0,0,45,238,1,0,0,0,47,245,1,0,0,0,49,249,1,0,0,0,51,254,1,
		0,0,0,53,259,1,0,0,0,55,265,1,0,0,0,57,271,1,0,0,0,59,278,1,0,0,0,61,286,
		1,0,0,0,63,291,1,0,0,0,65,298,1,0,0,0,67,303,1,0,0,0,69,307,1,0,0,0,71,
		309,1,0,0,0,73,311,1,0,0,0,75,313,1,0,0,0,77,315,1,0,0,0,79,324,1,0,0,
		0,81,332,1,0,0,0,83,341,1,0,0,0,85,349,1,0,0,0,87,359,1,0,0,0,89,369,1,
		0,0,0,91,379,1,0,0,0,93,388,1,0,0,0,95,398,1,0,0,0,97,426,1,0,0,0,99,429,
		1,0,0,0,101,438,1,0,0,0,103,442,1,0,0,0,105,453,1,0,0,0,107,467,1,0,0,
		0,109,474,1,0,0,0,111,476,1,0,0,0,113,481,1,0,0,0,115,483,1,0,0,0,117,
		485,1,0,0,0,119,488,1,0,0,0,121,510,1,0,0,0,123,512,1,0,0,0,125,126,5,
		44,0,0,126,2,1,0,0,0,127,128,5,239,0,0,128,129,5,187,0,0,129,130,5,191,
		0,0,130,131,1,0,0,0,131,132,6,1,0,0,132,4,1,0,0,0,133,134,5,110,0,0,134,
		135,5,97,0,0,135,136,5,109,0,0,136,137,5,101,0,0,137,138,5,115,0,0,138,
		139,5,112,0,0,139,140,5,97,0,0,140,141,5,99,0,0,141,142,5,101,0,0,142,
		6,1,0,0,0,143,144,5,59,0,0,144,8,1,0,0,0,145,146,5,117,0,0,146,147,5,115,
		0,0,147,148,5,105,0,0,148,149,5,110,0,0,149,150,5,103,0,0,150,10,1,0,0,
		0,151,152,5,109,0,0,152,153,5,101,0,0,153,154,5,116,0,0,154,155,5,97,0,
		0,155,156,5,109,0,0,156,157,5,111,0,0,157,158,5,100,0,0,158,159,5,101,
		0,0,159,160,5,108,0,0,160,12,1,0,0,0,161,162,5,99,0,0,162,163,5,111,0,
		0,163,164,5,110,0,0,164,165,5,115,0,0,165,166,5,116,0,0,166,14,1,0,0,0,
		167,168,5,101,0,0,168,169,5,110,0,0,169,170,5,117,0,0,170,171,5,109,0,
		0,171,16,1,0,0,0,172,173,5,97,0,0,173,174,5,98,0,0,174,175,5,115,0,0,175,
		176,5,116,0,0,176,177,5,114,0,0,177,178,5,97,0,0,178,179,5,99,0,0,179,
		180,5,116,0,0,180,18,1,0,0,0,181,182,5,99,0,0,182,183,5,108,0,0,183,184,
		5,97,0,0,184,185,5,115,0,0,185,186,5,115,0,0,186,20,1,0,0,0,187,188,5,
		40,0,0,188,22,1,0,0,0,189,190,5,41,0,0,190,24,1,0,0,0,191,192,5,91,0,0,
		192,26,1,0,0,0,193,194,5,93,0,0,194,28,1,0,0,0,195,196,5,63,0,0,196,30,
		1,0,0,0,197,198,5,111,0,0,198,199,5,98,0,0,199,200,5,106,0,0,200,201,5,
		101,0,0,201,202,5,99,0,0,202,203,5,116,0,0,203,32,1,0,0,0,204,205,5,98,
		0,0,205,206,5,111,0,0,206,207,5,111,0,0,207,208,5,108,0,0,208,34,1,0,0,
		0,209,210,5,99,0,0,210,211,5,104,0,0,211,212,5,97,0,0,212,213,5,114,0,
		0,213,36,1,0,0,0,214,215,5,115,0,0,215,216,5,116,0,0,216,217,5,114,0,0,
		217,218,5,105,0,0,218,219,5,110,0,0,219,220,5,103,0,0,220,38,1,0,0,0,221,
		222,5,98,0,0,222,223,5,121,0,0,223,224,5,116,0,0,224,225,5,101,0,0,225,
		40,1,0,0,0,226,227,5,115,0,0,227,228,5,98,0,0,228,229,5,121,0,0,229,230,
		5,116,0,0,230,231,5,101,0,0,231,42,1,0,0,0,232,233,5,115,0,0,233,234,5,
		104,0,0,234,235,5,111,0,0,235,236,5,114,0,0,236,237,5,116,0,0,237,44,1,
		0,0,0,238,239,5,117,0,0,239,240,5,115,0,0,240,241,5,104,0,0,241,242,5,
		111,0,0,242,243,5,114,0,0,243,244,5,116,0,0,244,46,1,0,0,0,245,246,5,105,
		0,0,246,247,5,110,0,0,247,248,5,116,0,0,248,48,1,0,0,0,249,250,5,117,0,
		0,250,251,5,105,0,0,251,252,5,110,0,0,252,253,5,116,0,0,253,50,1,0,0,0,
		254,255,5,108,0,0,255,256,5,111,0,0,256,257,5,110,0,0,257,258,5,103,0,
		0,258,52,1,0,0,0,259,260,5,117,0,0,260,261,5,108,0,0,261,262,5,111,0,0,
		262,263,5,110,0,0,263,264,5,103,0,0,264,54,1,0,0,0,265,266,5,102,0,0,266,
		267,5,108,0,0,267,268,5,111,0,0,268,269,5,97,0,0,269,270,5,116,0,0,270,
		56,1,0,0,0,271,272,5,100,0,0,272,273,5,111,0,0,273,274,5,117,0,0,274,275,
		5,98,0,0,275,276,5,108,0,0,276,277,5,101,0,0,277,58,1,0,0,0,278,279,5,
		100,0,0,279,280,5,101,0,0,280,281,5,99,0,0,281,282,5,105,0,0,282,283,5,
		109,0,0,283,284,5,97,0,0,284,285,5,108,0,0,285,60,1,0,0,0,286,287,5,116,
		0,0,287,288,5,121,0,0,288,289,5,112,0,0,289,290,5,101,0,0,290,62,1,0,0,
		0,291,292,5,115,0,0,292,293,5,121,0,0,293,294,5,109,0,0,294,295,5,98,0,
		0,295,296,5,111,0,0,296,297,5,108,0,0,297,64,1,0,0,0,298,299,5,118,0,0,
		299,300,5,111,0,0,300,301,5,105,0,0,301,302,5,100,0,0,302,66,1,0,0,0,303,
		304,5,117,0,0,304,305,5,114,0,0,305,306,5,105,0,0,306,68,1,0,0,0,307,308,
		5,123,0,0,308,70,1,0,0,0,309,310,5,125,0,0,310,72,1,0,0,0,311,312,5,36,
		0,0,312,74,1,0,0,0,313,314,5,58,0,0,314,76,1,0,0,0,315,316,5,99,0,0,316,
		317,5,111,0,0,317,318,5,110,0,0,318,319,5,116,0,0,319,320,5,97,0,0,320,
		321,5,105,0,0,321,322,5,110,0,0,322,323,5,115,0,0,323,78,1,0,0,0,324,325,
		5,100,0,0,325,326,5,101,0,0,326,327,5,114,0,0,327,328,5,105,0,0,328,329,
		5,118,0,0,329,330,5,101,0,0,330,331,5,100,0,0,331,80,1,0,0,0,332,333,5,
		111,0,0,333,334,5,112,0,0,334,335,5,112,0,0,335,336,5,111,0,0,336,337,
		5,115,0,0,337,338,5,105,0,0,338,339,5,116,0,0,339,340,5,101,0,0,340,82,
		1,0,0,0,341,342,5,115,0,0,342,343,5,117,0,0,343,344,5,98,0,0,344,345,5,
		115,0,0,345,346,5,101,0,0,346,347,5,116,0,0,347,348,5,115,0,0,348,84,1,
		0,0,0,349,350,5,114,0,0,350,351,5,101,0,0,351,352,5,100,0,0,352,353,5,
		101,0,0,353,354,5,102,0,0,354,355,5,105,0,0,355,356,5,110,0,0,356,357,
		5,101,0,0,357,358,5,115,0,0,358,86,1,0,0,0,359,360,5,46,0,0,360,88,1,0,
		0,0,361,370,5,48,0,0,362,366,2,49,57,0,363,365,2,48,57,0,364,363,1,0,0,
		0,365,368,1,0,0,0,366,364,1,0,0,0,366,367,1,0,0,0,367,370,1,0,0,0,368,
		366,1,0,0,0,369,361,1,0,0,0,369,362,1,0,0,0,370,90,1,0,0,0,371,380,5,48,
		0,0,372,376,2,49,57,0,373,375,2,48,57,0,374,373,1,0,0,0,375,378,1,0,0,
		0,376,374,1,0,0,0,376,377,1,0,0,0,377,380,1,0,0,0,378,376,1,0,0,0,379,
		371,1,0,0,0,379,372,1,0,0,0,380,381,1,0,0,0,381,383,5,46,0,0,382,384,2,
		48,57,0,383,382,1,0,0,0,384,385,1,0,0,0,385,383,1,0,0,0,385,386,1,0,0,
		0,386,92,1,0,0,0,387,389,7,0,0,0,388,387,1,0,0,0,389,390,1,0,0,0,390,388,
		1,0,0,0,390,391,1,0,0,0,391,395,1,0,0,0,392,394,7,1,0,0,393,392,1,0,0,
		0,394,397,1,0,0,0,395,393,1,0,0,0,395,396,1,0,0,0,396,94,1,0,0,0,397,395,
		1,0,0,0,398,400,5,64,0,0,399,401,7,0,0,0,400,399,1,0,0,0,401,402,1,0,0,
		0,402,400,1,0,0,0,402,403,1,0,0,0,403,407,1,0,0,0,404,406,7,1,0,0,405,
		404,1,0,0,0,406,409,1,0,0,0,407,405,1,0,0,0,407,408,1,0,0,0,408,96,1,0,
		0,0,409,407,1,0,0,0,410,414,5,34,0,0,411,413,3,109,54,0,412,411,1,0,0,
		0,413,416,1,0,0,0,414,412,1,0,0,0,414,415,1,0,0,0,415,417,1,0,0,0,416,
		414,1,0,0,0,417,427,5,34,0,0,418,422,5,39,0,0,419,421,3,113,56,0,420,419,
		1,0,0,0,421,424,1,0,0,0,422,420,1,0,0,0,422,423,1,0,0,0,423,425,1,0,0,
		0,424,422,1,0,0,0,425,427,5,39,0,0,426,410,1,0,0,0,426,418,1,0,0,0,427,
		98,1,0,0,0,428,430,7,2,0,0,429,428,1,0,0,0,430,431,1,0,0,0,431,429,1,0,
		0,0,431,432,1,0,0,0,432,433,1,0,0,0,433,434,6,49,0,0,434,100,1,0,0,0,435,
		436,5,13,0,0,436,439,5,10,0,0,437,439,7,3,0,0,438,435,1,0,0,0,438,437,
		1,0,0,0,439,440,1,0,0,0,440,441,6,50,0,0,441,102,1,0,0,0,442,443,5,47,
		0,0,443,444,5,47,0,0,444,448,1,0,0,0,445,447,8,3,0,0,446,445,1,0,0,0,447,
		450,1,0,0,0,448,446,1,0,0,0,448,449,1,0,0,0,449,451,1,0,0,0,450,448,1,
		0,0,0,451,452,6,51,0,0,452,104,1,0,0,0,453,454,5,47,0,0,454,455,5,42,0,
		0,455,459,1,0,0,0,456,458,9,0,0,0,457,456,1,0,0,0,458,461,1,0,0,0,459,
		460,1,0,0,0,459,457,1,0,0,0,460,462,1,0,0,0,461,459,1,0,0,0,462,463,5,
		42,0,0,463,464,5,47,0,0,464,465,1,0,0,0,465,466,6,52,0,0,466,106,1,0,0,
		0,467,468,9,0,0,0,468,469,1,0,0,0,469,470,6,53,0,0,470,108,1,0,0,0,471,
		475,3,111,55,0,472,475,3,117,58,0,473,475,3,121,60,0,474,471,1,0,0,0,474,
		472,1,0,0,0,474,473,1,0,0,0,475,110,1,0,0,0,476,477,8,4,0,0,477,112,1,
		0,0,0,478,482,3,115,57,0,479,482,3,117,58,0,480,482,3,121,60,0,481,478,
		1,0,0,0,481,479,1,0,0,0,481,480,1,0,0,0,482,114,1,0,0,0,483,484,8,5,0,
		0,484,116,1,0,0,0,485,486,5,92,0,0,486,487,3,119,59,0,487,118,1,0,0,0,
		488,489,7,6,0,0,489,120,1,0,0,0,490,491,5,92,0,0,491,492,5,117,0,0,492,
		493,1,0,0,0,493,494,3,123,61,0,494,495,3,123,61,0,495,496,3,123,61,0,496,
		497,3,123,61,0,497,511,1,0,0,0,498,499,5,92,0,0,499,500,5,85,0,0,500,501,
		1,0,0,0,501,502,3,123,61,0,502,503,3,123,61,0,503,504,3,123,61,0,504,505,
		3,123,61,0,505,506,3,123,61,0,506,507,3,123,61,0,507,508,3,123,61,0,508,
		509,3,123,61,0,509,511,1,0,0,0,510,490,1,0,0,0,510,498,1,0,0,0,511,122,
		1,0,0,0,512,513,7,7,0,0,513,124,1,0,0,0,20,0,366,369,376,379,385,390,395,
		402,407,414,422,426,431,438,448,459,474,481,510,1,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace MetaDslx.Languages.MetaModel.Compiler
